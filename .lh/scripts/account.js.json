{
    "sourceFile": "scripts/account.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1756583125486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756583144818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,17 +150,14 @@\n     // --- Lógica para Salvar as Alterações ---\r\n     function initializeSaveButtons() {\r\n         const handleSave = async (formId, button) => {\r\n             const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\r\n-            if (!loggedInUser || !loggedInUser.token) return;\r\n-\r\n+            if (!loggedInUser) return;\r\n             const originalButtonHtml = button.innerHTML;\r\n             button.disabled = true;\r\n             button.innerHTML = `<i class=\"fas fa-spinner fa-spin mr-2\"></i>A Salvar...`;\r\n-\r\n             const form = document.getElementById(formId);\r\n             const updateData = {};\r\n-\r\n             if (formId === 'form-pf') {\r\n                 updateData.nomeCompleto = form.querySelector('#name').value;\r\n                 updateData.email = form.querySelector('#email-pf').value;\r\n                 const dataNascimentoInput = form.querySelector('#data_nascimento').value;\r\n@@ -170,51 +167,41 @@\n                         updateData.dataNascimento = `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n                     }\r\n                 }\r\n                 updateData.genero = form.querySelector('#genero').value;\r\n-                updateData.celular = (form.querySelector('#ddd-cel').value + form.querySelector('#celular').value).replace(/\\D/g, '');\r\n-                updateData.telefone = (form.querySelector('#ddd-tel').value + form.querySelector('#telefone').value).replace(/\\D/g, '');\r\n+                const dddCel = form.querySelector('#ddd-cel').value;\r\n+                const celularNum = form.querySelector('#celular').value;\r\n+                updateData.celular = (dddCel + celularNum).replace(/\\D/g, '');\r\n+                const dddTel = form.querySelector('#ddd-tel').value;\r\n+                const telNum = form.querySelector('#telefone').value;\r\n+                updateData.telefone = (dddTel + telNum).replace(/\\D/g, '');\r\n             } else if (formId === 'form-pj') {\r\n                 updateData.razaoSocial = form.querySelector('#razao_social').value;\r\n                 updateData.email = form.querySelector('#email-pj').value;\r\n                 updateData.nomeContato = form.querySelector('#nome_contato').value;\r\n-                updateData.celular = (form.querySelector('#ddd-cel-pj').value + form.querySelector('#celular-pj').value).replace(/\\D/g, '');\r\n-                updateData.telefone = (form.querySelector('#ddd-tel-pj').value + form.querySelector('#telefone-pj').value).replace(/\\D/g, '');\r\n+                const dddCelPj = form.querySelector('#ddd-cel-pj').value;\r\n+                const celularNumPj = form.querySelector('#celular-pj').value;\r\n+                updateData.celular = (dddCelPj + celularNumPj).replace(/\\D/g, '');\r\n+                const dddTelPj = form.querySelector('#ddd-tel-pj').value;\r\n+                const telNumPj = form.querySelector('#telefone-pj').value;\r\n+                updateData.telefone = (dddTelPj + telNumPj).replace(/\\D/g, '');\r\n                 updateData.inscricaoEstadual = form.querySelector('#ie').value;\r\n                 updateData.isentoIE = form.querySelector('#isento_ie').checked;\r\n                 updateData.estadoIE = form.querySelector('#estado_ie').value;\r\n             }\r\n \r\n             try {\r\n                 const response = await fetch(`${API_CONFIG.BASE_URL}/users/${loggedInUser.id}`, {\r\n                     method: 'PUT',\r\n-                    headers: {\r\n-                        'Content-Type': 'application/json',\r\n-                        'Authorization': `Bearer ${loggedInUser.token}`\r\n-                    },\r\n+                    headers: { 'Content-Type': 'application/json' },\r\n                     body: JSON.stringify(updateData),\r\n                 });\r\n-\r\n                 const result = await response.json();\r\n                 if (!response.ok) throw new Error(result.message);\r\n-\r\n-                localStorage.setItem('loggedInUser', JSON.stringify({\r\n-                    ...loggedInUser,\r\n-                    ...result.user // mantém token e atualiza dados\r\n-                }));\r\n-\r\n-                showModal({\r\n-                    title: 'Sucesso!',\r\n-                    message: 'Os seus dados foram atualizados.',\r\n-                    confirmText: 'OK',\r\n-                    onConfirm: () => window.location.reload()\r\n-                });\r\n+                localStorage.setItem('loggedInUser', JSON.stringify(result.user));\r\n+                showModal({ title: 'Sucesso!', message: 'Os seus dados foram atualizados.', confirmText: 'OK', onConfirm: () => window.location.reload() });\r\n             } catch (error) {\r\n-                showModal({\r\n-                    title: 'Erro',\r\n-                    message: `Não foi possível salvar as alterações: ${error.message}`,\r\n-                    confirmText: 'Tentar Novamente'\r\n-                });\r\n+                showModal({ title: 'Erro', message: `Não foi possível salvar as alterações: ${error.message}`, confirmText: 'Tentar Novamente' });\r\n             } finally {\r\n                 button.disabled = false;\r\n                 button.innerHTML = originalButtonHtml;\r\n             }\r\n"
                },
                {
                    "date": 1756583238018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,12 @@\n                     body: JSON.stringify(updateData),\r\n                 });\r\n                 const result = await response.json();\r\n                 if (!response.ok) throw new Error(result.message);\r\n-                localStorage.setItem('loggedInUser', JSON.stringify(result.user));\r\n+                localStorage.setItem('loggedInUser', JSON.stringify({\r\n+                    ...loggedInUser,\r\n+                    ...result.user\r\n+                }));\r\n                 showModal({ title: 'Sucesso!', message: 'Os seus dados foram atualizados.', confirmText: 'OK', onConfirm: () => window.location.reload() });\r\n             } catch (error) {\r\n                 showModal({ title: 'Erro', message: `Não foi possível salvar as alterações: ${error.message}`, confirmText: 'Tentar Novamente' });\r\n             } finally {\r\n"
                },
                {
                    "date": 1756583349130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,12 @@\n \r\n             try {\r\n                 const response = await fetch(`${API_CONFIG.BASE_URL}/users/${loggedInUser.id}`, {\r\n                     method: 'PUT',\r\n-                    headers: { 'Content-Type': 'application/json' },\r\n+                    headers: { \r\n+                        'Content-Type': 'application/json',\r\n+                        'Authorization': `Bearer ${loggedInUser.token}` // <--- ESSENCIAL\r\n+                    },\r\n                     body: JSON.stringify(updateData),\r\n                 });\r\n                 const result = await response.json();\r\n                 if (!response.ok) throw new Error(result.message);\r\n"
                },
                {
                    "date": 1756583451541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,10 +200,11 @@\n                 });\r\n                 const result = await response.json();\r\n                 if (!response.ok) throw new Error(result.message);\r\n                 localStorage.setItem('loggedInUser', JSON.stringify({\r\n-                    ...loggedInUser,\r\n-                    ...result.user\r\n+                    ...result.user,\r\n+                    id: loggedInUser.id,\r\n+                    token: loggedInUser.token\r\n                 }));\r\n                 showModal({ title: 'Sucesso!', message: 'Os seus dados foram atualizados.', confirmText: 'OK', onConfirm: () => window.location.reload() });\r\n             } catch (error) {\r\n                 showModal({ title: 'Erro', message: `Não foi possível salvar as alterações: ${error.message}`, confirmText: 'Tentar Novamente' });\r\n"
                },
                {
                    "date": 1756583600736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,11 +200,11 @@\n                 });\r\n                 const result = await response.json();\r\n                 if (!response.ok) throw new Error(result.message);\r\n                 localStorage.setItem('loggedInUser', JSON.stringify({\r\n-                    ...result.user,\r\n-                    id: loggedInUser.id,\r\n-                    token: loggedInUser.token\r\n+                id: result.user._id,\r\n+                token: result.token,\r\n+                ...result.user\r\n                 }));\r\n                 showModal({ title: 'Sucesso!', message: 'Os seus dados foram atualizados.', confirmText: 'OK', onConfirm: () => window.location.reload() });\r\n             } catch (error) {\r\n                 showModal({ title: 'Erro', message: `Não foi possível salvar as alterações: ${error.message}`, confirmText: 'Tentar Novamente' });\r\n"
                },
                {
                    "date": 1756583779306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,11 +200,11 @@\n                 });\r\n                 const result = await response.json();\r\n                 if (!response.ok) throw new Error(result.message);\r\n                 localStorage.setItem('loggedInUser', JSON.stringify({\r\n-                id: result.user._id,\r\n-                token: result.token,\r\n-                ...result.user\r\n+                ...result.user,\r\n+                id: loggedInUser.id,\r\n+                token: loggedInUser.token\r\n                 }));\r\n                 showModal({ title: 'Sucesso!', message: 'Os seus dados foram atualizados.', confirmText: 'OK', onConfirm: () => window.location.reload() });\r\n             } catch (error) {\r\n                 showModal({ title: 'Erro', message: `Não foi possível salvar as alterações: ${error.message}`, confirmText: 'Tentar Novamente' });\r\n"
                }
            ],
            "date": 1756583125486,
            "name": "Commit-0",
            "content": "function initializeAccountPage() {\r\n    // --- Elementos Globais da Página ---\r\n    const tabPf = document.getElementById('tab-pf');\r\n    const tabPj = document.getElementById('tab-pj');\r\n    const formPf = document.getElementById('form-pf');\r\n    const formPj = document.getElementById('form-pj');\r\n\r\n    // --- Lógica das Abas ---\r\n    function showPfForm() {\r\n        if (!formPf || !formPj) return;\r\n        formPj.classList.add('hidden');\r\n        formPf.classList.remove('hidden');\r\n        tabPf.classList.add('border-primary', 'text-primary', 'font-semibold');\r\n        tabPf.classList.remove('border-transparent', 'text-gray-500', 'font-medium');\r\n        tabPj.classList.add('border-transparent', 'text-gray-500', 'font-medium');\r\n        tabPj.classList.remove('border-primary', 'text-primary', 'font-semibold');\r\n    }\r\n\r\n    function showPjForm() {\r\n        if (!formPf || !formPj) return;\r\n        formPf.classList.add('hidden');\r\n        formPj.classList.remove('hidden');\r\n        tabPj.classList.add('border-primary', 'text-primary', 'font-semibold');\r\n        tabPj.classList.remove('border-transparent', 'text-gray-500', 'font-medium');\r\n        tabPf.classList.add('border-transparent', 'text-gray-500', 'font-medium');\r\n        tabPf.classList.remove('border-primary', 'text-primary', 'font-semibold');\r\n    }\r\n\r\n    if (tabPf && tabPj) {\r\n        tabPf.addEventListener('click', showPfForm);\r\n        tabPj.addEventListener('click', showPjForm);\r\n    }\r\n\r\n    // --- Lógica para Popular os Dados do Utilizador ---\r\n    async function populateUserData() {\r\n        const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\r\n\r\n        if (!loggedInUser || !loggedInUser.id || !loggedInUser.token) {\r\n            showModal({\r\n                title: 'Atenção',\r\n                message: 'Você precisa estar logado para acessar esta página.',\r\n                confirmText: 'Ir para Login',\r\n                onConfirm: () => { window.location.href = '/pages/login.html'; }\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${API_CONFIG.BASE_URL}/users/${loggedInUser.id}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${loggedInUser.token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Não foi possível buscar os dados do utilizador.');\r\n            const userData = await response.json();\r\n\r\n            const tabsNav = document.getElementById('account-type-tabs');\r\n            if (tabsNav) tabsNav.parentElement.classList.add('hidden');\r\n\r\n            if (userData.tipoConta === 'pessoa_juridica') {\r\n                populatePjForm(userData);\r\n                showPjForm();\r\n            } else {\r\n                populatePfForm(userData);\r\n                showPfForm();\r\n            }\r\n            applyMasks();\r\n        } catch (error) {\r\n            console.error('Erro:', error);\r\n            showModal({ title: 'Erro', message: error.message, confirmText: 'OK' });\r\n        }\r\n    }\r\n\r\n    function populatePfForm(data) {\r\n        document.getElementById('name').value = data.nomeCompleto || '';\r\n        document.getElementById('cpf').value = data.cpf || '';\r\n        document.getElementById('email-pf').value = data.email || '';\r\n        document.getElementById('genero').value = data.genero || '';\r\n        if (data.dataNascimento) {\r\n            const date = new Date(data.dataNascimento);\r\n            const day = String(date.getUTCDate()).padStart(2, '0');\r\n            const month = String(date.getUTCMonth() + 1).padStart(2, '0');\r\n            const year = date.getUTCFullYear();\r\n            document.getElementById('data_nascimento').value = `${day}/${month}/${year}`;\r\n        }\r\n\r\n        if (data.celular) {\r\n            const cleanCelular = String(data.celular).replace(/\\D/g, '');\r\n            if (cleanCelular.length >= 10) {\r\n                document.getElementById('ddd-cel').value = cleanCelular.substring(0, 2);\r\n                document.getElementById('celular').value = cleanCelular.substring(2);\r\n            }\r\n        }\r\n\r\n        if (data.telefone) {\r\n            const cleanTelefone = String(data.telefone).replace(/\\D/g, '');\r\n            if (cleanTelefone.length >= 10) {\r\n                document.getElementById('ddd-tel').value = cleanTelefone.substring(0, 2);\r\n                document.getElementById('telefone').value = cleanTelefone.substring(2);\r\n            }\r\n        }\r\n    }\r\n\r\n    function populatePjForm(data) {\r\n        document.getElementById('razao_social').value = data.razaoSocial || '';\r\n        document.getElementById('cnpj').value = data.cnpj || '';\r\n        document.getElementById('email-pj').value = data.email || '';\r\n        document.getElementById('nome_contato').value = data.nomeContato || '';\r\n        \r\n        if (data.celular) {\r\n            const cleanCelular = String(data.celular).replace(/\\D/g, '');\r\n            if (cleanCelular.length >= 10) {\r\n                document.getElementById('ddd-cel-pj').value = cleanCelular.substring(0, 2);\r\n                document.getElementById('celular-pj').value = cleanCelular.substring(2);\r\n            }\r\n        }\r\n        if (data.telefone) {\r\n            const cleanTelefone = String(data.telefone).replace(/\\D/g, '');\r\n            if (cleanTelefone.length >= 10) {\r\n                document.getElementById('ddd-tel-pj').value = cleanTelefone.substring(0, 2);\r\n                document.getElementById('telefone-pj').value = cleanTelefone.substring(2);\r\n            }\r\n        }\r\n        \r\n        document.getElementById('ie').value = data.inscricaoEstadual || '';\r\n        document.getElementById('isento_ie').checked = data.isentoIE || false;\r\n        document.getElementById('estado_ie').value = data.estadoIE || '';\r\n    }\r\n\r\n    // --- Lógica das Máscaras ---\r\n    function applyMasks() {\r\n        const masksToApply = [\r\n            { selector: '#cpf', mask: '000.000.000-00' },\r\n            { selector: '#cnpj', mask: '00.000.000/0000-00' },\r\n            { selector: '#celular', mask: '00000-0000' },\r\n            { selector: '#celular-pj', mask: '00000-0000' },\r\n            { selector: '#telefone', mask: '0000-0000' },\r\n            { selector: '#telefone-pj', mask: '0000-0000' }\r\n        ];\r\n        masksToApply.forEach(item => {\r\n            const element = document.querySelector(item.selector);\r\n            if (element) {\r\n                IMask(element, { mask: item.mask });\r\n            }\r\n        });\r\n    }\r\n\r\n    // --- Lógica para Salvar as Alterações ---\r\n    function initializeSaveButtons() {\r\n        const handleSave = async (formId, button) => {\r\n            const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\r\n            if (!loggedInUser || !loggedInUser.token) return;\r\n\r\n            const originalButtonHtml = button.innerHTML;\r\n            button.disabled = true;\r\n            button.innerHTML = `<i class=\"fas fa-spinner fa-spin mr-2\"></i>A Salvar...`;\r\n\r\n            const form = document.getElementById(formId);\r\n            const updateData = {};\r\n\r\n            if (formId === 'form-pf') {\r\n                updateData.nomeCompleto = form.querySelector('#name').value;\r\n                updateData.email = form.querySelector('#email-pf').value;\r\n                const dataNascimentoInput = form.querySelector('#data_nascimento').value;\r\n                if (dataNascimentoInput) {\r\n                    const parts = dataNascimentoInput.split('/');\r\n                    if (parts.length === 3) {\r\n                        updateData.dataNascimento = `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n                    }\r\n                }\r\n                updateData.genero = form.querySelector('#genero').value;\r\n                updateData.celular = (form.querySelector('#ddd-cel').value + form.querySelector('#celular').value).replace(/\\D/g, '');\r\n                updateData.telefone = (form.querySelector('#ddd-tel').value + form.querySelector('#telefone').value).replace(/\\D/g, '');\r\n            } else if (formId === 'form-pj') {\r\n                updateData.razaoSocial = form.querySelector('#razao_social').value;\r\n                updateData.email = form.querySelector('#email-pj').value;\r\n                updateData.nomeContato = form.querySelector('#nome_contato').value;\r\n                updateData.celular = (form.querySelector('#ddd-cel-pj').value + form.querySelector('#celular-pj').value).replace(/\\D/g, '');\r\n                updateData.telefone = (form.querySelector('#ddd-tel-pj').value + form.querySelector('#telefone-pj').value).replace(/\\D/g, '');\r\n                updateData.inscricaoEstadual = form.querySelector('#ie').value;\r\n                updateData.isentoIE = form.querySelector('#isento_ie').checked;\r\n                updateData.estadoIE = form.querySelector('#estado_ie').value;\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(`${API_CONFIG.BASE_URL}/users/${loggedInUser.id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${loggedInUser.token}`\r\n                    },\r\n                    body: JSON.stringify(updateData),\r\n                });\r\n\r\n                const result = await response.json();\r\n                if (!response.ok) throw new Error(result.message);\r\n\r\n                localStorage.setItem('loggedInUser', JSON.stringify({\r\n                    ...loggedInUser,\r\n                    ...result.user // mantém token e atualiza dados\r\n                }));\r\n\r\n                showModal({\r\n                    title: 'Sucesso!',\r\n                    message: 'Os seus dados foram atualizados.',\r\n                    confirmText: 'OK',\r\n                    onConfirm: () => window.location.reload()\r\n                });\r\n            } catch (error) {\r\n                showModal({\r\n                    title: 'Erro',\r\n                    message: `Não foi possível salvar as alterações: ${error.message}`,\r\n                    confirmText: 'Tentar Novamente'\r\n                });\r\n            } finally {\r\n                button.disabled = false;\r\n                button.innerHTML = originalButtonHtml;\r\n            }\r\n        };\r\n\r\n        const savePfBtn = document.getElementById('save-pf-btn');\r\n        if (savePfBtn) savePfBtn.addEventListener('click', () => handleSave('form-pf', savePfBtn));\r\n        const savePjBtn = document.getElementById('save-pj-btn');\r\n        if (savePjBtn) savePjBtn.addEventListener('click', () => handleSave('form-pj', savePjBtn));\r\n    }\r\n\r\n    // Execução inicial\r\n    populateUserData();\r\n    initializeSaveButtons();\r\n}"
        }
    ]
}