{
    "sourceFile": "scripts/alterar-senha.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1756831922714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756834445875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,87 +1,130 @@\n // scripts/alterar-senha.js\r\n document.addEventListener('DOMContentLoaded', () => {\r\n   const logged = JSON.parse(localStorage.getItem('loggedInUser') || 'null');\r\n   if (!logged?.id || !logged?.token) {\r\n-    showModal({ title: 'Atenção', message: 'Faça login para continuar.', confirmText: 'Login', onConfirm: () => location.href='/pages/login.html' });\r\n+    showModal({\r\n+      title: 'Atenção',\r\n+      message: 'Faça login para continuar.',\r\n+      confirmText: 'Login',\r\n+      onConfirm: () => location.href = '/pages/login.html'\r\n+    });\r\n     return;\r\n   }\r\n \r\n-  const badge = document.getElementById('email-status-badge');\r\n-  const btnVerify = document.getElementById('btn-send-verify');\r\n-  const btnReset  = document.getElementById('btn-request-reset');\r\n-  const nameSpan  = document.getElementById('sidebar-username');\r\n+  // elementos\r\n+  const nameSpan = document.getElementById('sidebar-username');\r\n+  const emailBadge = document.getElementById('email-status-badge');\r\n+  const emailMaskedEl = document.getElementById('email-masked');\r\n+  const smsMaskedEl = document.getElementById('sms-masked');\r\n+  const btnReceber = document.getElementById('btn-receber');\r\n \r\n-  function setBadge(verified) {\r\n+  const methodGroup = document.getElementById('method-group');\r\n+  const cardEmail = methodGroup.querySelector('[data-card=\"email\"]');\r\n+  const cardSms = methodGroup.querySelector('[data-card=\"sms\"]');\r\n+  const radioEmail = document.getElementById('method-email');\r\n+  const radioSms = document.getElementById('method-sms');\r\n+\r\n+  // estado\r\n+  let user = null;\r\n+\r\n+  // utils\r\n+  const headersAuth = { 'Authorization': `Bearer ${logged.token}`, 'Content-Type': 'application/json' };\r\n+\r\n+  function maskEmail(email = '') {\r\n+    const [l, d] = email.split('@');\r\n+    if (!l || !d) return email || '—';\r\n+    const keep = Math.min(3, l.length);\r\n+    return `${l.slice(0, keep)}${'*'.repeat(Math.max(0, l.length - keep))}@${d}`;\r\n+  }\r\n+\r\n+  function maskPhone(ddd, num) {\r\n+    const only = String((ddd || '') + (num || '')).replace(/\\D/g, '');\r\n+    if (!only) return 'Não cadastrado';\r\n+    const last4 = only.slice(-4);\r\n+    return `*******${last4}`;\r\n+  }\r\n+\r\n+  function setSelected(card) {\r\n+    [cardEmail, cardSms].forEach(c => c.classList.remove('selected'));\r\n+    card.classList.add('selected');\r\n+  }\r\n+\r\n+  function setEmailBadge(verified) {\r\n     if (verified) {\r\n-      badge.textContent = 'Verificado';\r\n-      badge.className = 'inline-block text-xs px-2 py-1 rounded bg-emerald-100 text-emerald-700';\r\n-      btnVerify.classList.add('hidden');\r\n-      btnReset.disabled = false;\r\n-      btnReset.classList.remove('bg-gray-200','text-gray-500','cursor-not-allowed');\r\n-      btnReset.classList.add('bg-emerald-600','text-white','hover:bg-emerald-700');\r\n+      emailBadge.textContent = 'Verificado';\r\n+      emailBadge.className = 'inline-block text-xs px-2 py-1 rounded bg-emerald-100 text-emerald-700';\r\n+      btnReceber.disabled = false;\r\n+      btnReceber.classList.remove('opacity-60', 'cursor-not-allowed');\r\n     } else {\r\n-      badge.textContent = 'Não verificado';\r\n-      badge.className = 'inline-block text-xs px-2 py-1 rounded bg-red-100 text-red-700';\r\n-      btnVerify.classList.remove('hidden');\r\n-      btnReset.disabled = true;\r\n-      btnReset.classList.add('bg-gray-200','text-gray-500','cursor-not-allowed');\r\n-      btnReset.classList.remove('bg-emerald-600','text-white','hover:bg-emerald-700');\r\n+      emailBadge.textContent = 'Não verificado';\r\n+      emailBadge.className = 'inline-block text-xs px-2 py-1 rounded bg-red-100 text-red-700';\r\n     }\r\n   }\r\n \r\n+  // listeners visual dos radios\r\n+  methodGroup.addEventListener('click', (e) => {\r\n+    const wrapper = e.target.closest('[data-card]');\r\n+    if (!wrapper) return;\r\n+    if (wrapper.dataset.card === 'email') {\r\n+      radioEmail.checked = true; setSelected(cardEmail);\r\n+    } else {\r\n+      radioSms.checked = true; setSelected(cardSms);\r\n+    }\r\n+  });\r\n+\r\n   async function loadUser() {\r\n-    const res = await fetch(`${API_CONFIG.BASE_URL}/users/${logged.id}`, {\r\n-      headers: {\r\n-        'Authorization': `Bearer ${logged.token}`,\r\n-        'Content-Type': 'application/json'\r\n-      }\r\n-    });\r\n-    if (!res.ok) throw new Error('Falha ao buscar usuário');\r\n-    const user = await res.json();\r\n+    const r = await fetch(`${API_CONFIG.BASE_URL}/users/${logged.id}`, { headers: headersAuth });\r\n+    if (!r.ok) throw new Error('Falha ao carregar usuário');\r\n+    user = await r.json();\r\n+\r\n     nameSpan.textContent = user.nomeCompleto || user.razaoSocial || user.email || '—';\r\n-    setBadge(!!user.emailVerified);\r\n+    emailMaskedEl.textContent = maskEmail(user.email);\r\n+    smsMaskedEl.textContent = maskPhone(user.celularDDD || user.dddCelular, user.celularNumero || user.celular);\r\n+\r\n+    setEmailBadge(!!user.emailVerified);\r\n+\r\n+    // default: email selecionado\r\n+    radioEmail.checked = true; setSelected(cardEmail);\r\n   }\r\n \r\n-  btnVerify.addEventListener('click', async () => {\r\n-    btnVerify.disabled = true;\r\n-    try {\r\n-      const r = await fetch(`${API_CONFIG.BASE_URL}/auth/email/send-verification`, {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Authorization': `Bearer ${logged.token}`,\r\n-          'Content-Type': 'application/json'\r\n-        }\r\n-      });\r\n-      if (!r.ok) throw new Error('Não foi possível enviar o e-mail.');\r\n-      showToast?.('Enviamos um e-mail de verificação.', 'success');\r\n-    } catch (e) {\r\n-      console.error(e); showToast?.(e.message || 'Erro ao enviar e-mail.', 'error');\r\n-    } finally {\r\n-      btnVerify.disabled = false;\r\n+  // ação principal\r\n+  btnReceber.addEventListener('click', async () => {\r\n+    const method = radioSms.checked ? 'sms' : 'email';\r\n+\r\n+    if (method === 'sms') {\r\n+      showToast?.('SMS indisponível no momento.', 'warning');\r\n+      return;\r\n     }\r\n-  });\r\n \r\n-  btnReset.addEventListener('click', async () => {\r\n-    if (btnReset.disabled) return;\r\n-    btnReset.disabled = true;\r\n+    // método: e-mail\r\n+    btnReceber.disabled = true; btnReceber.classList.add('opacity-60','cursor-not-allowed');\r\n+\r\n     try {\r\n-      const r = await fetch(`${API_CONFIG.BASE_URL}/auth/password/request`, {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Authorization': `Bearer ${logged.token}`,\r\n-          'Content-Type': 'application/json'\r\n-        }\r\n-      });\r\n-      if (!r.ok) throw new Error('Não foi possível solicitar a alteração.');\r\n-      showToast?.('Enviamos um link para alterar sua senha.', 'success');\r\n+      if (!user.emailVerified) {\r\n+        // envia verificação\r\n+        const r = await fetch(`${API_CONFIG.BASE_URL}/auth/email/send-verification`, {\r\n+          method: 'POST', headers: headersAuth\r\n+        });\r\n+        if (!r.ok) throw new Error('Não foi possível enviar a verificação.');\r\n+        showToast?.('Enviamos um e-mail de verificação. Verifique sua caixa de entrada.', 'success');\r\n+      } else {\r\n+        // envia link de redefinição\r\n+        const r = await fetch(`${API_CONFIG.BASE_URL}/auth/password/request`, {\r\n+          method: 'POST', headers: headersAuth\r\n+        });\r\n+        if (!r.ok) throw new Error('Não foi possível enviar o link de alteração.');\r\n+        showToast?.('Enviamos um e-mail com o link para alterar sua senha.', 'success');\r\n+      }\r\n     } catch (e) {\r\n-      console.error(e); showToast?.(e.message || 'Erro ao solicitar alteração.', 'error');\r\n+      console.error(e);\r\n+      showToast?.(e.message || 'Erro ao processar sua solicitação.', 'error');\r\n     } finally {\r\n-      btnReset.disabled = false;\r\n+      btnReceber.disabled = false; btnReceber.classList.remove('opacity-60','cursor-not-allowed');\r\n     }\r\n   });\r\n \r\n+  // start\r\n   loadUser().catch(err => {\r\n     console.error(err);\r\n     showModal({ title: 'Erro', message: 'Não foi possível carregar seus dados.' });\r\n   });\r\n"
                },
                {
                    "date": 1756841685739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     return;\r\n   }\r\n \r\n   // elementos\r\n-  const nameSpan = document.getElementById('sidebar-username');\r\n+  const nameSpan = document.getElementById('sidebar-user-name');\r\n   const emailBadge = document.getElementById('email-status-badge');\r\n   const emailMaskedEl = document.getElementById('email-masked');\r\n   const smsMaskedEl = document.getElementById('sms-masked');\r\n   const btnReceber = document.getElementById('btn-receber');\r\n"
                },
                {
                    "date": 1756841693954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     return;\r\n   }\r\n \r\n   // elementos\r\n-  const nameSpan = document.getElementById('sidebar-user-name');\r\n+  const nameSpan = document.getElementById('sidebar-username');\r\n   const emailBadge = document.getElementById('email-status-badge');\r\n   const emailMaskedEl = document.getElementById('email-masked');\r\n   const smsMaskedEl = document.getElementById('sms-masked');\r\n   const btnReceber = document.getElementById('btn-receber');\r\n"
                },
                {
                    "date": 1756841938539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,11 @@\n     return;\r\n   }\r\n \r\n   // elementos\r\n-  const nameSpan = document.getElementById('sidebar-username');\r\n+  const nameSpan =\r\n+    document.getElementById('sidebar-username') ||\r\n+    document.querySelector('[data-user-name]');\r\n   const emailBadge = document.getElementById('email-status-badge');\r\n   const emailMaskedEl = document.getElementById('email-masked');\r\n   const smsMaskedEl = document.getElementById('sms-masked');\r\n   const btnReceber = document.getElementById('btn-receber');\r\n@@ -76,9 +78,9 @@\n     const r = await fetch(`${API_CONFIG.BASE_URL}/users/${logged.id}`, { headers: headersAuth });\r\n     if (!r.ok) throw new Error('Falha ao carregar usuário');\r\n     user = await r.json();\r\n \r\n-    nameSpan.textContent = user.nomeCompleto || user.razaoSocial || user.email || '—';\r\n+    if (nameSpan) nameSpan.textContent = user?.name || logged?.name || '—';\r\n     emailMaskedEl.textContent = maskEmail(user.email);\r\n     smsMaskedEl.textContent = maskPhone(user.celularDDD || user.dddCelular, user.celularNumero || user.celular);\r\n \r\n     setEmailBadge(!!user.emailVerified);\r\n"
                }
            ],
            "date": 1756831922714,
            "name": "Commit-0",
            "content": "// scripts/alterar-senha.js\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const logged = JSON.parse(localStorage.getItem('loggedInUser') || 'null');\r\n  if (!logged?.id || !logged?.token) {\r\n    showModal({ title: 'Atenção', message: 'Faça login para continuar.', confirmText: 'Login', onConfirm: () => location.href='/pages/login.html' });\r\n    return;\r\n  }\r\n\r\n  const badge = document.getElementById('email-status-badge');\r\n  const btnVerify = document.getElementById('btn-send-verify');\r\n  const btnReset  = document.getElementById('btn-request-reset');\r\n  const nameSpan  = document.getElementById('sidebar-username');\r\n\r\n  function setBadge(verified) {\r\n    if (verified) {\r\n      badge.textContent = 'Verificado';\r\n      badge.className = 'inline-block text-xs px-2 py-1 rounded bg-emerald-100 text-emerald-700';\r\n      btnVerify.classList.add('hidden');\r\n      btnReset.disabled = false;\r\n      btnReset.classList.remove('bg-gray-200','text-gray-500','cursor-not-allowed');\r\n      btnReset.classList.add('bg-emerald-600','text-white','hover:bg-emerald-700');\r\n    } else {\r\n      badge.textContent = 'Não verificado';\r\n      badge.className = 'inline-block text-xs px-2 py-1 rounded bg-red-100 text-red-700';\r\n      btnVerify.classList.remove('hidden');\r\n      btnReset.disabled = true;\r\n      btnReset.classList.add('bg-gray-200','text-gray-500','cursor-not-allowed');\r\n      btnReset.classList.remove('bg-emerald-600','text-white','hover:bg-emerald-700');\r\n    }\r\n  }\r\n\r\n  async function loadUser() {\r\n    const res = await fetch(`${API_CONFIG.BASE_URL}/users/${logged.id}`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${logged.token}`,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    if (!res.ok) throw new Error('Falha ao buscar usuário');\r\n    const user = await res.json();\r\n    nameSpan.textContent = user.nomeCompleto || user.razaoSocial || user.email || '—';\r\n    setBadge(!!user.emailVerified);\r\n  }\r\n\r\n  btnVerify.addEventListener('click', async () => {\r\n    btnVerify.disabled = true;\r\n    try {\r\n      const r = await fetch(`${API_CONFIG.BASE_URL}/auth/email/send-verification`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${logged.token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      if (!r.ok) throw new Error('Não foi possível enviar o e-mail.');\r\n      showToast?.('Enviamos um e-mail de verificação.', 'success');\r\n    } catch (e) {\r\n      console.error(e); showToast?.(e.message || 'Erro ao enviar e-mail.', 'error');\r\n    } finally {\r\n      btnVerify.disabled = false;\r\n    }\r\n  });\r\n\r\n  btnReset.addEventListener('click', async () => {\r\n    if (btnReset.disabled) return;\r\n    btnReset.disabled = true;\r\n    try {\r\n      const r = await fetch(`${API_CONFIG.BASE_URL}/auth/password/request`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${logged.token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      if (!r.ok) throw new Error('Não foi possível solicitar a alteração.');\r\n      showToast?.('Enviamos um link para alterar sua senha.', 'success');\r\n    } catch (e) {\r\n      console.error(e); showToast?.(e.message || 'Erro ao solicitar alteração.', 'error');\r\n    } finally {\r\n      btnReset.disabled = false;\r\n    }\r\n  });\r\n\r\n  loadUser().catch(err => {\r\n    console.error(err);\r\n    showModal({ title: 'Erro', message: 'Não foi possível carregar seus dados.' });\r\n  });\r\n});\r\n"
        }
    ]
}