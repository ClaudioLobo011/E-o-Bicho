{
    "sourceFile": "scripts/funcionarios/banhoetosa/filters.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1757800073229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757800104991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-﻿import { state, els, FILTER_STORAGE_KEY, money, getFilteredAgendamentos, getVisibleProfissionais } from './core.js';\n+import { state, els, FILTER_STORAGE_KEY, money, getFilteredAgendamentos, getVisibleProfissionais } from './core.js';\n import { renderGrid } from './grid.js';\n import { enhanceAgendaUI } from './ui.js';\n \n export function loadFiltersFromStorage() {\n"
                },
                {
                    "date": 1757800113292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-﻿import { state, els, FILTER_STORAGE_KEY, money, getFilteredAgendamentos, getVisibleProfissionais } from './core.js';\n+import { state, els, FILTER_STORAGE_KEY, money, getFilteredAgendamentos, getVisibleProfissionais } from './core.js';\n import { renderGrid } from './grid.js';\n import { enhanceAgendaUI } from './ui.js';\n \n export function loadFiltersFromStorage() {\n"
                }
            ],
            "date": 1757800073229,
            "name": "Commit-0",
            "content": "import { state, els, FILTER_STORAGE_KEY, money, getFilteredAgendamentos, getVisibleProfissionais } from './core.js';\nimport { renderGrid } from './grid.js';\nimport { enhanceAgendaUI } from './ui.js';\n\nexport function loadFiltersFromStorage() {\n  try {\n    const raw = JSON.parse(localStorage.getItem(FILTER_STORAGE_KEY) || 'null');\n    if (raw && typeof raw === 'object') {\n      state.filters.statuses = new Set(Array.isArray(raw.statuses) ? raw.statuses : []);\n      state.filters.profIds  = new Set(Array.isArray(raw.profIds)  ? raw.profIds  : []);\n      state.filters.profTipo = typeof raw.profTipo === 'string' ? raw.profTipo : '';\n    }\n  } catch {}\n}\nexport function saveFiltersToStorage() {\n  try {\n    localStorage.setItem(FILTER_STORAGE_KEY, JSON.stringify({\n      statuses: Array.from(state.filters.statuses),\n      profIds : Array.from(state.filters.profIds),\n      profTipo: state.filters.profTipo || ''\n    }));\n  } catch {}\n}\n\nexport function ensureToolbar() {\n  if (!els.agendaList) return;\n  if (document.getElementById('agenda-toolbar')) return;\n  const bar = document.createElement('div');\n  bar.id = 'agenda-toolbar';\n  bar.className = 'sticky top-0 z-30 bg-white/90 backdrop-blur supports-[backdrop-filter]:bg-white/60 border-b border-slate-200 mb-2 flex flex-col gap-2 px-3 py-2 rounded-lg';\n  const kpis = document.createElement('div');\n  kpis.id = 'agenda-kpis';\n  kpis.className = 'flex flex-wrap items-center gap-2';\n  bar.appendChild(kpis);\n  const filters = document.createElement('div');\n  filters.id = 'agenda-filters';\n  filters.className = 'flex flex-wrap items-center gap-2';\n  bar.appendChild(filters);\n  els.agendaList.parentElement.insertBefore(bar, els.agendaList);\n}\n\nfunction computeKPIs(items) {\n  const total = items.length;\n  const previsto = items.reduce((s, i) => s + Number(i.valor || 0), 0);\n  const recebido = items.reduce((s, i) => s + (i.pago ? Number(i.valor || 0) : 0), 0);\n  const pendente = previsto - recebido;\n  return { total, previsto, recebido, pendente };\n}\n\nexport function renderKpis() {\n  const wrap = document.getElementById('agenda-kpis');\n  if (!wrap) return;\n  const all = state.agendamentos || [];\n  const f = getFilteredAgendamentos();\n  const kAll = computeKPIs(all);\n  const kF   = computeKPIs(f);\n  const totalLabel = state.view === 'week' ? 'Total semana' : (state.view === 'month' ? 'Total mÃªs' : 'Total dia');\n  // Build chips de tipo aqui, para filtrar rÃ¡pido\n  const profsAll = state.profissionais || [];\n  const typesOrder = ['esteticista','veterinario'];\n  const labelTipo = (t) => t === 'veterinario' ? 'VeterinÃ¡rio' : 'Esteticista';\n  const byType = new Map();\n  profsAll.forEach(p => { const t = p.tipo || 'esteticista'; byType.set(t, (byType.get(t) || 0) + 1); });\n  const chipsTipos = typesOrder.filter(t => byType.get(t)).map(t => {\n    const active = state.filters.profTipo === t ? 'chip-active' : '';\n    const n = byType.get(t) || 0;\n    return `<button class=\"chip ${active}\" data-kpi=\"tipo\" data-value=\"${t}\">${labelTipo(t)} <span class=\"chip-badge\">${n}</span></button>`;\n  }).join('');\n  const needClear = (state.filters.statuses.size || state.filters.profIds.size || state.filters.profTipo);\n  const clearBtn = needClear ? `<button id=\"kpi-clear\" class=\"chip chip-clear\">Limpar</button>` : '';\n  wrap.innerHTML = `\n    <div class=\"kpi-chip\">${totalLabel}: <strong>${kAll.total}</strong></div>\n    <div class=\"kpi-chip\">Previsto: <strong>${money(kAll.previsto)}</strong></div>\n    <div class=\"kpi-chip\">Recebido: <strong>${money(kAll.recebido)}</strong></div>\n    <div class=\"kpi-chip\">Pendente: <strong>${money(kAll.pendente)}</strong></div>\n    ${ needClear ? `<div class=\"kpi-chip kpi-muted\">Filtrados: <strong>${kF.total}</strong></div>` : '' }\n    <span class=\"chip-sep\"></span>\n    \n  `;\n\n  // Eventos dos chips na barra de KPIs\n  wrap.querySelectorAll('button.chip[data-kpi=\"tipo\"]').forEach(btn => {\n    btn.addEventListener('click', () => {\n      const val = btn.getAttribute('data-value');\n      state.filters.profTipo = (state.filters.profTipo === val) ? '' : val;\n      state.filters.profIds.clear();\n      saveFiltersToStorage();\n      renderKpis();\n      renderFilters();\n      renderGrid();\n      enhanceAgendaUI();\n    });\n  });\n  const clear = document.getElementById('kpi-clear');\n  if (clear) clear.addEventListener('click', () => {\n    state.filters.statuses.clear();\n    state.filters.profIds.clear();\n    state.filters.profTipo = '';\n    saveFiltersToStorage();\n    renderKpis();\n    renderFilters();\n    renderGrid();\n    enhanceAgendaUI();\n  });\n}\n\nexport function renderFilters() {\n  const el = document.getElementById('agenda-filters');\n  if (!el) return;\n\n  // contadores por status\n  const counts = { agendado:0, em_espera:0, em_atendimento:0, finalizado:0 };\n  for (const a of (state.agendamentos || [])) {\n    const key = String(a.status || 'agendado')\n      .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n      .trim().toLowerCase().replace(/[-\\s]+/g,'_');\n    if (counts[key] !== undefined) counts[key] += 1;\n  }\n\n  const statuses = [\n    {key:'agendado', label:'Agend.'},\n    {key:'em_espera', label:'Espera'},\n    {key:'em_atendimento', label:'Atend.'},\n    {key:'finalizado', label:'Fim.'}\n  ];\n\n  const chipsStatus = statuses.map(s => {\n    const active = state.filters.statuses.has(s.key) ? 'chip-active' : '';\n    return `<button class=\"chip ${active}\" data-filter=\"status\" data-value=\"${s.key}\">\n              ${s.label} <span class=\"chip-badge\">${counts[s.key]}</span>\n            </button>`;\n  }).join('');  // profissionais carregados (para chips por nome)\n\n  // Profissionais por tipo (apenas se um tipo estiver selecionado)\n  const byProf = new Map();\n  for (const a of (state.agendamentos || [])) {\n    const id = a.profissionalId || (a.profissional && a.profissional._id) || null;\n    if (!id) continue;\n    const key = String(id);\n    byProf.set(key, (byProf.get(key) || 0) + 1);\n  }\n  const selectedType = state.filters.profTipo || '';\n  const chipsProfPorTipo = selectedType ? (profsAll || [])\n    .filter(p => (p.tipo || 'esteticista') === selectedType)\n    .map(p => {\n      const id = String(p._id);\n      const active = state.filters.profIds.has(id) ? 'chip-active' : '';\n      const n = byProf.get(id) || 0;\n      return `<button class=\"chip ${active}\" data-filter=\"prof\" data-value=\"${id}\" title=\"${p.nome}\">${p.nome} <span class=\"chip-badge\">${n}</span></button>`;\n    }).join('') : '';\n\n  const clearBtn = (state.filters.statuses.size || state.filters.profIds.size || state.filters.profTipo)\n    ? `<button id=\"chip-clear\" class=\"chip chip-clear\" title=\"Limpar filtros\">Limpar</button>` : '';\n\n  el.innerHTML = `\n    <div class=\"flex flex-wrap items-center gap-2 mb-2\">\n      ${chipsStatus}\n      <span class=\"chip-sep\"></span>\n      \n    </div>\n    <div id=\"chips-prof-by-type\" class=\"flex flex-wrap items-center gap-2\" style=\"${selectedType ? '' : 'display:none'}\">\n      ${chipsProfPorTipo}\n    </div>\n  `;\n\n  el.querySelectorAll('.chip[data-filter]').forEach(btn => {\n    btn.addEventListener('click', () => {\n      const type = btn.getAttribute('data-filter');\n      const val  = btn.getAttribute('data-value');\n      if (type === 'status') {\n        state.filters.statuses.has(val) ? state.filters.statuses.delete(val) : state.filters.statuses.add(val);\n      } else if (type === 'tipo') {\n        state.filters.profTipo = (state.filters.profTipo === val) ? '' : val;\n        state.filters.profIds.clear();\n      } else if (type === 'prof') {\n        state.filters.profIds.has(val) ? state.filters.profIds.delete(val) : state.filters.profIds.add(val);\n      }\n      saveFiltersToStorage();\n      renderFilters();\n      renderKpis();\n      renderGrid();\n      enhanceAgendaUI();\n    });\n  });\n\n  const clear = document.getElementById('chip-clear');\n  if (clear) clear.addEventListener('click', () => {\n    state.filters.statuses.clear();\n    state.filters.profIds.clear();\n    state.filters.profTipo = '';\n    saveFiltersToStorage();\n    renderFilters();\n    renderKpis();\n    renderGrid();\n    enhanceAgendaUI();\n  });\n}\n"
        }
    ]
}