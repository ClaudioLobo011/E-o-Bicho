{
    "sourceFile": "scripts/core/main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1757116215042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757116823507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,10 @@\n                 if (!response.ok) throw new Error(`Falha ao carregar ${placeholders[id]}`);\r\n                 element.innerHTML = await response.text();\r\n                 if (id === 'account-sidebar-placeholder') {\r\n                     updateActiveAccountLink();\r\n-                    checkAdminLink(); // reaproveita a mesma função já usada no header\r\n-                    checkFuncionariosLink(); // novo: exibe/oculta link \"Funcionários\" conforme role\r\n+                    checkAdminLink();\r\n+                    checkFuncionariosLink();\r\n                 }\r\n \r\n                 if (id === 'header-placeholder') {\r\n                     initializeHeaderScripts();\r\n@@ -522,42 +522,51 @@\n     show(false);\r\n   }\r\n }\r\n \r\n-async function checkFuncionariosLink() {\r\n-  const funcLink = document.getElementById('funcionarios-link');\r\n-  if (!funcLink) return;\r\n-\r\n-  const show = (ok) => {\r\n-    if (ok) funcLink.classList.remove('hidden');\r\n-    else funcLink.classList.add('hidden');\r\n-  };\r\n-\r\n-  try {\r\n+let __roleCachePromise = null;\r\n+async function __getUserRoleOnce() {\r\n+  if (__roleCachePromise) return __roleCachePromise;\r\n+  __roleCachePromise = (async () => {\r\n     let cached = null;\r\n     try { cached = JSON.parse(localStorage.getItem('loggedInUser') || 'null'); } catch {}\r\n     let role = cached?.role;\r\n-\r\n+    // Se não houver role mas tiver token, confirma no backend\r\n     if (!role && cached?.token) {\r\n-      const resp = await fetch(`${API_CONFIG.BASE_URL}/auth/check`, {\r\n-        headers: { Authorization: `Bearer ${cached.token}` },\r\n-      });\r\n-      if (resp.ok) {\r\n-        const data = await resp.json();\r\n-        role = data?.role;\r\n-        // mantém demais campos do cache\r\n-        localStorage.setItem('loggedInUser', JSON.stringify({ ...cached, role }));\r\n-      }\r\n+      try {\r\n+        const resp = await fetch(`${API_CONFIG.BASE_URL}/auth/check`, {\r\n+          headers: { Authorization: `Bearer ${cached.token}` },\r\n+        });\r\n+        if (resp.ok) {\r\n+          const data = await resp.json();\r\n+          role = data?.role || role;\r\n+          localStorage.setItem('loggedInUser', JSON.stringify({ ...cached, role }));\r\n+        }\r\n+      } catch (_) {}\r\n     }\r\n+    return role || null;\r\n+  })();\r\n+  return __roleCachePromise;\r\n+}\r\n \r\n-    // funcionário, admin e admin_master têm acesso ao painel de Funcionários\r\n-    show(role === 'funcionario' || role === 'admin' || role === 'admin_master');\r\n-  } catch (err) {\r\n-    console.error('checkFuncionariosLink:', err);\r\n-    show(false);\r\n+async function checkRoleLink(linkId, allowedRoles) {\r\n+  const el = document.getElementById(linkId);\r\n+  if (!el) return;\r\n+  const toggle = (ok) => el.classList.toggle('hidden', !ok);\r\n+  try {\r\n+    const role = await __getUserRoleOnce();\r\n+    toggle(allowedRoles.includes(role));\r\n+  } catch (e) {\r\n+    console.error('checkRoleLink:', e);\r\n+    toggle(false);\r\n   }\r\n }\r\n \r\n+// Mantém a assinatura pública pedida para Funcionários\r\n+function checkFuncionariosLink() {\r\n+  return checkRoleLink('funcionarios-link', ['funcionario','admin','admin_master']);\r\n+}\r\n+\r\n async function loadFeaturedProducts() {\r\n     const container = document.getElementById('featured-products-container');\r\n     const wrapper = document.getElementById('featured-slider-wrapper');\r\n     const prevButton = document.getElementById('prev-featured-btn');\r\n"
                },
                {
                    "date": 1757116884434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -485,43 +485,10 @@\n         });\r\n     });\r\n }\r\n \r\n-async function checkAdminLink() {\r\n-  const adminLink = document.getElementById('admin-link');\r\n-  if (!adminLink) return;\r\n-\r\n-  // deixa escondido até confirmar\r\n-  const show = (ok) => {\r\n-    if (ok) adminLink.classList.remove('hidden');\r\n-    else adminLink.classList.add('hidden');\r\n-  };\r\n-\r\n-  try {\r\n-    // pega do cache\r\n-    let cached = null;\r\n-    try { cached = JSON.parse(localStorage.getItem('loggedInUser') || 'null'); } catch {}\r\n-    let role = cached?.role;\r\n-\r\n-    // se não tiver role no cache, valida no backend\r\n-    if (!role && cached?.token) {\r\n-      const resp = await fetch(`${API_CONFIG.BASE_URL}/auth/check`, {\r\n-        headers: { Authorization: `Bearer ${cached.token}` },\r\n-      });\r\n-      if (resp.ok) {\r\n-        const data = await resp.json();\r\n-        role = data?.role;\r\n-        // atualiza o cache mantendo os demais campos\r\n-        localStorage.setItem('loggedInUser', JSON.stringify({ ...cached, role }));\r\n-      }\r\n-    }\r\n-\r\n-    // libera para admin e admin_master (bloqueia funcionário/cliente)\r\n-    show(role === 'admin' || role === 'admin_master');\r\n-  } catch (err) {\r\n-    console.error('checkAdminLink:', err);\r\n-    show(false);\r\n-  }\r\n+function checkAdminLink() {\r\n+  return checkRoleLink('admin-link', ['admin','admin_master']);\r\n }\r\n \r\n let __roleCachePromise = null;\r\n async function __getUserRoleOnce() {\r\n"
                },
                {
                    "date": 1757117556884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,11 @@\n             'modal-placeholder': `${basePath}components/shared/info-modal.html`,\r\n             'confirm-modal-placeholder': `${basePath}components/shared/confirm-modal.html`,\r\n             'admin-sidebar-placeholder': `${basePath}components/admin/sidebar.html`,\r\n             'account-sidebar-placeholder': `${basePath}components/account/account-sidebar.html`,\r\n+            'func-header-placeholder': 'components/funcionarios/header.html',\r\n+            'func-sidebar-placeholder': 'components/funcionarios/sidebar.html',\r\n+            'func-footer-placeholder': 'components/funcionarios/footer.html',\r\n             'nossas-lojas-sidebar-placeholder': `${basePath}components/store/nossas-lojas-sidebar.html`\r\n         };\r\n         for (const id in placeholders) {\r\n             const element = document.getElementById(id);\r\n@@ -25,8 +28,13 @@\n                     checkAdminLink();\r\n                     checkFuncionariosLink();\r\n                 }\r\n \r\n+                if (id === 'func-sidebar-placeholder') {\r\n+                    // Se futuramente precisar destacar link ativo, podemos reaproveitar a mesma função:\r\n+                    // updateActiveAccountLink?.();  // opcional\r\n+                }\r\n+\r\n                 if (id === 'header-placeholder') {\r\n                     initializeHeaderScripts();\r\n                     try { initializeHeaderSearch(); } catch(_) {}\r\n                     checkLoginState();\r\n"
                },
                {
                    "date": 1757117726439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,11 @@\n             'modal-placeholder': `${basePath}components/shared/info-modal.html`,\r\n             'confirm-modal-placeholder': `${basePath}components/shared/confirm-modal.html`,\r\n             'admin-sidebar-placeholder': `${basePath}components/admin/sidebar.html`,\r\n             'account-sidebar-placeholder': `${basePath}components/account/account-sidebar.html`,\r\n-            'func-header-placeholder': 'components/funcionarios/header.html',\r\n-            'func-sidebar-placeholder': 'components/funcionarios/sidebar.html',\r\n-            'func-footer-placeholder': 'components/funcionarios/footer.html',\r\n+            'func-header-placeholder': `${basePath}components/funcionarios/header.html`,\r\n+            'func-sidebar-placeholder': `${basePath}components/funcionarios/sidebar.html`,\r\n+            'func-footer-placeholder': `${basePath}components/funcionarios/footer.html`,\r\n             'nossas-lojas-sidebar-placeholder': `${basePath}components/store/nossas-lojas-sidebar.html`\r\n         };\r\n         for (const id in placeholders) {\r\n             const element = document.getElementById(id);\r\n"
                },
                {
                    "date": 1757118098092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,13 +28,8 @@\n                     checkAdminLink();\r\n                     checkFuncionariosLink();\r\n                 }\r\n \r\n-                if (id === 'func-sidebar-placeholder') {\r\n-                    // Se futuramente precisar destacar link ativo, podemos reaproveitar a mesma função:\r\n-                    // updateActiveAccountLink?.();  // opcional\r\n-                }\r\n-\r\n                 if (id === 'header-placeholder') {\r\n                     initializeHeaderScripts();\r\n                     try { initializeHeaderSearch(); } catch(_) {}\r\n                     checkLoginState();\r\n@@ -49,8 +44,12 @@\n                 \r\n                 if (id === 'admin-sidebar-placeholder') {\r\n                     updateActiveAdminLink();\r\n                 }\r\n+\r\n+                if (id === 'func-sidebar-placeholder') {\r\n+                    updateActiveFuncionariosLink(); // NOVO: aplica as cores no item selecionado da sidebar de Funcionários\r\n+                }\r\n             }\r\n         }\r\n     } catch (error) {\r\n         console.error(\"Erro ao carregar os componentes:\", error);\r\n@@ -107,8 +106,35 @@\n     }\r\n   });\r\n }\r\n \r\n+function updateActiveFuncionariosLink() {\r\n+  const wrapper = document.getElementById('func-sidebar-placeholder');\r\n+  if (!wrapper) return;\r\n+\r\n+  const navLinks = wrapper.querySelectorAll('nav a');\r\n+  const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n+  const activeClasses   = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n+\r\n+  navLinks.forEach(link => {\r\n+    const href = link.getAttribute('href');\r\n+    if (!href || href === '#') return;\r\n+\r\n+    // Normaliza comparando apenas o pathname (mesma regra usada no projeto)\r\n+    const url = new URL(href, window.location.origin);\r\n+    const isActive = window.location.pathname.endsWith(url.pathname);\r\n+\r\n+    if (isActive) {\r\n+      link.classList.remove(...inactiveClasses);\r\n+      link.classList.add(...activeClasses);\r\n+      link.classList.remove('hover:bg-gray-100');\r\n+    } else {\r\n+      link.classList.remove(...activeClasses);\r\n+      link.classList.add(...inactiveClasses);\r\n+    }\r\n+  });\r\n+}\r\n+\r\n async function initializeHeaderScripts() {\r\n     const mobileMenuButton = document.getElementById('mobile-menu-button');\r\n     const menu = document.getElementById('mobile-menu');\r\n     if (mobileMenuButton && menu) {\r\n"
                },
                {
                    "date": 1757171628547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,9 @@\n                 }\r\n                 \r\n                 if (id === 'admin-sidebar-placeholder') {\r\n                     updateActiveAdminLink();\r\n+                    initAdminDrawer(); // NOVO: ativa o drawer lateral do Admin\r\n                 }\r\n \r\n                 if (id === 'func-sidebar-placeholder') {\r\n                     updateActiveFuncionariosLink(); // NOVO: aplica as cores no item selecionado da sidebar de Funcionários\r\n"
                },
                {
                    "date": 1757171655661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,148 @@\n         }\r\n     });\r\n }\r\n \r\n+function initAdminDrawer() {\r\n+  // Garante que o drawer exista e liga eventos\r\n+  buildAdminRightDrawer();\r\n+\r\n+  const wrap = document.getElementById('admin-sidebar-placeholder');\r\n+  if (!wrap) return;\r\n+\r\n+  const DATA = {\r\n+    empresa: [\r\n+      { label: 'Nossas Lojas',                 icon: 'fas fa-store',          href: '#', status: '' },\r\n+      { label: 'Gerir Funcionários',          icon: 'fas fa-user-gear',      href: '#', status: '' },\r\n+      { label: 'Configurações de Entrega',    icon: 'fas fa-truck-fast',     href: '#', status: '' },\r\n+      { label: 'Pedidos',                      icon: 'fas fa-receipt',        href: '#', status: '' },\r\n+      { label: 'Clientes',                     icon: 'fas fa-users',          href: '#', status: '' },\r\n+    ],\r\n+    estoque: [\r\n+      { label: 'Produtos',         icon: 'fas fa-box-open',   href: '#', status: '' },\r\n+      { label: 'Destaques',        icon: 'fas fa-star',       href: '#', status: '' },\r\n+      { label: 'Promoções',        icon: 'fas fa-tag',        href: '#', status: '' },\r\n+      { label: 'Categorias',       icon: 'fas fa-list',       href: '#', status: '' },\r\n+      { label: 'Importar Planilha',icon: 'fas fa-file-upload',href: '#', status: '' },\r\n+    ],\r\n+    servicos: [\r\n+      { label: 'Cadastro de Serviço',                 icon: 'fas fa-scissors',      href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Grupo de Serviço',        icon: 'fas fa-folder-tree',   href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Comissão por Grupo',      icon: 'fas fa-chart-simple',  href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Comissão por Profissional',icon:'fas fa-user-tie',      href: '#', status: 'Novo' },\r\n+    ]\r\n+  };\r\n+\r\n+  // Clique nos grupos\r\n+  wrap.querySelectorAll('[data-group]').forEach(el => {\r\n+    el.addEventListener('click', (e) => {\r\n+      e.preventDefault();\r\n+      const key = el.getAttribute('data-group');\r\n+      const text = el.textContent.trim();\r\n+      openAdminRightDrawer(text, DATA[key] || []);\r\n+    });\r\n+  });\r\n+}\r\n+\r\n+function buildAdminRightDrawer() {\r\n+  if (document.getElementById('admin-drawer')) return;\r\n+\r\n+  // Backdrop\r\n+  const backdrop = document.createElement('div');\r\n+  backdrop.id = 'admin-drawer-backdrop';\r\n+  backdrop.className = 'fixed inset-0 bg-black/30 opacity-0 pointer-events-none transition-opacity z-40';\r\n+\r\n+  // Drawer\r\n+  const drawer = document.createElement('aside');\r\n+  drawer.id = 'admin-drawer';\r\n+  drawer.className = 'fixed inset-y-0 right-0 w-full max-w-md bg-white shadow-2xl transform translate-x-full transition-transform z-50 flex flex-col';\r\n+\r\n+  drawer.innerHTML = `\r\n+    <div class=\"flex items-center justify-between px-4 py-3 border-b border-gray-200\">\r\n+      <div class=\"flex items-center gap-2\">\r\n+        <i class=\"fas fa-layer-group text-gray-400\"></i>\r\n+        <h3 id=\"admin-drawer-title\" class=\"text-lg font-bold text-gray-800\">Opções</h3>\r\n+      </div>\r\n+      <button id=\"admin-drawer-close\" class=\"p-2 rounded hover:bg-gray-100\" aria-label=\"Fechar\">\r\n+        <i class=\"fas fa-xmark\"></i>\r\n+      </button>\r\n+    </div>\r\n+    <div id=\"admin-drawer-content\" class=\"p-2\">\r\n+      <!-- itens entram aqui -->\r\n+    </div>\r\n+  `;\r\n+\r\n+  document.body.appendChild(backdrop);\r\n+  document.body.appendChild(drawer);\r\n+\r\n+  // Fechar\r\n+  const close = () => closeAdminRightDrawer();\r\n+  backdrop.addEventListener('click', close);\r\n+  drawer.querySelector('#admin-drawer-close').addEventListener('click', close);\r\n+  document.addEventListener('keydown', (ev) => { if (ev.key === 'Escape') close(); });\r\n+}\r\n+\r\n+function openAdminRightDrawer(title, items) {\r\n+  const backdrop = document.getElementById('admin-drawer-backdrop');\r\n+  const drawer = document.getElementById('admin-drawer');\r\n+  const content = document.getElementById('admin-drawer-content');\r\n+  const titleEl = document.getElementById('admin-drawer-title');\r\n+  if (!backdrop || !drawer || !content) return;\r\n+\r\n+  titleEl.textContent = title;\r\n+\r\n+  // Monta a lista de opções\r\n+  content.innerHTML = '';\r\n+  const ul = document.createElement('ul');\r\n+  ul.className = 'divide-y divide-gray-200';\r\n+\r\n+  items.forEach(({ label, icon, href, status }) => {\r\n+    const li = document.createElement('li');\r\n+    li.innerHTML = `\r\n+      <a href=\"${href || '#'}\" class=\"flex items-center justify-between p-4 hover:bg-gray-50 rounded-lg transition\">\r\n+        <span class=\"inline-flex items-center gap-3 text-gray-700\">\r\n+          <i class=\"${icon || 'fas fa-circle'} w-6 text-center\"></i>\r\n+          <span class=\"font-medium\">${label}</span>\r\n+        </span>\r\n+        <span class=\"flex items-center gap-2\">\r\n+          ${status ? `<span class=\"text-xs bg-primary/10 text-primary px-2 py-0.5 rounded\">${status}</span>` : ''}\r\n+          <i class=\"fas fa-chevron-right text-xs text-gray-400\"></i>\r\n+        </span>\r\n+      </a>\r\n+    `;\r\n+    // Para enquanto estiver sem páginas, evita navegar e mostra \"em construção\"\r\n+    li.querySelector('a').addEventListener('click', (e) => {\r\n+      const hrefAttr = (href || '#').trim();\r\n+      if (hrefAttr === '#') {\r\n+        e.preventDefault();\r\n+        alert(`${label}: em construção.`);\r\n+      }\r\n+    });\r\n+    ul.appendChild(li);\r\n+  });\r\n+\r\n+  content.appendChild(ul);\r\n+\r\n+  // Abre\r\n+  backdrop.classList.remove('pointer-events-none');\r\n+  requestAnimationFrame(() => {\r\n+    backdrop.classList.add('opacity-100');\r\n+    drawer.classList.remove('translate-x-full');\r\n+  });\r\n+}\r\n+\r\n+function closeAdminRightDrawer() {\r\n+  const backdrop = document.getElementById('admin-drawer-backdrop');\r\n+  const drawer = document.getElementById('admin-drawer');\r\n+  if (!backdrop || !drawer) return;\r\n+  backdrop.classList.remove('opacity-100');\r\n+  drawer.classList.add('translate-x-full');\r\n+  // Ao terminar a transição, desabilita pointer-events\r\n+  setTimeout(() => {\r\n+    backdrop.classList.add('pointer-events-none');\r\n+  }, 200);\r\n+}\r\n+\r\n function updateActiveAccountLink() {\r\n   const wrapper = document.getElementById('account-sidebar-placeholder');\r\n   if (!wrapper) return;\r\n \r\n"
                },
                {
                    "date": 1757173828946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,26 +87,26 @@\n   if (!wrap) return;\r\n \r\n   const DATA = {\r\n     empresa: [\r\n-      { label: 'Nossas Lojas',                 icon: 'fas fa-store',          href: '#', status: '' },\r\n-      { label: 'Gerir Funcionários',          icon: 'fas fa-user-gear',      href: '#', status: '' },\r\n-      { label: 'Configurações de Entrega',    icon: 'fas fa-truck-fast',     href: '#', status: '' },\r\n-      { label: 'Pedidos',                      icon: 'fas fa-receipt',        href: '#', status: '' },\r\n-      { label: 'Clientes',                     icon: 'fas fa-users',          href: '#', status: '' },\r\n+      { label: 'Nossas Lojas',                 icon: 'fas fa-store',          href: '/pages/admin/admin-nossas-lojas.html',      status: '' },\r\n+      { label: 'Gerir Funcionários',          icon: 'fas fa-user-gear',      href: '/pages/admin/admin-gerir-funcionarios.html',status: '' },\r\n+      { label: 'Configurações de Entrega',    icon: 'fas fa-truck-fast',     href: '/pages/admin/admin-entregas.html',          status: '' },\r\n+      { label: 'Pedidos',                      icon: 'fas fa-receipt',        href: '#',                                          status: '' }, // não existe ainda\r\n+      { label: 'Clientes',                     icon: 'fas fa-users',          href: '#',                                          status: '' }, // não existe ainda\r\n     ],\r\n     estoque: [\r\n-      { label: 'Produtos',         icon: 'fas fa-box-open',   href: '#', status: '' },\r\n-      { label: 'Destaques',        icon: 'fas fa-star',       href: '#', status: '' },\r\n-      { label: 'Promoções',        icon: 'fas fa-tag',        href: '#', status: '' },\r\n-      { label: 'Categorias',       icon: 'fas fa-list',       href: '#', status: '' },\r\n-      { label: 'Importar Planilha',icon: 'fas fa-file-upload',href: '#', status: '' },\r\n+      { label: 'Produtos',         icon: 'fas fa-box-open',   href: '/pages/admin/admin-produtos.html',     status: '' },\r\n+      { label: 'Destaques',        icon: 'fas fa-star',       href: '/pages/admin/admin-destaques.html',    status: '' },\r\n+      { label: 'Promoções',        icon: 'fas fa-tag',        href: '/pages/admin/admin-promocoes.html',    status: '' },\r\n+      { label: 'Categorias',       icon: 'fas fa-list',       href: '/pages/admin/admin-categorias.html',   status: '' },\r\n+      { label: 'Importar Planilha',icon: 'fas fa-file-upload',href: '/pages/admin/admin-importar.html',     status: '' },\r\n     ],\r\n     servicos: [\r\n-      { label: 'Cadastro de Serviço',                 icon: 'fas fa-scissors',      href: '#', status: 'Novo' },\r\n-      { label: 'Cadastro de Grupo de Serviço',        icon: 'fas fa-folder-tree',   href: '#', status: 'Novo' },\r\n-      { label: 'Cadastro de Comissão por Grupo',      icon: 'fas fa-chart-simple',  href: '#', status: 'Novo' },\r\n-      { label: 'Cadastro de Comissão por Profissional',icon:'fas fa-user-tie',      href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Serviço',                  icon: 'fas fa-scissors',      href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Grupo de Serviço',         icon: 'fas fa-folder-tree',   href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Comissão por Grupo',       icon: 'fas fa-chart-simple',  href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Comissão por Profissional',icon: 'fas fa-user-tie',      href: '#', status: 'Novo' },\r\n     ]\r\n   };\r\n \r\n   // Clique nos grupos\r\n"
                },
                {
                    "date": 1757180884288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n       { label: 'Importar Planilha',icon: 'fas fa-file-upload',href: '/pages/admin/admin-importar.html',     status: '' },\r\n     ],\r\n     servicos: [\r\n       { label: 'Cadastro de Serviço',                  icon: 'fas fa-scissors',      href: '#', status: 'Novo' },\r\n-      { label: 'Cadastro de Grupo de Serviço',         icon: 'fas fa-folder-tree',   href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Grupo de Serviço',         icon: 'fas fa-folder-tree',   href: '/pages/admin/admin-servicos-grupos.html', status: '' },\r\n       { label: 'Cadastro de Comissão por Grupo',       icon: 'fas fa-chart-simple',  href: '#', status: 'Novo' },\r\n       { label: 'Cadastro de Comissão por Profissional',icon: 'fas fa-user-tie',      href: '#', status: 'Novo' },\r\n     ]\r\n   };\r\n"
                },
                {
                    "date": 1757182720679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n       { label: 'Categorias',       icon: 'fas fa-list',       href: '/pages/admin/admin-categorias.html',   status: '' },\r\n       { label: 'Importar Planilha',icon: 'fas fa-file-upload',href: '/pages/admin/admin-importar.html',     status: '' },\r\n     ],\r\n     servicos: [\r\n-      { label: 'Cadastro de Serviço',                  icon: 'fas fa-scissors',      href: '#', status: 'Novo' },\r\n+      { label: 'Cadastro de Serviço',                  icon: 'fas fa-scissors',      href: '/pages/admin/admin-servicos.html', status: '' },\r\n       { label: 'Cadastro de Grupo de Serviço',         icon: 'fas fa-folder-tree',   href: '/pages/admin/admin-servicos-grupos.html', status: '' },\r\n       { label: 'Cadastro de Comissão por Grupo',       icon: 'fas fa-chart-simple',  href: '#', status: 'Novo' },\r\n       { label: 'Cadastro de Comissão por Profissional',icon: 'fas fa-user-tie',      href: '#', status: 'Novo' },\r\n     ]\r\n"
                },
                {
                    "date": 1757803247654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n                 }\r\n                 \r\n                 if (id === 'admin-sidebar-placeholder') {\r\n                     updateActiveAdminLink();\r\n-                    initAdminDrawer(); // NOVO: ativa o drawer lateral do Admin\r\n+                    try { initAdminHoverMenus(); } catch(_) {}\r\n                 }\r\n \r\n                 if (id === 'func-sidebar-placeholder') {\r\n                     updateActiveFuncionariosLink(); // NOVO: aplica as cores no item selecionado da sidebar de Funcionários\r\n@@ -78,16 +78,10 @@\n         }\r\n     });\r\n }\r\n \r\n-function initAdminDrawer() {\r\n-  // Garante que o drawer exista e liga eventos\r\n-  buildAdminRightDrawer();\r\n-\r\n-  const wrap = document.getElementById('admin-sidebar-placeholder');\r\n-  if (!wrap) return;\r\n-\r\n-  const DATA = {\r\n+function getAdminMenuData() {\r\n+  return {\r\n     empresa: [\r\n       { label: 'Nossas Lojas',                 icon: 'fas fa-store',          href: '/pages/admin/admin-nossas-lojas.html',      status: '' },\r\n       { label: 'Gerir Funcionários',          icon: 'fas fa-user-gear',      href: '/pages/admin/admin-gerir-funcionarios.html',status: '' },\r\n       { label: 'Configurações de Entrega',    icon: 'fas fa-truck-fast',     href: '/pages/admin/admin-entregas.html',          status: '' },\r\n@@ -107,18 +101,80 @@\n       { label: 'Cadastro de Comissão por Grupo',       icon: 'fas fa-chart-simple',  href: '#', status: 'Novo' },\r\n       { label: 'Cadastro de Comissão por Profissional',icon: 'fas fa-user-tie',      href: '#', status: 'Novo' },\r\n     ]\r\n   };\r\n+}\r\n \r\n-  // Clique nos grupos\r\n-  wrap.querySelectorAll('[data-group]').forEach(el => {\r\n-    el.addEventListener('click', (e) => {\r\n-      e.preventDefault();\r\n-      const key = el.getAttribute('data-group');\r\n-      const text = el.textContent.trim();\r\n-      openAdminRightDrawer(text, DATA[key] || []);\r\n+function initAdminHoverMenus() {\r\n+  const wrap = document.getElementById('admin-sidebar-placeholder');\r\n+  if (!wrap) return;\r\n+  const DATA = getAdminMenuData();\r\n+\r\n+  // painel flutuante (reutilizável)\r\n+  let panel = document.getElementById('admin-hover-panel');\r\n+  if (!panel) {\r\n+    panel = document.createElement('div');\r\n+    panel.id = 'admin-hover-panel';\r\n+    panel.className = 'fixed z-[9998] bg-white shadow-xl ring-1 ring-black/10 rounded-lg opacity-0 pointer-events-none transform scale-95 transition-all';\r\n+    panel.style.minWidth = '280px';\r\n+    document.body.appendChild(panel);\r\n+  }\r\n+\r\n+  let hideTimer = null;\r\n+  const showPanel = (anchorEl, title, items=[]) => {\r\n+    if (hideTimer) { clearTimeout(hideTimer); hideTimer = null; }\r\n+    const rect = anchorEl.getBoundingClientRect();\r\n+    panel.innerHTML = `\r\n+      <div class=\"px-3 py-2 border-b bg-gray-50 rounded-t-lg text-sm font-semibold text-gray-700 flex items-center gap-2\">\r\n+        <i class=\"fas fa-layer-group text-gray-400\"></i><span>${title}</span>\r\n+      </div>\r\n+      <div class=\"p-2\">\r\n+        <ul class=\"divide-y divide-gray-100\">\r\n+          ${items.map(({label,icon,href,status})=>`\r\n+            <li>\r\n+              <a href=\"${href||'#'}\" class=\"flex items-center justify-between px-3 py-2 rounded hover:bg-gray-50\">\r\n+                <span class=\"inline-flex items-center gap-2 text-gray-700\"><i class=\"${icon||'fas fa-circle'} w-5 text-center\"></i>${label}</span>\r\n+                ${status?`<span class=\"text-xs bg-primary/10 text-primary px-2 py-0.5 rounded\">${status}</span>`:''}\r\n+              </a>\r\n+            </li>`).join('')}\r\n+        </ul>\r\n+      </div>`;\r\n+    const top = rect.bottom + window.scrollY + 6;\r\n+    const left = Math.min(Math.max(rect.left + window.scrollX - 20, 8), window.scrollX + window.innerWidth - panel.offsetWidth - 8);\r\n+    panel.style.top = `${top}px`;\r\n+    panel.style.left = `${left}px`;\r\n+    panel.classList.remove('pointer-events-none');\r\n+    requestAnimationFrame(()=>{\r\n+      panel.classList.remove('opacity-0','scale-95');\r\n     });\r\n+\r\n+    // impedir navegação para itens \"#\"\r\n+    panel.querySelectorAll('a[href=\"#\"]').forEach(a=>{\r\n+      a.addEventListener('click', (e)=>{ e.preventDefault(); alert(`${a.textContent.trim()}: em construção.`); });\r\n+    });\r\n+  };\r\n+\r\n+  const hidePanel = () => {\r\n+    panel.classList.add('opacity-0','scale-95');\r\n+    hideTimer = setTimeout(()=>{ panel.classList.add('pointer-events-none'); }, 120);\r\n+  };\r\n+\r\n+  // fecha ao clicar fora\r\n+  document.addEventListener('click', (e)=>{\r\n+    if (!panel.contains(e.target) && !wrap.contains(e.target)) hidePanel();\r\n   });\r\n+\r\n+  // hover em cada item\r\n+  wrap.querySelectorAll('[data-group]').forEach(el => {\r\n+    const key = el.getAttribute('data-group');\r\n+    const title = el.textContent.trim();\r\n+    const items = DATA[key] || [];\r\n+    el.addEventListener('mouseenter', ()=> showPanel(el, title, items));\r\n+    el.addEventListener('mouseleave', ()=> { hideTimer = setTimeout(hidePanel, 150); });\r\n+    el.addEventListener('click', (e)=>{ e.preventDefault(); showPanel(el, title, items); });\r\n+  });\r\n+  panel.addEventListener('mouseenter', ()=>{ if (hideTimer) { clearTimeout(hideTimer); hideTimer = null; } });\r\n+  panel.addEventListener('mouseleave', ()=> hidePanel());\r\n }\r\n \r\n function buildAdminRightDrawer() {\r\n   if (document.getElementById('admin-drawer')) return;\r\n@@ -255,13 +311,13 @@\n   const navLinks = wrapper.querySelectorAll('nav a');\r\n   const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n   const activeClasses   = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n \r\n+  // Ativa o item exato quando o href bate com a página atual\r\n   navLinks.forEach(link => {\r\n     const href = link.getAttribute('href');\r\n     if (!href || href === '#') return;\r\n \r\n-    // Normaliza comparando apenas o pathname (mesma regra usada no projeto)\r\n     const url = new URL(href, window.location.origin);\r\n     const isActive = window.location.pathname.endsWith(url.pathname);\r\n \r\n     if (isActive) {\r\n@@ -272,8 +328,22 @@\n       link.classList.remove(...activeClasses);\r\n       link.classList.add(...inactiveClasses);\r\n     }\r\n   });\r\n+\r\n+  // NOVO: manter \"Veterinário\" ativo nas páginas internas (vet-*)\r\n+  const path = window.location.pathname;\r\n+  const isVetInner =\r\n+    /\\/pages\\/funcionarios\\/vet-(ficha-clinica|documentos|receitas|assinatura)\\.html$/.test(path);\r\n+\r\n+  if (isVetInner) {\r\n+    const vet = wrapper.querySelector('#func-vet-link');\r\n+    if (vet) {\r\n+      vet.classList.remove(...inactiveClasses);\r\n+      vet.classList.add(...activeClasses);\r\n+      vet.classList.remove('hover:bg-gray-100');\r\n+    }\r\n+  }\r\n }\r\n \r\n async function initializeHeaderScripts() {\r\n     const mobileMenuButton = document.getElementById('mobile-menu-button');\r\n"
                },
                {
                    "date": 1757803584614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -305,43 +305,37 @@\n }\r\n \r\n function updateActiveFuncionariosLink() {\r\n   const wrapper = document.getElementById('func-sidebar-placeholder');\r\n-  if (!wrapper) return;\r\n+  if (wrapper) {\r\n+    const navLinks = wrapper.querySelectorAll('nav a');\r\n+    const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n+    const activeClasses   = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n \r\n-  const navLinks = wrapper.querySelectorAll('nav a');\r\n-  const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n-  const activeClasses   = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n+    navLinks.forEach(link => {\r\n+      const href = link.getAttribute('href');\r\n+      if (!href || href === '#') return;\r\n+      const url = new URL(href, window.location.origin);\r\n+      const isActive = window.location.pathname.endsWith(url.pathname);\r\n+      if (isActive) {\r\n+        link.classList.remove(...inactiveClasses);\r\n+        link.classList.add(...activeClasses);\r\n+        link.classList.remove('hover:bg-gray-100');\r\n+      } else {\r\n+        link.classList.remove(...activeClasses);\r\n+        link.classList.add(...inactiveClasses);\r\n+      }\r\n+    });\r\n+  }\r\n \r\n-  // Ativa o item exato quando o href bate com a página atual\r\n-  navLinks.forEach(link => {\r\n-    const href = link.getAttribute('href');\r\n-    if (!href || href === '#') return;\r\n-\r\n-    const url = new URL(href, window.location.origin);\r\n-    const isActive = window.location.pathname.endsWith(url.pathname);\r\n-\r\n-    if (isActive) {\r\n-      link.classList.remove(...inactiveClasses);\r\n-      link.classList.add(...activeClasses);\r\n-      link.classList.remove('hover:bg-gray-100');\r\n-    } else {\r\n-      link.classList.remove(...activeClasses);\r\n-      link.classList.add(...inactiveClasses);\r\n-    }\r\n-  });\r\n-\r\n-  // NOVO: manter \"Veterinário\" ativo nas páginas internas (vet-*)\r\n+  // NOVO: manter “Veterinário” ativo no TOP quando estiver em qualquer vet-*\r\n   const path = window.location.pathname;\r\n-  const isVetInner =\r\n-    /\\/pages\\/funcionarios\\/vet-(ficha-clinica|documentos|receitas|assinatura)\\.html$/.test(path);\r\n-\r\n+  const isVetInner = /\\/pages\\/funcionarios\\/vet-(ficha-clinica|documentos|receitas|assinatura)\\.html$/.test(path);\r\n   if (isVetInner) {\r\n-    const vet = wrapper.querySelector('#func-vet-link');\r\n-    if (vet) {\r\n-      vet.classList.remove(...inactiveClasses);\r\n-      vet.classList.add(...activeClasses);\r\n-      vet.classList.remove('hover:bg-gray-100');\r\n+    const topVet = document.getElementById('top-vet-link');\r\n+    if (topVet) {\r\n+      topVet.classList.add('bg-primary/10','text-primary','font-bold');\r\n+      topVet.classList.remove('text-gray-600');\r\n     }\r\n   }\r\n }\r\n \r\n"
                },
                {
                    "date": 1757803607239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,8 +338,30 @@\n     }\r\n   }\r\n }\r\n \r\n+// Abre/fecha o dropdown do “Veterinário” no topo (mobile e desktop por clique)\r\n+(function () {\r\n+  const group = document.querySelector('.vet-menu-group');\r\n+  if (!group) return;\r\n+  const trigger = group.querySelector('#top-vet-link');\r\n+  const menu    = group.querySelector('[data-menu=\"vet\"]');\r\n+  if (!trigger || !menu) return;\r\n+\r\n+  let opened = false;\r\n+  const open  = () => { menu.classList.remove('hidden'); opened = true; };\r\n+  const close = () => { menu.classList.add('hidden'); opened = false; };\r\n+\r\n+  trigger.addEventListener('click', (e) => {\r\n+    e.preventDefault();\r\n+    opened ? close() : open();\r\n+  });\r\n+\r\n+  document.addEventListener('click', (e) => {\r\n+    if (!group.contains(e.target)) close();\r\n+  });\r\n+})();\r\n+\r\n async function initializeHeaderScripts() {\r\n     const mobileMenuButton = document.getElementById('mobile-menu-button');\r\n     const menu = document.getElementById('mobile-menu');\r\n     if (mobileMenuButton && menu) {\r\n"
                },
                {
                    "date": 1757803978326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -305,63 +305,33 @@\n }\r\n \r\n function updateActiveFuncionariosLink() {\r\n   const wrapper = document.getElementById('func-sidebar-placeholder');\r\n-  if (wrapper) {\r\n-    const navLinks = wrapper.querySelectorAll('nav a');\r\n-    const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n-    const activeClasses   = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n+  if (!wrapper) return;\r\n \r\n-    navLinks.forEach(link => {\r\n-      const href = link.getAttribute('href');\r\n-      if (!href || href === '#') return;\r\n-      const url = new URL(href, window.location.origin);\r\n-      const isActive = window.location.pathname.endsWith(url.pathname);\r\n-      if (isActive) {\r\n-        link.classList.remove(...inactiveClasses);\r\n-        link.classList.add(...activeClasses);\r\n-        link.classList.remove('hover:bg-gray-100');\r\n-      } else {\r\n-        link.classList.remove(...activeClasses);\r\n-        link.classList.add(...inactiveClasses);\r\n-      }\r\n-    });\r\n-  }\r\n+  const navLinks = wrapper.querySelectorAll('nav a');\r\n+  const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n+  const activeClasses   = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n \r\n-  // NOVO: manter “Veterinário” ativo no TOP quando estiver em qualquer vet-*\r\n-  const path = window.location.pathname;\r\n-  const isVetInner = /\\/pages\\/funcionarios\\/vet-(ficha-clinica|documentos|receitas|assinatura)\\.html$/.test(path);\r\n-  if (isVetInner) {\r\n-    const topVet = document.getElementById('top-vet-link');\r\n-    if (topVet) {\r\n-      topVet.classList.add('bg-primary/10','text-primary','font-bold');\r\n-      topVet.classList.remove('text-gray-600');\r\n-    }\r\n-  }\r\n-}\r\n+  navLinks.forEach(link => {\r\n+    const href = link.getAttribute('href');\r\n+    if (!href || href === '#') return;\r\n \r\n-// Abre/fecha o dropdown do “Veterinário” no topo (mobile e desktop por clique)\r\n-(function () {\r\n-  const group = document.querySelector('.vet-menu-group');\r\n-  if (!group) return;\r\n-  const trigger = group.querySelector('#top-vet-link');\r\n-  const menu    = group.querySelector('[data-menu=\"vet\"]');\r\n-  if (!trigger || !menu) return;\r\n+    // Normaliza comparando apenas o pathname (mesma regra usada no projeto)\r\n+    const url = new URL(href, window.location.origin);\r\n+    const isActive = window.location.pathname.endsWith(url.pathname);\r\n \r\n-  let opened = false;\r\n-  const open  = () => { menu.classList.remove('hidden'); opened = true; };\r\n-  const close = () => { menu.classList.add('hidden'); opened = false; };\r\n-\r\n-  trigger.addEventListener('click', (e) => {\r\n-    e.preventDefault();\r\n-    opened ? close() : open();\r\n+    if (isActive) {\r\n+      link.classList.remove(...inactiveClasses);\r\n+      link.classList.add(...activeClasses);\r\n+      link.classList.remove('hover:bg-gray-100');\r\n+    } else {\r\n+      link.classList.remove(...activeClasses);\r\n+      link.classList.add(...inactiveClasses);\r\n+    }\r\n   });\r\n+}\r\n \r\n-  document.addEventListener('click', (e) => {\r\n-    if (!group.contains(e.target)) close();\r\n-  });\r\n-})();\r\n-\r\n async function initializeHeaderScripts() {\r\n     const mobileMenuButton = document.getElementById('mobile-menu-button');\r\n     const menu = document.getElementById('mobile-menu');\r\n     if (mobileMenuButton && menu) {\r\n"
                },
                {
                    "date": 1757804045706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,10 @@\n                     try { initAdminHoverMenus(); } catch(_) {}\r\n                 }\r\n \r\n                 if (id === 'func-sidebar-placeholder') {\r\n-                    updateActiveFuncionariosLink(); // NOVO: aplica as cores no item selecionado da sidebar de Funcionários\r\n+                    updateActiveFuncionariosLink();\r\n+                    try { initFuncionarioVetHoverMenu(); } catch(_) {}\r\n                 }\r\n             }\r\n         }\r\n     } catch (error) {\r\n@@ -103,8 +104,99 @@\n     ]\r\n   };\r\n }\r\n \r\n+function initFuncionarioVetHoverMenu() {\r\n+  const wrap = document.getElementById('func-sidebar-placeholder');\r\n+  if (!wrap) return;\r\n+\r\n+  const trigger = wrap.querySelector('#func-vet-hover');\r\n+  if (!trigger) return;\r\n+\r\n+  // Itens do menu (todos \"Em breve\")\r\n+  const ITEMS = [\r\n+    { label: 'Ficha Clínica', icon: 'fas fa-notes-medical', href: '/pages/funcionarios/vet-ficha-clinica.html', status: 'Em breve' },\r\n+    { label: 'Documentos',    icon: 'fas fa-file-medical', href: '/pages/funcionarios/vet-documentos.html',    status: 'Em breve' },\r\n+    { label: 'Receitas',      icon: 'fas fa-prescription-bottle-medical', href: '/pages/funcionarios/vet-receitas.html', status: 'Em breve' },\r\n+    { label: 'Assinatura',    icon: 'fas fa-signature',     href: '/pages/funcionarios/vet-assinatura.html',   status: 'Em breve' },\r\n+  ];\r\n+\r\n+  // Painel flutuante (fora do nav) — mesmo padrão visual do admin\r\n+  let panel = document.getElementById('func-hover-panel');\r\n+  if (!panel) {\r\n+    panel = document.createElement('div');\r\n+    panel.id = 'func-hover-panel';\r\n+    panel.className = 'fixed z-50 bg-white rounded-lg shadow-xl ring-1 ring-black/5 w-[320px] opacity-0 pointer-events-none translate-y-2 transition-all';\r\n+    panel.innerHTML = `\r\n+      <div class=\"px-4 py-3 border-b border-gray-100 flex items-center gap-2\">\r\n+        <i class=\"fas fa-stethoscope text-primary\"></i>\r\n+        <h3 class=\"font-semibold text-gray-800\">Veterinário</h3>\r\n+      </div>\r\n+      <div class=\"p-2 space-y-1\" data-list></div>\r\n+    `;\r\n+    document.body.appendChild(panel);\r\n+  }\r\n+  const list = panel.querySelector('[data-list]');\r\n+\r\n+  // Render dos itens\r\n+  function renderItems() {\r\n+    list.innerHTML = ITEMS.map(it => `\r\n+      <a href=\"${it.href}\" class=\"flex items-center justify-between px-3 py-2 rounded-md hover:bg-gray-50\">\r\n+        <span class=\"flex items-center gap-3\">\r\n+          <i class=\"${it.icon} w-5 text-center\"></i>\r\n+          <span>${it.label}</span>\r\n+        </span>\r\n+        <span class=\"text-[10px] uppercase tracking-wide bg-gray-200 text-gray-700 rounded px-2 py-0.5\">${it.status}</span>\r\n+      </a>\r\n+    `).join('');\r\n+  }\r\n+  renderItems();\r\n+\r\n+  let hideTimer = null;\r\n+\r\n+  const showPanel = () => {\r\n+    const r = trigger.getBoundingClientRect();\r\n+    // posiciona logo abaixo e alinhado à esquerda do botão\r\n+    panel.style.left = `${Math.max(8, Math.min(window.innerWidth - 336, r.left))}px`;\r\n+    panel.style.top  = `${r.bottom + 6}px`;\r\n+    panel.classList.remove('opacity-0','pointer-events-none','translate-y-2');\r\n+  };\r\n+  const hidePanel = () => {\r\n+    panel.classList.add('opacity-0','pointer-events-none','translate-y-2');\r\n+  };\r\n+\r\n+  // Interações (hover/click) — igual ao Admin\r\n+  trigger.addEventListener('mouseenter', () => {\r\n+    if (hideTimer) { clearTimeout(hideTimer); hideTimer = null; }\r\n+    showPanel();\r\n+  });\r\n+  trigger.addEventListener('mouseleave', () => {\r\n+    hideTimer = setTimeout(hidePanel, 120);\r\n+  });\r\n+  trigger.addEventListener('click', (e) => {\r\n+    e.preventDefault();\r\n+    if (panel.classList.contains('pointer-events-none')) showPanel(); else hidePanel();\r\n+  });\r\n+\r\n+  panel.addEventListener('mouseenter', () => {\r\n+    if (hideTimer) { clearTimeout(hideTimer); hideTimer = null; }\r\n+  });\r\n+  panel.addEventListener('mouseleave', () => hidePanel());\r\n+\r\n+  // Fecha ao clicar fora\r\n+  document.addEventListener('click', (e) => {\r\n+    if (!panel.contains(e.target) && !trigger.contains(e.target)) hidePanel();\r\n+  });\r\n+\r\n+  // Deixa o botão ativo (verde) se estiver em alguma página vet-*\r\n+  const path = window.location.pathname;\r\n+  const isVetInner = /\\/pages\\/funcionarios\\/vet-(ficha-clinica|documentos|receitas|assinatura)\\.html$/.test(path);\r\n+  if (isVetInner) {\r\n+    trigger.classList.add('bg-primary/10','text-primary','font-bold');\r\n+    trigger.classList.remove('text-gray-600');\r\n+  }\r\n+}\r\n+\r\n function initAdminHoverMenus() {\r\n   const wrap = document.getElementById('admin-sidebar-placeholder');\r\n   if (!wrap) return;\r\n   const DATA = getAdminMenuData();\r\n"
                },
                {
                    "date": 1757804078142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,21 +64,34 @@\n     if (!sidebar) return;\r\n     const currentPageUrl = window.location.href;\r\n     const navLinks = sidebar.querySelectorAll('nav a');\r\n     navLinks.forEach(link => {\r\n-        const linkHref = link.getAttribute('href');\r\n-        if (!linkHref || linkHref === '#') return;\r\n-        const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n-        const activeClasses = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n-        if (currentPageUrl.endsWith(linkHref)) {\r\n-            link.classList.remove(...inactiveClasses);\r\n-            link.classList.add(...activeClasses);\r\n-            link.classList.remove('hover:bg-gray-100'); \r\n+      const href = link.getAttribute('href');\r\n+      // Deixa os links reais com a marcação automática\r\n+      if (href && href !== '#') {\r\n+        const url = new URL(href, window.location.origin);\r\n+        const isActive = window.location.pathname.endsWith(url.pathname);\r\n+        if (isActive) {\r\n+          link.classList.remove(...inactiveClasses);\r\n+          link.classList.add(...activeClasses);\r\n+          link.classList.remove('hover:bg-gray-100'); \r\n         } else {\r\n-            link.classList.remove(...activeClasses);\r\n-            link.classList.add(...inactiveClasses);\r\n+          link.classList.remove(...activeClasses);\r\n+          link.classList.add(...inactiveClasses);\r\n         }\r\n+      }\r\n     });\r\n+\r\n+    // Extra: quando estivermos em /vet-*, marcar o botão Veterinário (#func-vet-hover)\r\n+    const path = window.location.pathname;\r\n+    const isVetInner = /\\/pages\\/funcionarios\\/vet-(ficha-clinica|documentos|receitas|assinatura)\\.html$/.test(path);\r\n+    if (isVetInner) {\r\n+      const vetBtn = wrapper.querySelector('#func-vet-hover');\r\n+      if (vetBtn) {\r\n+        vetBtn.classList.add('bg-primary/10','text-primary','font-bold');\r\n+        vetBtn.classList.remove('text-gray-600');\r\n+      }\r\n+    }\r\n }\r\n \r\n function getAdminMenuData() {\r\n   return {\r\n"
                }
            ],
            "date": 1757116215042,
            "name": "Commit-0",
            "content": "var basePath = basePath || '';\r\n\r\nasync function loadComponents() {\r\n    try {\r\n        const placeholders = {\r\n            'header-placeholder': `${basePath}components/shared/header.html`,\r\n            'admin-header-placeholder': `${basePath}components/admin/header.html`,\r\n            'footer-placeholder': `${basePath}components/shared/footer.html`,\r\n            'admin-footer-placeholder': `${basePath}components/admin/footer.html`,\r\n            'cart-placeholder': `${basePath}components/shared/cart.html`,\r\n            'modal-placeholder': `${basePath}components/shared/info-modal.html`,\r\n            'confirm-modal-placeholder': `${basePath}components/shared/confirm-modal.html`,\r\n            'admin-sidebar-placeholder': `${basePath}components/admin/sidebar.html`,\r\n            'account-sidebar-placeholder': `${basePath}components/account/account-sidebar.html`,\r\n            'nossas-lojas-sidebar-placeholder': `${basePath}components/store/nossas-lojas-sidebar.html`\r\n        };\r\n        for (const id in placeholders) {\r\n            const element = document.getElementById(id);\r\n            if (element) {\r\n                const response = await fetch(placeholders[id]);\r\n                if (!response.ok) throw new Error(`Falha ao carregar ${placeholders[id]}`);\r\n                element.innerHTML = await response.text();\r\n                if (id === 'account-sidebar-placeholder') {\r\n                    updateActiveAccountLink();\r\n                    checkAdminLink(); // reaproveita a mesma função já usada no header\r\n                    checkFuncionariosLink(); // novo: exibe/oculta link \"Funcionários\" conforme role\r\n                }\r\n\r\n                if (id === 'header-placeholder') {\r\n                    initializeHeaderScripts();\r\n                    try { initializeHeaderSearch(); } catch(_) {}\r\n                    checkLoginState();\r\n                    initializeHideOnScroll();\r\n                    initializeFlyoutMenu();\r\n                    checkAdminLink();\r\n                }\r\n\r\n                if (id === 'cart-placeholder') {\r\n                    initializeCart(); // A função agora é chamada aqui!\r\n                }\r\n                \r\n                if (id === 'admin-sidebar-placeholder') {\r\n                    updateActiveAdminLink();\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Erro ao carregar os componentes:\", error);\r\n    }\r\n}\r\nwindow.loadComponents = loadComponents;\r\n\r\nfunction updateActiveAdminLink() {\r\n    const sidebar = document.getElementById('admin-sidebar-placeholder');\r\n    if (!sidebar) return;\r\n    const currentPageUrl = window.location.href;\r\n    const navLinks = sidebar.querySelectorAll('nav a');\r\n    navLinks.forEach(link => {\r\n        const linkHref = link.getAttribute('href');\r\n        if (!linkHref || linkHref === '#') return;\r\n        const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n        const activeClasses = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n        if (currentPageUrl.endsWith(linkHref)) {\r\n            link.classList.remove(...inactiveClasses);\r\n            link.classList.add(...activeClasses);\r\n            link.classList.remove('hover:bg-gray-100'); \r\n        } else {\r\n            link.classList.remove(...activeClasses);\r\n            link.classList.add(...inactiveClasses);\r\n        }\r\n    });\r\n}\r\n\r\nfunction updateActiveAccountLink() {\r\n  const wrapper = document.getElementById('account-sidebar-placeholder');\r\n  if (!wrapper) return;\r\n\r\n  const current = window.location.pathname + window.location.search + window.location.hash;\r\n  const navLinks = wrapper.querySelectorAll('nav a');\r\n\r\n  const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n  const activeClasses   = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n\r\n  navLinks.forEach(link => {\r\n    const href = link.getAttribute('href');\r\n    if (!href || href === '#') return;\r\n\r\n    // Normaliza comparando só o pathname\r\n    const url = new URL(href, window.location.origin);\r\n    const isActive = window.location.pathname.endsWith(url.pathname);\r\n\r\n    if (isActive) {\r\n      link.classList.remove(...inactiveClasses);\r\n      link.classList.add(...activeClasses);\r\n      link.classList.remove('hover:bg-gray-100');\r\n    } else {\r\n      link.classList.remove(...activeClasses);\r\n      link.classList.add(...inactiveClasses);\r\n    }\r\n  });\r\n}\r\n\r\nasync function initializeHeaderScripts() {\r\n    const mobileMenuButton = document.getElementById('mobile-menu-button');\r\n    const menu = document.getElementById('mobile-menu');\r\n    if (mobileMenuButton && menu) {\r\n        mobileMenuButton.addEventListener('click', () => menu.classList.toggle('hidden'));\r\n    }\r\n\r\n    // Alinhar o popover do telefone à mesma posição do popover de usuário\r\n    try {\r\n        const phoneTrigger = document.getElementById('phone-menu-trigger');\r\n        const phonePanel = document.getElementById('phone-menu-panel');\r\n        if (phoneTrigger && phonePanel) {\r\n            const show = () => {\r\n                phonePanel.classList.remove('opacity-0','pointer-events-none','scale-95');\r\n            };\r\n            const hide = () => {\r\n                phonePanel.classList.add('opacity-0','pointer-events-none','scale-95');\r\n            };\r\n            let hideTimer = null;\r\n            const delayedHide = () => { hideTimer = setTimeout(hide, 120); };\r\n            const cancelHide = () => { if (hideTimer) { clearTimeout(hideTimer); hideTimer = null; } };\r\n\r\n            phoneTrigger.addEventListener('mouseenter', () => { cancelHide(); show(); });\r\n            phoneTrigger.addEventListener('mouseleave', () => { delayedHide(); });\r\n            phonePanel.addEventListener('mouseenter', () => { cancelHide(); });\r\n            phonePanel.addEventListener('mouseleave', () => { delayedHide(); });\r\n            document.addEventListener('click', (e) => {\r\n                if (!phoneTrigger.contains(e.target) && !phonePanel.contains(e.target)) hide();\r\n            });\r\n        }\r\n    } catch(_) { /* ignora */ }\r\n}\r\n\r\n// Busca do topo (auto-complete + sugestões)\r\nfunction initializeHeaderSearch() {\r\n  const input = document.getElementById('top-search');\r\n  const btn = document.getElementById('top-search-btn');\r\n  const panel = document.getElementById('top-search-panel');\r\n  if (!input || !panel) return;\r\n\r\n  let topTerms = [];\r\n  let abortCtrl;\r\n  const DEBOUNCE_MS = 200;\r\n  let tmr;\r\n\r\n  const navigateToSearch = (term) => {\r\n    if (!term) return;\r\n    fetch(`${API_CONFIG.BASE_URL}/search/track`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ term }) }).catch(()=>{});\r\n    window.location.href = `/pages/menu-departments-item/search.html?search=${encodeURIComponent(term)}`;\r\n  };\r\n\r\n  const priceHtml = (p)=>{\r\n    if (p.promocao?.ativa && p.promocao.porcentagem>0) {\r\n      const disc = p.venda * (1 - p.promocao.porcentagem/100);\r\n      return `<div><span class=\"block text-sm text-gray-500 line-through\">R$ ${p.venda.toFixed(2).replace('.', ',')}</span><span class=\"text-base font-bold text-primary\">R$ ${disc.toFixed(2).replace('.', ',')}</span></div>`;\r\n    }\r\n    if (p.precoClube && p.precoClube < p.venda) {\r\n      return `<div><span class=\"block text-sm text-gray-500\">R$ ${p.venda.toFixed(2).replace('.', ',')}</span><span class=\"text-base font-bold text-primary\">R$ ${p.precoClube.toFixed(2).replace('.', ',')}</span></div>`;\r\n    }\r\n    return `<span class=\"text-base font-bold text-gray-900\">R$ ${p.venda.toFixed(2).replace('.', ',')}</span>`;\r\n  };\r\n\r\n  const renderTop = ()=>{\r\n    panel.innerHTML = `\r\n      <div class=\"p-3 border-b bg-gray-50 rounded-t-xl font-semibold text-gray-700\">Termos mais buscados</div>\r\n      <ul class=\"max-h-80 overflow-auto\">\r\n        ${topTerms.map(t=>`<li class=\"px-4 py-3 hover:bg-primary/10 cursor-pointer flex items-center gap-3\" data-term=\"${t}\"><i class=\"fa-solid fa-magnifying-glass text-gray-500\"></i><span>${t}</span></li>`).join('')}\r\n      </ul>`;\r\n    panel.classList.remove('hidden');\r\n  };\r\n\r\n  const renderSuggest = (terms, products)=>{\r\n    panel.innerHTML = `\r\n      <ul class=\"divide-y\">\r\n        ${terms.map(t=>`<li class=\"px-4 py-3 hover:bg-primary/10 cursor-pointer flex items-center gap-3\" data-term=\"${t}\"><i class=\\\"fa-solid fa-magnifying-glass text-gray-500\\\"></i><span>${t}</span></li>`).join('')}\r\n      </ul>\r\n      <div class=\"mt-2 border-t\">\r\n        <div class=\"p-3 bg-gray-50 font-semibold text-gray-700\">Produtos sugeridos</div>\r\n        <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 p-3\">\r\n          ${products.map(p=>`<a href=\"/pages/menu-departments-item/product.html?id=${p._id}\" class=\"flex gap-3 border rounded-lg p-2 hover:shadow\">\r\n              <img src=\"${API_CONFIG.SERVER_URL}${p.imagemPrincipal}\" class=\"w-16 h-16 object-contain bg-white rounded\" alt=\"${p.nome}\">\r\n              <div class=\"min-w-0\">\r\n                <div class=\"text-sm text-gray-800 line-clamp-2\">${p.nome}</div>\r\n                <div class=\"mt-1\">${priceHtml(p)}</div>\r\n              </div>\r\n            </a>`).join('')}\r\n        </div>\r\n      </div>`;\r\n    panel.classList.remove('hidden');\r\n  };\r\n\r\n  const fetchTop = async ()=>{\r\n    try {\r\n      const r = await fetch(`${API_CONFIG.BASE_URL}/search/top?limit=5`);\r\n      topTerms = await r.json().catch(()=>[]);\r\n    } catch { topTerms = []; }\r\n  };\r\n\r\n  const suggest = async (q)=>{\r\n    if (abortCtrl) abortCtrl.abort();\r\n    abortCtrl = new AbortController();\r\n    try {\r\n      const r = await fetch(`${API_CONFIG.BASE_URL}/search/suggest?q=${encodeURIComponent(q)}&limit=4`, { signal: abortCtrl.signal });\r\n      const j = await r.json();\r\n      renderSuggest(j.terms || [], j.products || []);\r\n    } catch(_) {}\r\n  };\r\n\r\n  input.addEventListener('focus', async ()=>{\r\n    if (!topTerms.length) await fetchTop();\r\n    renderTop();\r\n  });\r\n  input.addEventListener('input', ()=>{\r\n    const v = input.value.trim();\r\n    clearTimeout(tmr);\r\n    if (v.length >= 3) tmr = setTimeout(()=> suggest(v), DEBOUNCE_MS);\r\n    else renderTop();\r\n  });\r\n  btn?.addEventListener('click', ()=> navigateToSearch(input.value.trim()));\r\n  input.addEventListener('keydown', (e)=>{ if (e.key==='Enter') navigateToSearch(input.value.trim()); });\r\n\r\n  document.addEventListener('click', (e)=>{\r\n    if (!panel.contains(e.target) && e.target !== input) panel.classList.add('hidden');\r\n  });\r\n  panel.addEventListener('click', (e)=>{\r\n    const li = e.target.closest('[data-term]');\r\n    if (li) navigateToSearch(li.dataset.term);\r\n  });\r\n}\r\n\r\nasync function initializeCarousel() {\r\n    const carousel = document.querySelector('#carousel');\r\n    if (!carousel) return;\r\n\r\n    const carouselContainer = carousel.querySelector('.carousel-container');\r\n    const indicators = Array.from(document.querySelectorAll('.indicator')); // Convertido para Array\r\n    const prevButton = document.getElementById('prev');\r\n    const nextButton = document.getElementById('next');\r\n\r\n    if (!carouselContainer || !prevButton || !nextButton) {\r\n        console.warn('Elementos essenciais do carrossel (container, botões) não encontrados.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`${API_CONFIG.BASE_URL}/banners`);\r\n        const banners = await response.json();\r\n\r\n        carouselContainer.innerHTML = ''; // Limpa o container de slides\r\n        banners.forEach(banner => {\r\n            const slide = document.createElement('div');\r\n            slide.className = 'slide flex-shrink-0';\r\n            slide.innerHTML = `\r\n                <a href=\"${banner.link}\" class=\"block w-full h-full rounded-lg overflow-hidden\">\r\n                    <img src=\"${API_CONFIG.SERVER_URL}${banner.imageUrl}\" alt=\"${banner.title || 'Banner Promocional'}\" class=\"w-full h-full object-contain\">\r\n                </a>\r\n            `;\r\n            carouselContainer.appendChild(slide);\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error(\"Erro ao carregar banners para o carrossel:\", error);\r\n        carouselContainer.innerHTML = '<p class=\"text-center text-white font-semibold\">Não foi possível carregar os banners no momento.</p>';\r\n        return; // Interrompe a execução se não conseguir carregar os banners\r\n    }\r\n\r\n    const slides = Array.from(carousel.querySelectorAll('.slide'));\r\n\r\n    // Se não houver slides após o carregamento, não faz nada\r\n    if (slides.length === 0) {\r\n        prevButton.style.display = 'none';\r\n        nextButton.style.display = 'none';\r\n        indicators.forEach(ind => ind.style.display = 'none');\r\n        return;\r\n    }\r\n\r\n    const N = slides.length;\r\n    let currentIndex = 0; // Começa do primeiro slide\r\n    let autoPlayInterval;\r\n    const AUTO_PLAY_INTERVAL = 5000;\r\n\r\n    // Atualiza as classes CSS dos slides para criar o efeito 3D\r\n    function updateCarouselState() {\r\n        slides.forEach((slide, index) => {\r\n            slide.classList.remove('slide-ativo', 'slide-anterior', 'slide-proximo', 'slide-escondido-esquerda', 'slide-escondido-direita');\r\n            \r\n            if (index === currentIndex) {\r\n                slide.classList.add('slide-ativo');\r\n            } else if (index === (currentIndex - 1 + N) % N) {\r\n                slide.classList.add('slide-anterior');\r\n            } else if (index === (currentIndex + 1) % N) {\r\n                slide.classList.add('slide-proximo');\r\n            } else if (index === (currentIndex - 2 + N) % N) {\r\n                slide.classList.add('slide-escondido-esquerda');\r\n            } else {\r\n                slide.classList.add('slide-escondido-direita');\r\n            }\r\n        });\r\n        \r\n        // Atualiza os indicadores (as barras de progresso)\r\n        indicators.forEach((indicator, i) => {\r\n            if (i < N) { // Garante que só tentamos manipular indicadores que existem\r\n                const progressBar = indicator.querySelector('.progress');\r\n                const barBg = indicator.querySelector('.bar-bg');\r\n                const dot = indicator.querySelector('.dot');\r\n                indicator.style.display = 'block'; // Garante que o indicador é visível\r\n                const isActive = i === currentIndex;\r\n                indicator.classList.toggle('active', isActive);\r\n\r\n                // Controle explícito de visibilidade para evitar interferência do SVG\r\n                if (dot) {\r\n                    dot.style.display = isActive ? 'none' : 'block';\r\n                    try { dot.setAttribute('r', isActive ? '0' : '4'); } catch(_) {}\r\n                }\r\n                if (barBg) barBg.style.display = isActive ? 'block' : 'none';\r\n                if (progressBar) {\r\n                    progressBar.style.display = isActive ? 'block' : 'none';\r\n                    progressBar.style.animation = 'none';\r\n                    if (isActive) {\r\n                        void progressBar.offsetWidth; // Reinicia a animação\r\n                        progressBar.style.animation = `fillIndicator ${AUTO_PLAY_INTERVAL / 1000}s linear forwards`;\r\n                    }\r\n                }\r\n            } else {\r\n                indicator.style.display = 'none'; // Esconde indicadores extra\r\n            }\r\n        });\r\n    }\r\n\r\n    function moveNext() {\r\n        currentIndex = (currentIndex + 1) % N;\r\n        updateCarouselState();\r\n    }\r\n\r\n    function movePrev() {\r\n        currentIndex = (currentIndex - 1 + N) % N;\r\n        updateCarouselState();\r\n    }\r\n    \r\n    function startAutoPlay() {\r\n        stopAutoPlay();\r\n        autoPlayInterval = setInterval(moveNext, AUTO_PLAY_INTERVAL);\r\n    }\r\n\r\n    function stopAutoPlay() {\r\n        clearInterval(autoPlayInterval);\r\n    }\r\n\r\n    nextButton.addEventListener('click', () => {\r\n        stopAutoPlay();\r\n        moveNext();\r\n        startAutoPlay();\r\n    });\r\n\r\n    prevButton.addEventListener('click', () => {\r\n        stopAutoPlay();\r\n        movePrev();\r\n        startAutoPlay();\r\n    });\r\n    \r\n    // Inicia o carrossel\r\n    updateCarouselState();\r\n    startAutoPlay();\r\n}\r\n\r\nfunction checkLoginState() {\r\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\r\n    const loggedOutView = document.getElementById('user-logged-out-view');\r\n    const loggedInView = document.getElementById('user-logged-in-view');\r\n    const userAreaLink = document.querySelector('.user-area');\r\n    const userGreeting = loggedInView ? loggedInView.querySelector('.user-greeting') : null;\r\n    const logoutBtn = document.getElementById('logout-btn');\r\n\r\n    // novo: painel do menu e item de logout dentro do painel\r\n    const userMenuPanel = document.getElementById('user-menu-panel');\r\n    const userMenuLogout = document.getElementById('user-menu-logout');\r\n\r\n    if (!loggedOutView || !loggedInView || !userAreaLink || !logoutBtn) return;\r\n\r\n    if (loggedInUser && loggedInUser.nome) {\r\n        // LOGADO\r\n        loggedOutView.classList.add('hidden');\r\n        loggedInView.classList.remove('hidden');\r\n        userAreaLink.href = `${basePath}pages/meus-dados.html`;\r\n        // Ajusta visual do topo: azul + ícone + ponto final\r\n        try {\r\n          loggedInView.classList.remove('text-gray-700');\r\n          ['flex','items-center','gap-2','text-primary','cursor-pointer'].forEach(c => loggedInView.classList.add(c));\r\n          if (!loggedInView.querySelector('.login-user-icon')) {\r\n            const icon = document.createElement('i');\r\n            icon.className = 'login-user-icon fa-regular fa-user text-lg';\r\n            loggedInView.prepend(icon);\r\n          }\r\n          const nameBold = loggedInView.querySelector('#topbar-user-name');\r\n          if (nameBold && !document.getElementById('greeting-dot')) {\r\n            const dot = document.createElement('span');\r\n            dot.id = 'greeting-dot';\r\n            dot.textContent = '.';\r\n            dot.style.marginLeft = '0.1rem';\r\n            nameBold.insertAdjacentElement('afterend', dot);\r\n          }\r\n        } catch(_) {}\r\n        if (userGreeting) userGreeting.textContent = loggedInUser.nome.split(' ')[0];\r\n\r\n        // reaproveita lógica de sair existente\r\n        logoutBtn.classList.remove('hidden');\r\n        logoutBtn.onclick = () => {\r\n            showModal({\r\n                title: 'Confirmar Saída',\r\n                message: 'Tem a certeza que deseja sair da sua conta?',\r\n                confirmText: 'Sair',\r\n                cancelText: 'Cancelar',\r\n                onConfirm: () => {\r\n                    try { localStorage.removeItem('loggedInUser'); } catch(_) {}\r\n                    try { localStorage.removeItem('auth_token'); } catch(_) {}\r\n                    try { localStorage.removeItem('user'); } catch(_) {}\r\n                    window.location.href = `${basePath}index.html`;\r\n                },\r\n            });\r\n        };\r\n\r\n        // habilita popover\r\n        if (userMenuPanel) {\r\n            userMenuPanel.classList.remove('hidden');\r\n            userMenuPanel.classList.add('peer-hover:block','hover:block');\r\n        }\r\n        // oculta botão circular antigo, se existir\r\n        const oldBtn = document.getElementById('user-menu-trigger');\r\n        if (oldBtn) { oldBtn.style.display = 'none'; oldBtn.setAttribute('aria-hidden','true'); }\r\n        if (userMenuLogout && logoutBtn) {\r\n            userMenuLogout.onclick = (e) => { e.preventDefault(); logoutBtn.click(); };\r\n        }\r\n    } else {\r\n        // DESLOGADO\r\n        loggedOutView.classList.remove('hidden');\r\n        loggedInView.classList.add('hidden');\r\n        logoutBtn.classList.add('hidden');\r\n        userAreaLink.href = `${basePath}pages/login.html`;\r\n\r\n        // desabilita popover quando deslogado (não deve aparecer)\r\n        if (userMenuPanel) {\r\n            userMenuPanel.classList.add('hidden');\r\n            userMenuPanel.classList.remove('peer-hover:block','hover:block');\r\n        }\r\n    }\r\n}\r\n\r\nfunction initializeHideOnScroll() {\r\n    let lastScroll = 0;\r\n    const categoryNav = document.getElementById('category-nav');\r\n    if (!categoryNav) return;\r\n    window.addEventListener('scroll', () => {\r\n        const currentScroll = window.pageYOffset;\r\n        if (currentScroll > lastScroll && currentScroll > 80) {\r\n            categoryNav.classList.add('hide');\r\n        } else {\r\n            categoryNav.classList.remove('hide');\r\n        }\r\n        lastScroll = currentScroll;\r\n    });\r\n}\r\n\r\nfunction initializeFlyoutMenu() {\r\n    const menuPanels = document.querySelectorAll('#dog-menu-panel, #cat-menu-panel, #bird-menu-panel, #fish-menu-panel, #other-menu-panel, #garden-menu-panel');\r\n    menuPanels.forEach(panel => {\r\n        const mainCategoriesList = panel.querySelector('ul[id$=\"-main-categories\"]');\r\n        if (!mainCategoriesList) return;\r\n        const mainCategories = mainCategoriesList.querySelectorAll('li');\r\n        const allSubmenus = panel.querySelectorAll('.submenu-content, .submenu-content-cat, .submenu-content-bird, .submenu-content-fish, .submenu-content-other, .submenu-content-garden');\r\n        mainCategories.forEach(category => {\r\n            category.addEventListener('mouseenter', () => {\r\n                mainCategories.forEach(c => c.querySelector('a').classList.remove('bg-primary/10', 'text-primary', 'font-semibold'));\r\n                category.querySelector('a').classList.add('bg-primary/10', 'text-primary', 'font-semibold');\r\n                allSubmenus.forEach(submenu => submenu.classList.add('hidden'));\r\n                const submenuId = category.dataset.submenu;\r\n                const newSubmenu = document.getElementById(submenuId);\r\n                if (newSubmenu) newSubmenu.classList.remove('hidden');\r\n            });\r\n        });\r\n        panel.addEventListener('mouseleave', () => {\r\n            allSubmenus.forEach(submenu => submenu.classList.add('hidden'));\r\n            mainCategories.forEach(c => c.querySelector('a').classList.remove('bg-primary/10', 'text-primary', 'font-semibold'));\r\n        });\r\n    });\r\n}\r\n\r\nasync function checkAdminLink() {\r\n  const adminLink = document.getElementById('admin-link');\r\n  if (!adminLink) return;\r\n\r\n  // deixa escondido até confirmar\r\n  const show = (ok) => {\r\n    if (ok) adminLink.classList.remove('hidden');\r\n    else adminLink.classList.add('hidden');\r\n  };\r\n\r\n  try {\r\n    // pega do cache\r\n    let cached = null;\r\n    try { cached = JSON.parse(localStorage.getItem('loggedInUser') || 'null'); } catch {}\r\n    let role = cached?.role;\r\n\r\n    // se não tiver role no cache, valida no backend\r\n    if (!role && cached?.token) {\r\n      const resp = await fetch(`${API_CONFIG.BASE_URL}/auth/check`, {\r\n        headers: { Authorization: `Bearer ${cached.token}` },\r\n      });\r\n      if (resp.ok) {\r\n        const data = await resp.json();\r\n        role = data?.role;\r\n        // atualiza o cache mantendo os demais campos\r\n        localStorage.setItem('loggedInUser', JSON.stringify({ ...cached, role }));\r\n      }\r\n    }\r\n\r\n    // libera para admin e admin_master (bloqueia funcionário/cliente)\r\n    show(role === 'admin' || role === 'admin_master');\r\n  } catch (err) {\r\n    console.error('checkAdminLink:', err);\r\n    show(false);\r\n  }\r\n}\r\n\r\nasync function checkFuncionariosLink() {\r\n  const funcLink = document.getElementById('funcionarios-link');\r\n  if (!funcLink) return;\r\n\r\n  const show = (ok) => {\r\n    if (ok) funcLink.classList.remove('hidden');\r\n    else funcLink.classList.add('hidden');\r\n  };\r\n\r\n  try {\r\n    let cached = null;\r\n    try { cached = JSON.parse(localStorage.getItem('loggedInUser') || 'null'); } catch {}\r\n    let role = cached?.role;\r\n\r\n    if (!role && cached?.token) {\r\n      const resp = await fetch(`${API_CONFIG.BASE_URL}/auth/check`, {\r\n        headers: { Authorization: `Bearer ${cached.token}` },\r\n      });\r\n      if (resp.ok) {\r\n        const data = await resp.json();\r\n        role = data?.role;\r\n        // mantém demais campos do cache\r\n        localStorage.setItem('loggedInUser', JSON.stringify({ ...cached, role }));\r\n      }\r\n    }\r\n\r\n    // funcionário, admin e admin_master têm acesso ao painel de Funcionários\r\n    show(role === 'funcionario' || role === 'admin' || role === 'admin_master');\r\n  } catch (err) {\r\n    console.error('checkFuncionariosLink:', err);\r\n    show(false);\r\n  }\r\n}\r\n\r\nasync function loadFeaturedProducts() {\r\n    const container = document.getElementById('featured-products-container');\r\n    const wrapper = document.getElementById('featured-slider-wrapper');\r\n    const prevButton = document.getElementById('prev-featured-btn');\r\n    const nextButton = document.getElementById('next-featured-btn');\r\n\r\n    // Se os elementos do slider não existirem na página, a função para.\r\n    if (!container || !wrapper || !prevButton || !nextButton) {\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`${API_CONFIG.BASE_URL}/products/destaques`);\r\n        if (!response.ok) throw new Error('Não foi possível buscar os produtos em destaque.');\r\n        \r\n        const products = await response.json();\r\n\r\n        if (products.length === 0) {\r\n            wrapper.innerHTML = '<p class=\"text-center text-gray-500 col-span-full\">Nenhum produto em destaque no momento.</p>';\r\n            return;\r\n        }\r\n\r\n        container.innerHTML = ''; \r\n\r\n        products.forEach(product => {\r\n            // A lógica de preços que já definimos continua igual\r\n            let priceHtml = '';\r\n            if (product.promocao && product.promocao.ativa && product.promocao.porcentagem > 0) {\r\n                const discountedPrice = product.venda * (1 - product.promocao.porcentagem / 100);\r\n                priceHtml = `\r\n                    <div>\r\n                        <span class=\"block text-sm text-gray-500 line-through\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                        <div class=\"flex items-center\">\r\n                            <span class=\"text-lg font-bold text-primary\">R$ ${discountedPrice.toFixed(2).replace('.', ',')}</span>\r\n                            <span class=\"ml-2 text-xs font-bold text-white bg-primary rounded-full px-2 py-0.5\">Promo</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            } else if (product.promocaoCondicional && product.promocaoCondicional.ativa) {\r\n                let promoText = 'Oferta Especial';\r\n                if (product.promocaoCondicional.tipo === 'leve_pague') {\r\n                    promoText = `Leve ${product.promocaoCondicional.leve} Pague ${product.promocaoCondicional.pague}`;\r\n                } else if (product.promocaoCondicional.tipo === 'acima_de') {\r\n                    promoText = `+${product.promocaoCondicional.quantidadeMinima} un. com ${product.promocaoCondicional.descontoPorcentagem}%`;\r\n                }\r\n                priceHtml = `\r\n                    <div>\r\n                        <span class=\"block text-lg font-bold text-gray-800\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                        <div class=\"flex items-center\">\r\n                            <span class=\"text-xs font-bold text-white bg-primary rounded-full px-2 py-1\">${promoText}</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            } else if (product.precoClube && product.precoClube < product.venda) {\r\n                priceHtml = `\r\n                    <div>\r\n                        <span class=\"block text-lg font-bold text-gray-950\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                        <div class=\"flex items-center\">\r\n                            <span class=\"text-lg font-bold text-primary\">R$ ${product.precoClube.toFixed(2).replace('.', ',')}</span>\r\n                            <span class=\"ml-2 text-xs font-bold text-white bg-primary rounded-full px-2 py-0.5\">Club</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            } else {\r\n                priceHtml = `<span class=\"block text-lg font-bold text-gray-950\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>`;\r\n            }\r\n\r\n            // Criação do card completo do produto\r\n            const productCard = `\r\n                <a href=\"${basePath}pages/menu-departments-item/product.html?id=${product._id}\" class=\"relative block bg-white rounded-lg shadow product-card transition duration-300 group overflow-hidden w-60 sm:w-64 flex-shrink-0\">\r\n                    \r\n                    ${product.promocao && product.promocao.ativa && product.promocao.porcentagem > 0 ? `\r\n                        <div class=\"absolute top-3 left-0 w-auto bg-primary text-white text-xs font-bold py-1 pl-2 pr-3 rounded-r z-10\">\r\n                            -${product.promocao.porcentagem}% DE DESCONTO\r\n                        </div>\r\n                    ` : ''}\r\n\r\n                    <div class=\"p-4 product-info flex flex-col h-full\">\r\n                        <div class=\"relative w-full h-48 mb-4\">\r\n                            <img src=\"${API_CONFIG.SERVER_URL}${product.imagemPrincipal}\" alt=\"${product.nome}\" class=\"w-full h-full object-cover rounded-md\">\r\n                            \r\n                            <div class=\"add-to-cart absolute bottom-3 right-3 w-[55px] h-[55px] flex items-center justify-center rounded-full transition-all duration-300 opacity-0 group-hover:opacity-100 hover:bg-secondary\" data-product-id=\"${product._id}\">\r\n                                <div data-icon=\"sacola\" class=\"w-[55px] h-[55px]\"></div>\r\n                                <span class=\"sr-only\">Adicionar ao Carrinho</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"product-details flex flex-col flex-grow\">\r\n                            <h3 class=\"font-normal text-base h-12 line-clamp-2\">${product.nome}</h3>\r\n                            <div class=\"product-price flex items-center mb-2 mt-auto min-h-[2.5rem]\">${priceHtml}</div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            `;\r\n\r\n            container.innerHTML += productCard;\r\n        });\r\n\r\n        container.addEventListener('click', async (event) => { // <-- ADICIONADO ASYNC AQUI\r\n            const cartButton = event.target.closest('.add-to-cart');\r\n            if (cartButton) {\r\n                event.preventDefault();\r\n                const productId = cartButton.dataset.productId;\r\n                await CartManager.addItem(productId);\r\n                // Notificação leve (não bloqueia a navegação)\r\n                if (typeof showToast === 'function') {\r\n                showToast('Produto adicionado à sacola.', 'success');\r\n                }\r\n            }\r\n        });\r\n\r\n        // Lógica de navegação do slider\r\n        let currentIndex = 0;\r\n        const totalItems = products.length;\r\n        const updateSlider = () => {\r\n            const card = container.querySelector('.product-card');\r\n            if (!card) return;\r\n            const cardWidth = card.offsetWidth;\r\n            const gap = 24;\r\n            const itemsVisible = Math.floor(wrapper.offsetWidth / (cardWidth + gap));\r\n            const maxIndex = Math.max(0, totalItems - itemsVisible);\r\n            if (currentIndex > maxIndex) currentIndex = maxIndex;\r\n            if (currentIndex < 0) currentIndex = 0;\r\n            const moveDistance = (cardWidth + gap) * currentIndex;\r\n            container.style.transform = `translateX(-${moveDistance}px)`;\r\n            prevButton.disabled = currentIndex === 0;\r\n            nextButton.disabled = currentIndex >= maxIndex;\r\n        };\r\n        nextButton.addEventListener('click', () => {\r\n            const card = container.querySelector('.product-card');\r\n            if (!card) return;\r\n            const cardWidth = card.offsetWidth;\r\n            const gap = 24;\r\n            const itemsVisible = Math.floor(wrapper.offsetWidth / (cardWidth + gap));\r\n            const maxIndex = Math.max(0, totalItems - itemsVisible);\r\n            currentIndex = Math.min(currentIndex + itemsVisible, maxIndex);\r\n            updateSlider();\r\n        });\r\n        prevButton.addEventListener('click', () => {\r\n            const card = container.querySelector('.product-card');\r\n            if (!card) return;\r\n            const cardWidth = card.offsetWidth;\r\n            const gap = 24;\r\n            const itemsVisible = Math.floor(wrapper.offsetWidth / (cardWidth + gap));\r\n            currentIndex = Math.max(currentIndex - itemsVisible, 0);\r\n            updateSlider();\r\n        });\r\n        let resizeTimer;\r\n        window.addEventListener('resize', () => {\r\n            clearTimeout(resizeTimer);\r\n            resizeTimer = setTimeout(updateSlider, 250);\r\n        });\r\n        updateSlider();\r\n        if (typeof loadIcons === 'function') {\r\n            await loadIcons();\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error('Erro ao carregar produtos em destaque:', error);\r\n        wrapper.innerHTML = '<p class=\"text-center text-red-500\">Ocorreu um erro ao carregar os produtos.</p>';\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    await loadComponents();\r\n\r\n    document.dispatchEvent(new CustomEvent('components:ready'));\r\n    \r\n    if (typeof loadIcons === 'function') {\r\n        await loadIcons();\r\n    }\r\n\r\n    // Inicializador de páginas específicas\r\n    const path = window.location.pathname;\r\n\r\n    // ----> Lógica para a página inicial\r\n    if (path.endsWith('/') || path.endsWith('index.html')) {\r\n        initializeCarousel();\r\n        loadFeaturedProducts();\r\n    }\r\n\r\n    // ----> Lógica para as páginas de admin\r\n    if (path.includes('/admin/')) {\r\n        if (path.endsWith('admin-destaques.html')) {\r\n            if (typeof initializeAdminDestaquesPage === 'function') initializeAdminDestaquesPage();\r\n        }\r\n    }\r\n    \r\n    // ----> Lógica para as páginas de conta do utilizador\r\n    if (path.endsWith('meus-dados.html')) {\r\n        if (typeof initializeAccountPage === 'function') initializeAccountPage();\r\n    }\r\n    \r\n    // ----> Lógica para as páginas de autenticação (Login e Cadastro)\r\n    if (path.endsWith('login.html') || path.endsWith('cadastro.html')) {\r\n        if (typeof initializeAuth === 'function') {\r\n            initializeAuth();\r\n        }\r\n    }\r\n\r\n    // Dog Icon Hover Effect (força a transição toda vez)\r\n    const dogLink = document.querySelector('a[href*=\"Cachorro\"]');\r\n    const dogIcon = dogLink?.querySelector('.dog-anim');\r\n\r\n    if (dogLink && dogIcon) {\r\n    dogLink.addEventListener('mouseenter', () => {\r\n        dogIcon.classList.remove('hide-dog');\r\n        dogIcon.classList.add('show-dog');\r\n    });\r\n\r\n    dogLink.addEventListener('mouseleave', () => {\r\n        dogIcon.classList.remove('show-dog');\r\n        dogIcon.classList.add('hide-dog');\r\n    });\r\n    }\r\n\r\n});\r\n"
        }
    ]
}