{
    "sourceFile": "scripts/main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1756462793345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756462886517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -468,24 +468,21 @@\n         if (typeof initializeAuth === 'function') {\r\n             initializeAuth();\r\n         }\r\n     }\r\n-\r\n-    document.addEventListener(\"DOMContentLoaded\", () => {\r\n     const dogLinks = document.querySelectorAll(\".group\");\r\n \r\n     dogLinks.forEach(link => {\r\n         const dogIcon = link.querySelector(\".dog-anim\");\r\n \r\n         if (dogIcon) {\r\n-        link.addEventListener(\"mouseenter\", () => {\r\n-            dogIcon.classList.remove(\"hidden\");\r\n-        });\r\n+            link.addEventListener(\"mouseenter\", () => {\r\n+                dogIcon.classList.remove(\"hidden\");\r\n+            });\r\n \r\n-        link.addEventListener(\"mouseleave\", () => {\r\n-            dogIcon.classList.add(\"hidden\");\r\n-        });\r\n+            link.addEventListener(\"mouseleave\", () => {\r\n+                dogIcon.classList.add(\"hidden\");\r\n+            });\r\n         }\r\n     });\r\n-    });\r\n \r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756463715103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -468,10 +468,10 @@\n         if (typeof initializeAuth === 'function') {\r\n             initializeAuth();\r\n         }\r\n     }\r\n+\r\n     const dogLinks = document.querySelectorAll(\".group\");\r\n-\r\n     dogLinks.forEach(link => {\r\n         const dogIcon = link.querySelector(\".dog-anim\");\r\n \r\n         if (dogIcon) {\r\n@@ -484,5 +484,21 @@\n             });\r\n         }\r\n     });\r\n \r\n+    // Dog Icon Hover Effect (força a transição toda vez)\r\n+    const dogLink = document.querySelector('a[href*=\"Cachorro\"]');\r\n+    const dogIcon = dogLink?.querySelector('.dog-anim');\r\n+\r\n+    if (dogLink && dogIcon) {\r\n+    dogLink.addEventListener('mouseenter', () => {\r\n+        dogIcon.classList.remove('hide-dog');\r\n+        dogIcon.classList.add('show-dog');\r\n+    });\r\n+\r\n+    dogLink.addEventListener('mouseleave', () => {\r\n+        dogIcon.classList.remove('show-dog');\r\n+        dogIcon.classList.add('hide-dog');\r\n+    });\r\n+    }\r\n+\r\n });\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756463823002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -469,23 +469,8 @@\n             initializeAuth();\r\n         }\r\n     }\r\n \r\n-    const dogLinks = document.querySelectorAll(\".group\");\r\n-    dogLinks.forEach(link => {\r\n-        const dogIcon = link.querySelector(\".dog-anim\");\r\n-\r\n-        if (dogIcon) {\r\n-            link.addEventListener(\"mouseenter\", () => {\r\n-                dogIcon.classList.remove(\"hidden\");\r\n-            });\r\n-\r\n-            link.addEventListener(\"mouseleave\", () => {\r\n-                dogIcon.classList.add(\"hidden\");\r\n-            });\r\n-        }\r\n-    });\r\n-\r\n     // Dog Icon Hover Effect (força a transição toda vez)\r\n     const dogLink = document.querySelector('a[href*=\"Cachorro\"]');\r\n     const dogIcon = dogLink?.querySelector('.dog-anim');\r\n \r\n"
                },
                {
                    "date": 1756748625799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,15 +266,43 @@\n         });\r\n     });\r\n }\r\n \r\n-function checkAdminLink() {\r\n-    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\r\n-    const adminLink = document.getElementById('admin-link');\r\n-    if (!adminLink) return;\r\n-    if (loggedInUser && loggedInUser.email === API_CONFIG.ADMIN_EMAIL) {\r\n-        adminLink.classList.remove('hidden');\r\n+async function checkAdminLink() {\r\n+  const adminLink = document.getElementById('admin-link');\r\n+  if (!adminLink) return;\r\n+\r\n+  // deixa escondido até confirmar\r\n+  const show = (ok) => {\r\n+    if (ok) adminLink.classList.remove('hidden');\r\n+    else adminLink.classList.add('hidden');\r\n+  };\r\n+\r\n+  try {\r\n+    // pega do cache\r\n+    let cached = null;\r\n+    try { cached = JSON.parse(localStorage.getItem('loggedInUser') || 'null'); } catch {}\r\n+    let role = cached?.role;\r\n+\r\n+    // se não tiver role no cache, valida no backend\r\n+    if (!role && cached?.token) {\r\n+      const resp = await fetch(`${API_CONFIG.BASE_URL}/auth/check`, {\r\n+        headers: { Authorization: `Bearer ${cached.token}` },\r\n+      });\r\n+      if (resp.ok) {\r\n+        const data = await resp.json();\r\n+        role = data?.role;\r\n+        // atualiza o cache mantendo os demais campos\r\n+        localStorage.setItem('loggedInUser', JSON.stringify({ ...cached, role }));\r\n+      }\r\n     }\r\n+\r\n+    // libera para admin e admin_master (bloqueia funcionário/cliente)\r\n+    show(role === 'admin' || role === 'admin_master');\r\n+  } catch (err) {\r\n+    console.error('checkAdminLink:', err);\r\n+    show(false);\r\n+  }\r\n }\r\n \r\n async function loadFeaturedProducts() {\r\n     const container = document.getElementById('featured-products-container');\r\n"
                },
                {
                    "date": 1756764499669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -405,10 +405,13 @@\n             const cartButton = event.target.closest('.add-to-cart');\r\n             if (cartButton) {\r\n                 event.preventDefault();\r\n                 const productId = cartButton.dataset.productId;\r\n-                await CartManager.addItem(productId); // <-- ADICIONADO AWAIT AQUI\r\n-                showModal({ title: 'Adicionado!', message: 'Produto adicionado à sacola com sucesso.', confirmText: 'OK' });\r\n+                await CartManager.addItem(productId);\r\n+                // Notificação leve (não bloqueia a navegação)\r\n+                if (typeof showToast === 'function') {\r\n+                showToast('Produto adicionado à sacola.', 'success');\r\n+                }\r\n             }\r\n         });\r\n \r\n         // Lógica de navegação do slider\r\n"
                },
                {
                    "date": 1756841058226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,10 @@\n             'cart-placeholder': `${basePath}components/cart.html`,\r\n             'modal-placeholder': `${basePath}components/info-modal.html`,\r\n             'confirm-modal-placeholder': `${basePath}components/confirm-modal.html`,\r\n             'admin-sidebar-placeholder': `${basePath}components/admin-sidebar.html`,\r\n-            'nossas-lojas-sidebar-placeholder': `${basePath}components/nossas-lojas-sidebar.html`\r\n+            'nossas-lojas-sidebar-placeholder': `${basePath}components/nossas-lojas-sidebar.html`,\r\n+            'account-sidebar-placeholder': `${basePath}components/account-sidebar.html`,\r\n         };\r\n         for (const id in placeholders) {\r\n             const element = document.getElementById(id);\r\n             if (element) {\r\n"
                },
                {
                    "date": 1756841084425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n             'cart-placeholder': `${basePath}components/cart.html`,\r\n             'modal-placeholder': `${basePath}components/info-modal.html`,\r\n             'confirm-modal-placeholder': `${basePath}components/confirm-modal.html`,\r\n             'admin-sidebar-placeholder': `${basePath}components/admin-sidebar.html`,\r\n-            'nossas-lojas-sidebar-placeholder': `${basePath}components/nossas-lojas-sidebar.html`,\r\n             'account-sidebar-placeholder': `${basePath}components/account-sidebar.html`,\r\n+            'nossas-lojas-sidebar-placeholder': `${basePath}components/nossas-lojas-sidebar.html`\r\n         };\r\n         for (const id in placeholders) {\r\n             const element = document.getElementById(id);\r\n             if (element) {\r\n"
                },
                {
                    "date": 1756841110394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,13 @@\n                 const response = await fetch(placeholders[id]);\r\n                 if (!response.ok) throw new Error(`Falha ao carregar ${placeholders[id]}`);\r\n                 element.innerHTML = await response.text();\r\n \r\n+                if (id === 'account-sidebar-placeholder') {\r\n+                updateActiveAccountLink();\r\n+                checkAdminLink(); // reaproveita a mesma função já usada no header\r\n+                }\r\n+\r\n                 if (id === 'header-placeholder') {\r\n                     initializeHeaderScripts();\r\n                     checkLoginState();\r\n                     initializeHideOnScroll();\r\n"
                },
                {
                    "date": 1756841130198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,8 +69,37 @@\n         }\r\n     });\r\n }\r\n \r\n+function updateActiveAccountLink() {\r\n+  const wrapper = document.getElementById('account-sidebar-placeholder');\r\n+  if (!wrapper) return;\r\n+\r\n+  const current = window.location.pathname + window.location.search + window.location.hash;\r\n+  const navLinks = wrapper.querySelectorAll('nav a');\r\n+\r\n+  const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n+  const activeClasses   = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n+\r\n+  navLinks.forEach(link => {\r\n+    const href = link.getAttribute('href');\r\n+    if (!href || href === '#') return;\r\n+\r\n+    // Normaliza comparando só o pathname\r\n+    const url = new URL(href, window.location.origin);\r\n+    const isActive = window.location.pathname.endsWith(url.pathname);\r\n+\r\n+    if (isActive) {\r\n+      link.classList.remove(...inactiveClasses);\r\n+      link.classList.add(...activeClasses);\r\n+      link.classList.remove('hover:bg-gray-100');\r\n+    } else {\r\n+      link.classList.remove(...activeClasses);\r\n+      link.classList.add(...inactiveClasses);\r\n+    }\r\n+  });\r\n+}\r\n+\r\n async function initializeHeaderScripts() {\r\n     const mobileMenuButton = document.getElementById('mobile-menu-button');\r\n     const menu = document.getElementById('mobile-menu');\r\n     if (mobileMenuButton && menu) {\r\n"
                },
                {
                    "date": 1756842649186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -502,8 +502,10 @@\n }\r\n \r\n document.addEventListener('DOMContentLoaded', async () => {\r\n     await loadComponents();\r\n+\r\n+    document.dispatchEvent(new CustomEvent('components:ready'));\r\n     \r\n     if (typeof loadIcons === 'function') {\r\n         await loadIcons();\r\n     }\r\n"
                },
                {
                    "date": 1756848274584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,30 +237,57 @@\n     const loggedInView = document.getElementById('user-logged-in-view');\r\n     const userAreaLink = document.querySelector('.user-area');\r\n     const userGreeting = loggedInView ? loggedInView.querySelector('.user-greeting') : null;\r\n     const logoutBtn = document.getElementById('logout-btn');\r\n+\r\n+    // novo: painel do menu e item de logout dentro do painel\r\n+    const userMenuPanel = document.getElementById('user-menu-panel');\r\n+    const userMenuLogout = document.getElementById('user-menu-logout');\r\n+\r\n     if (!loggedOutView || !loggedInView || !userAreaLink || !logoutBtn) return;\r\n+\r\n     if (loggedInUser && loggedInUser.nome) {\r\n+        // LOGADO\r\n         loggedOutView.classList.add('hidden');\r\n         loggedInView.classList.remove('hidden');\r\n         userAreaLink.href = `${basePath}pages/meus-dados.html`;\r\n-        userGreeting.textContent = loggedInUser.nome.split(' ')[0];\r\n+        if (userGreeting) userGreeting.textContent = loggedInUser.nome.split(' ')[0];\r\n+\r\n+        // reaproveita lógica de sair existente\r\n         logoutBtn.classList.remove('hidden');\r\n         logoutBtn.onclick = () => {\r\n             showModal({\r\n-                title: 'Confirmar Saída', message: 'Tem a certeza que deseja sair da sua conta?',\r\n-                confirmText: 'Sair', cancelText: 'Cancelar',\r\n+                title: 'Confirmar Saída',\r\n+                message: 'Tem a certeza que deseja sair da sua conta?',\r\n+                confirmText: 'Sair',\r\n+                cancelText: 'Cancelar',\r\n                 onConfirm: () => {\r\n                     localStorage.removeItem('loggedInUser');\r\n                     window.location.href = `${basePath}index.html`;\r\n                 },\r\n             });\r\n         };\r\n+\r\n+        // habilita popover no hover (como o menu do telefone)\r\n+        if (userMenuPanel) {\r\n+            userMenuPanel.classList.remove('hidden');\r\n+            userMenuPanel.classList.add('peer-hover:block','hover:block');\r\n+        }\r\n+        if (userMenuLogout && logoutBtn) {\r\n+            userMenuLogout.onclick = (e) => { e.preventDefault(); logoutBtn.click(); };\r\n+        }\r\n     } else {\r\n+        // DESLOGADO\r\n         loggedOutView.classList.remove('hidden');\r\n         loggedInView.classList.add('hidden');\r\n         logoutBtn.classList.add('hidden');\r\n         userAreaLink.href = `${basePath}pages/login.html`;\r\n+\r\n+        // desabilita popover quando deslogado (não deve aparecer)\r\n+        if (userMenuPanel) {\r\n+            userMenuPanel.classList.add('hidden');\r\n+            userMenuPanel.classList.remove('peer-hover:block','hover:block');\r\n+        }\r\n     }\r\n }\r\n \r\n function initializeHideOnScroll() {\r\n"
                }
            ],
            "date": 1756462793345,
            "name": "Commit-0",
            "content": "var basePath = basePath || '';\r\n\r\nasync function loadComponents() {\r\n    try {\r\n        const placeholders = {\r\n            'header-placeholder': `${basePath}components/header.html`,\r\n            'admin-header-placeholder': `${basePath}components/admin-header.html`,\r\n            'footer-placeholder': `${basePath}components/footer.html`,\r\n            'admin-footer-placeholder': `${basePath}components/admin-footer.html`,\r\n            'cart-placeholder': `${basePath}components/cart.html`,\r\n            'modal-placeholder': `${basePath}components/info-modal.html`,\r\n            'confirm-modal-placeholder': `${basePath}components/confirm-modal.html`,\r\n            'admin-sidebar-placeholder': `${basePath}components/admin-sidebar.html`,\r\n            'nossas-lojas-sidebar-placeholder': `${basePath}components/nossas-lojas-sidebar.html`\r\n        };\r\n        for (const id in placeholders) {\r\n            const element = document.getElementById(id);\r\n            if (element) {\r\n                const response = await fetch(placeholders[id]);\r\n                if (!response.ok) throw new Error(`Falha ao carregar ${placeholders[id]}`);\r\n                element.innerHTML = await response.text();\r\n\r\n                if (id === 'header-placeholder') {\r\n                    initializeHeaderScripts();\r\n                    checkLoginState();\r\n                    initializeHideOnScroll();\r\n                    initializeFlyoutMenu();\r\n                    checkAdminLink();\r\n                }\r\n\r\n                if (id === 'cart-placeholder') {\r\n                    initializeCart(); // A função agora é chamada aqui!\r\n                }\r\n                \r\n                if (id === 'admin-sidebar-placeholder') {\r\n                    updateActiveAdminLink();\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Erro ao carregar os componentes:\", error);\r\n    }\r\n}\r\nwindow.loadComponents = loadComponents;\r\n\r\nfunction updateActiveAdminLink() {\r\n    const sidebar = document.getElementById('admin-sidebar-placeholder');\r\n    if (!sidebar) return;\r\n    const currentPageUrl = window.location.href;\r\n    const navLinks = sidebar.querySelectorAll('nav a');\r\n    navLinks.forEach(link => {\r\n        const linkHref = link.getAttribute('href');\r\n        if (!linkHref || linkHref === '#') return;\r\n        const inactiveClasses = ['text-gray-600', 'hover:bg-gray-100'];\r\n        const activeClasses = ['bg-primary/10', 'text-primary', 'font-bold', 'border-l-4', 'border-primary'];\r\n        if (currentPageUrl.endsWith(linkHref)) {\r\n            link.classList.remove(...inactiveClasses);\r\n            link.classList.add(...activeClasses);\r\n            link.classList.remove('hover:bg-gray-100'); \r\n        } else {\r\n            link.classList.remove(...activeClasses);\r\n            link.classList.add(...inactiveClasses);\r\n        }\r\n    });\r\n}\r\n\r\nasync function initializeHeaderScripts() {\r\n    const mobileMenuButton = document.getElementById('mobile-menu-button');\r\n    const menu = document.getElementById('mobile-menu');\r\n    if (mobileMenuButton && menu) {\r\n        mobileMenuButton.addEventListener('click', () => menu.classList.toggle('hidden'));\r\n    }\r\n}\r\n\r\nasync function initializeCarousel() {\r\n    const carousel = document.querySelector('#carousel');\r\n    if (!carousel) return;\r\n\r\n    const carouselContainer = carousel.querySelector('.carousel-container');\r\n    const indicators = Array.from(document.querySelectorAll('.indicator')); // Convertido para Array\r\n    const prevButton = document.getElementById('prev');\r\n    const nextButton = document.getElementById('next');\r\n\r\n    if (!carouselContainer || !prevButton || !nextButton) {\r\n        console.warn('Elementos essenciais do carrossel (container, botões) não encontrados.');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`${API_CONFIG.BASE_URL}/banners`);\r\n        const banners = await response.json();\r\n\r\n        carouselContainer.innerHTML = ''; // Limpa o container de slides\r\n        banners.forEach(banner => {\r\n            const slide = document.createElement('div');\r\n            slide.className = 'slide flex-shrink-0';\r\n            slide.innerHTML = `\r\n                <a href=\"${banner.link}\" class=\"block w-full h-full rounded-lg overflow-hidden\">\r\n                    <img src=\"${API_CONFIG.SERVER_URL}${banner.imageUrl}\" alt=\"${banner.title || 'Banner Promocional'}\" class=\"w-full h-full object-contain\">\r\n                </a>\r\n            `;\r\n            carouselContainer.appendChild(slide);\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error(\"Erro ao carregar banners para o carrossel:\", error);\r\n        carouselContainer.innerHTML = '<p class=\"text-center text-white font-semibold\">Não foi possível carregar os banners no momento.</p>';\r\n        return; // Interrompe a execução se não conseguir carregar os banners\r\n    }\r\n\r\n    const slides = Array.from(carousel.querySelectorAll('.slide'));\r\n\r\n    // Se não houver slides após o carregamento, não faz nada\r\n    if (slides.length === 0) {\r\n        prevButton.style.display = 'none';\r\n        nextButton.style.display = 'none';\r\n        indicators.forEach(ind => ind.style.display = 'none');\r\n        return;\r\n    }\r\n\r\n    const N = slides.length;\r\n    let currentIndex = 0; // Começa do primeiro slide\r\n    let autoPlayInterval;\r\n    const AUTO_PLAY_INTERVAL = 5000;\r\n\r\n    // Atualiza as classes CSS dos slides para criar o efeito 3D\r\n    function updateCarouselState() {\r\n        slides.forEach((slide, index) => {\r\n            slide.classList.remove('slide-ativo', 'slide-anterior', 'slide-proximo', 'slide-escondido-esquerda', 'slide-escondido-direita');\r\n            \r\n            if (index === currentIndex) {\r\n                slide.classList.add('slide-ativo');\r\n            } else if (index === (currentIndex - 1 + N) % N) {\r\n                slide.classList.add('slide-anterior');\r\n            } else if (index === (currentIndex + 1) % N) {\r\n                slide.classList.add('slide-proximo');\r\n            } else if (index === (currentIndex - 2 + N) % N) {\r\n                slide.classList.add('slide-escondido-esquerda');\r\n            } else {\r\n                slide.classList.add('slide-escondido-direita');\r\n            }\r\n        });\r\n        \r\n        // Atualiza os indicadores (as barras de progresso)\r\n        indicators.forEach((indicator, i) => {\r\n            if (i < N) { // Garante que só tentamos manipular indicadores que existem\r\n                const progressBar = indicator.querySelector('.progress');\r\n                indicator.style.display = 'block'; // Garante que o indicador é visível\r\n                indicator.classList.toggle('active', i === currentIndex);\r\n                if (progressBar) {\r\n                    progressBar.style.animation = 'none';\r\n                    if (i === currentIndex) {\r\n                        void progressBar.offsetWidth; // Reinicia a animação\r\n                        progressBar.style.animation = `fillIndicator ${AUTO_PLAY_INTERVAL / 1000}s linear forwards`;\r\n                    }\r\n                }\r\n            } else {\r\n                indicator.style.display = 'none'; // Esconde indicadores extra\r\n            }\r\n        });\r\n    }\r\n\r\n    function moveNext() {\r\n        currentIndex = (currentIndex + 1) % N;\r\n        updateCarouselState();\r\n    }\r\n\r\n    function movePrev() {\r\n        currentIndex = (currentIndex - 1 + N) % N;\r\n        updateCarouselState();\r\n    }\r\n    \r\n    function startAutoPlay() {\r\n        stopAutoPlay();\r\n        autoPlayInterval = setInterval(moveNext, AUTO_PLAY_INTERVAL);\r\n    }\r\n\r\n    function stopAutoPlay() {\r\n        clearInterval(autoPlayInterval);\r\n    }\r\n\r\n    nextButton.addEventListener('click', () => {\r\n        stopAutoPlay();\r\n        moveNext();\r\n        startAutoPlay();\r\n    });\r\n\r\n    prevButton.addEventListener('click', () => {\r\n        stopAutoPlay();\r\n        movePrev();\r\n        startAutoPlay();\r\n    });\r\n    \r\n    // Inicia o carrossel\r\n    updateCarouselState();\r\n    startAutoPlay();\r\n}\r\n\r\nfunction checkLoginState() {\r\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\r\n    const loggedOutView = document.getElementById('user-logged-out-view');\r\n    const loggedInView = document.getElementById('user-logged-in-view');\r\n    const userAreaLink = document.querySelector('.user-area');\r\n    const userGreeting = loggedInView ? loggedInView.querySelector('.user-greeting') : null;\r\n    const logoutBtn = document.getElementById('logout-btn');\r\n    if (!loggedOutView || !loggedInView || !userAreaLink || !logoutBtn) return;\r\n    if (loggedInUser && loggedInUser.nome) {\r\n        loggedOutView.classList.add('hidden');\r\n        loggedInView.classList.remove('hidden');\r\n        userAreaLink.href = `${basePath}pages/meus-dados.html`;\r\n        userGreeting.textContent = loggedInUser.nome.split(' ')[0];\r\n        logoutBtn.classList.remove('hidden');\r\n        logoutBtn.onclick = () => {\r\n            showModal({\r\n                title: 'Confirmar Saída', message: 'Tem a certeza que deseja sair da sua conta?',\r\n                confirmText: 'Sair', cancelText: 'Cancelar',\r\n                onConfirm: () => {\r\n                    localStorage.removeItem('loggedInUser');\r\n                    window.location.href = `${basePath}index.html`;\r\n                },\r\n            });\r\n        };\r\n    } else {\r\n        loggedOutView.classList.remove('hidden');\r\n        loggedInView.classList.add('hidden');\r\n        logoutBtn.classList.add('hidden');\r\n        userAreaLink.href = `${basePath}pages/login.html`;\r\n    }\r\n}\r\n\r\nfunction initializeHideOnScroll() {\r\n    let lastScroll = 0;\r\n    const categoryNav = document.getElementById('category-nav');\r\n    if (!categoryNav) return;\r\n    window.addEventListener('scroll', () => {\r\n        const currentScroll = window.pageYOffset;\r\n        if (currentScroll > lastScroll && currentScroll > 80) {\r\n            categoryNav.classList.add('hide');\r\n        } else {\r\n            categoryNav.classList.remove('hide');\r\n        }\r\n        lastScroll = currentScroll;\r\n    });\r\n}\r\n\r\nfunction initializeFlyoutMenu() {\r\n    const menuPanels = document.querySelectorAll('#dog-menu-panel, #cat-menu-panel, #bird-menu-panel, #fish-menu-panel, #other-menu-panel, #garden-menu-panel');\r\n    menuPanels.forEach(panel => {\r\n        const mainCategoriesList = panel.querySelector('ul[id$=\"-main-categories\"]');\r\n        if (!mainCategoriesList) return;\r\n        const mainCategories = mainCategoriesList.querySelectorAll('li');\r\n        const allSubmenus = panel.querySelectorAll('.submenu-content, .submenu-content-cat, .submenu-content-bird, .submenu-content-fish, .submenu-content-other, .submenu-content-garden');\r\n        mainCategories.forEach(category => {\r\n            category.addEventListener('mouseenter', () => {\r\n                mainCategories.forEach(c => c.querySelector('a').classList.remove('bg-primary/10', 'text-primary', 'font-semibold'));\r\n                category.querySelector('a').classList.add('bg-primary/10', 'text-primary', 'font-semibold');\r\n                allSubmenus.forEach(submenu => submenu.classList.add('hidden'));\r\n                const submenuId = category.dataset.submenu;\r\n                const newSubmenu = document.getElementById(submenuId);\r\n                if (newSubmenu) newSubmenu.classList.remove('hidden');\r\n            });\r\n        });\r\n        panel.addEventListener('mouseleave', () => {\r\n            allSubmenus.forEach(submenu => submenu.classList.add('hidden'));\r\n            mainCategories.forEach(c => c.querySelector('a').classList.remove('bg-primary/10', 'text-primary', 'font-semibold'));\r\n        });\r\n    });\r\n}\r\n\r\nfunction checkAdminLink() {\r\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\r\n    const adminLink = document.getElementById('admin-link');\r\n    if (!adminLink) return;\r\n    if (loggedInUser && loggedInUser.email === API_CONFIG.ADMIN_EMAIL) {\r\n        adminLink.classList.remove('hidden');\r\n    }\r\n}\r\n\r\nasync function loadFeaturedProducts() {\r\n    const container = document.getElementById('featured-products-container');\r\n    const wrapper = document.getElementById('featured-slider-wrapper');\r\n    const prevButton = document.getElementById('prev-featured-btn');\r\n    const nextButton = document.getElementById('next-featured-btn');\r\n\r\n    // Se os elementos do slider não existirem na página, a função para.\r\n    if (!container || !wrapper || !prevButton || !nextButton) {\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(`${API_CONFIG.BASE_URL}/products/destaques`);\r\n        if (!response.ok) throw new Error('Não foi possível buscar os produtos em destaque.');\r\n        \r\n        const products = await response.json();\r\n\r\n        if (products.length === 0) {\r\n            wrapper.innerHTML = '<p class=\"text-center text-gray-500 col-span-full\">Nenhum produto em destaque no momento.</p>';\r\n            return;\r\n        }\r\n\r\n        container.innerHTML = ''; \r\n\r\n        products.forEach(product => {\r\n            // A lógica de preços que já definimos continua igual\r\n            let priceHtml = '';\r\n            if (product.promocao && product.promocao.ativa && product.promocao.porcentagem > 0) {\r\n                const discountedPrice = product.venda * (1 - product.promocao.porcentagem / 100);\r\n                priceHtml = `\r\n                    <div>\r\n                        <span class=\"block text-sm text-gray-500 line-through\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                        <div class=\"flex items-center\">\r\n                            <span class=\"text-lg font-bold text-primary\">R$ ${discountedPrice.toFixed(2).replace('.', ',')}</span>\r\n                            <span class=\"ml-2 text-xs font-bold text-white bg-primary rounded-full px-2 py-0.5\">Promo</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            } else if (product.promocaoCondicional && product.promocaoCondicional.ativa) {\r\n                let promoText = 'Oferta Especial';\r\n                if (product.promocaoCondicional.tipo === 'leve_pague') {\r\n                    promoText = `Leve ${product.promocaoCondicional.leve} Pague ${product.promocaoCondicional.pague}`;\r\n                } else if (product.promocaoCondicional.tipo === 'acima_de') {\r\n                    promoText = `+${product.promocaoCondicional.quantidadeMinima} un. com ${product.promocaoCondicional.descontoPorcentagem}%`;\r\n                }\r\n                priceHtml = `\r\n                    <div>\r\n                        <span class=\"block text-lg font-bold text-gray-800\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                        <div class=\"flex items-center\">\r\n                            <span class=\"text-xs font-bold text-white bg-primary rounded-full px-2 py-1\">${promoText}</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            } else if (product.precoClube && product.precoClube < product.venda) {\r\n                priceHtml = `\r\n                    <div>\r\n                        <span class=\"block text-lg font-bold text-gray-950\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                        <div class=\"flex items-center\">\r\n                            <span class=\"text-lg font-bold text-primary\">R$ ${product.precoClube.toFixed(2).replace('.', ',')}</span>\r\n                            <span class=\"ml-2 text-xs font-bold text-white bg-primary rounded-full px-2 py-0.5\">Club</span>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            } else {\r\n                priceHtml = `<span class=\"block text-lg font-bold text-gray-950\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>`;\r\n            }\r\n\r\n            // Criação do card completo do produto\r\n            const productCard = `\r\n                <a href=\"${basePath}pages/menu-departments-item/product.html?id=${product._id}\" class=\"relative block bg-white rounded-lg shadow product-card transition duration-300 group overflow-hidden w-60 sm:w-64 flex-shrink-0\">\r\n                    \r\n                    ${product.promocao && product.promocao.ativa && product.promocao.porcentagem > 0 ? `\r\n                        <div class=\"absolute top-3 left-0 w-auto bg-primary text-white text-xs font-bold py-1 pl-2 pr-3 rounded-r z-10\">\r\n                            -${product.promocao.porcentagem}% DE DESCONTO\r\n                        </div>\r\n                    ` : ''}\r\n\r\n                    <div class=\"p-4 product-info flex flex-col h-full\">\r\n                        <div class=\"relative w-full h-48 mb-4\">\r\n                            <img src=\"${API_CONFIG.SERVER_URL}${product.imagemPrincipal}\" alt=\"${product.nome}\" class=\"w-full h-full object-cover rounded-md\">\r\n                            \r\n                            <div class=\"add-to-cart absolute bottom-3 right-3 w-[55px] h-[55px] flex items-center justify-center rounded-full transition-all duration-300 opacity-0 group-hover:opacity-100 hover:bg-secondary\" data-product-id=\"${product._id}\">\r\n                                <div data-icon=\"sacola\" class=\"w-[55px] h-[55px]\"></div>\r\n                                <span class=\"sr-only\">Adicionar ao Carrinho</span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"product-details flex flex-col flex-grow\">\r\n                            <h3 class=\"font-normal text-base h-12 line-clamp-2\">${product.nome}</h3>\r\n                            <div class=\"product-price flex items-center mb-2 mt-auto min-h-[2.5rem]\">${priceHtml}</div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            `;\r\n\r\n            container.innerHTML += productCard;\r\n        });\r\n\r\n        container.addEventListener('click', async (event) => { // <-- ADICIONADO ASYNC AQUI\r\n            const cartButton = event.target.closest('.add-to-cart');\r\n            if (cartButton) {\r\n                event.preventDefault();\r\n                const productId = cartButton.dataset.productId;\r\n                await CartManager.addItem(productId); // <-- ADICIONADO AWAIT AQUI\r\n                showModal({ title: 'Adicionado!', message: 'Produto adicionado à sacola com sucesso.', confirmText: 'OK' });\r\n            }\r\n        });\r\n\r\n        // Lógica de navegação do slider\r\n        let currentIndex = 0;\r\n        const totalItems = products.length;\r\n        const updateSlider = () => {\r\n            const card = container.querySelector('.product-card');\r\n            if (!card) return;\r\n            const cardWidth = card.offsetWidth;\r\n            const gap = 24;\r\n            const itemsVisible = Math.floor(wrapper.offsetWidth / (cardWidth + gap));\r\n            const maxIndex = Math.max(0, totalItems - itemsVisible);\r\n            if (currentIndex > maxIndex) currentIndex = maxIndex;\r\n            if (currentIndex < 0) currentIndex = 0;\r\n            const moveDistance = (cardWidth + gap) * currentIndex;\r\n            container.style.transform = `translateX(-${moveDistance}px)`;\r\n            prevButton.disabled = currentIndex === 0;\r\n            nextButton.disabled = currentIndex >= maxIndex;\r\n        };\r\n        nextButton.addEventListener('click', () => {\r\n            const card = container.querySelector('.product-card');\r\n            if (!card) return;\r\n            const cardWidth = card.offsetWidth;\r\n            const gap = 24;\r\n            const itemsVisible = Math.floor(wrapper.offsetWidth / (cardWidth + gap));\r\n            const maxIndex = Math.max(0, totalItems - itemsVisible);\r\n            currentIndex = Math.min(currentIndex + itemsVisible, maxIndex);\r\n            updateSlider();\r\n        });\r\n        prevButton.addEventListener('click', () => {\r\n            const card = container.querySelector('.product-card');\r\n            if (!card) return;\r\n            const cardWidth = card.offsetWidth;\r\n            const gap = 24;\r\n            const itemsVisible = Math.floor(wrapper.offsetWidth / (cardWidth + gap));\r\n            currentIndex = Math.max(currentIndex - itemsVisible, 0);\r\n            updateSlider();\r\n        });\r\n        let resizeTimer;\r\n        window.addEventListener('resize', () => {\r\n            clearTimeout(resizeTimer);\r\n            resizeTimer = setTimeout(updateSlider, 250);\r\n        });\r\n        updateSlider();\r\n        if (typeof loadIcons === 'function') {\r\n            await loadIcons();\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error('Erro ao carregar produtos em destaque:', error);\r\n        wrapper.innerHTML = '<p class=\"text-center text-red-500\">Ocorreu um erro ao carregar os produtos.</p>';\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    await loadComponents();\r\n    \r\n    if (typeof loadIcons === 'function') {\r\n        await loadIcons();\r\n    }\r\n\r\n    // Inicializador de páginas específicas\r\n    const path = window.location.pathname;\r\n\r\n    // ----> Lógica para a página inicial\r\n    if (path.endsWith('/') || path.endsWith('index.html')) {\r\n        initializeCarousel();\r\n        loadFeaturedProducts();\r\n    }\r\n\r\n    // ----> Lógica para as páginas de admin\r\n    if (path.includes('/admin/')) {\r\n        if (path.endsWith('admin-destaques.html')) {\r\n            if (typeof initializeAdminDestaquesPage === 'function') initializeAdminDestaquesPage();\r\n        }\r\n    }\r\n    \r\n    // ----> Lógica para as páginas de conta do utilizador\r\n    if (path.endsWith('meus-dados.html')) {\r\n        if (typeof initializeAccountPage === 'function') initializeAccountPage();\r\n    }\r\n    \r\n    // ----> Lógica para as páginas de autenticação (Login e Cadastro)\r\n    if (path.endsWith('login.html') || path.endsWith('cadastro.html')) {\r\n        if (typeof initializeAuth === 'function') {\r\n            initializeAuth();\r\n        }\r\n    }\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n    const dogLinks = document.querySelectorAll(\".group\");\r\n\r\n    dogLinks.forEach(link => {\r\n        const dogIcon = link.querySelector(\".dog-anim\");\r\n\r\n        if (dogIcon) {\r\n        link.addEventListener(\"mouseenter\", () => {\r\n            dogIcon.classList.remove(\"hidden\");\r\n        });\r\n\r\n        link.addEventListener(\"mouseleave\", () => {\r\n            dogIcon.classList.add(\"hidden\");\r\n        });\r\n        }\r\n    });\r\n    });\r\n\r\n});"
        }
    ]
}