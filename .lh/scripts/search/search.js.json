{
    "sourceFile": "scripts/search/search.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1756764518932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1756764518932,
            "name": "Commit-0",
            "content": "document.addEventListener('DOMContentLoaded', () => {\r\n    initializeSearchPage();\r\n});\r\n\r\nfunction initializeSearchPage() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const categoryName = urlParams.get('category');\r\n    const parentName = urlParams.get('parent'); \r\n    const grandParentName = urlParams.get('grandparent'); // <-- suporte 3º nível\r\n\r\n    const pageTitleEl = document.getElementById('page-title');\r\n    if (pageTitleEl) pageTitleEl.textContent = categoryName;\r\n    document.title = `${categoryName} - E o Bicho`;\r\n\r\n    if (!categoryName) { return; }\r\n\r\n    fetchProductsByCategory(categoryName, parentName, grandParentName); \r\n    fetchAndRenderSubCategories(categoryName, parentName, grandParentName);\r\n    fetchAndRenderBreadcrumb(categoryName, parentName, grandParentName);\r\n}\r\n\r\nasync function fetchAndRenderBreadcrumb(categoryName, parentName, grandParentName) {\r\n    const container = document.getElementById('breadcrumb-container');\r\n    if (!container) return;\r\n    try {\r\n        let apiUrl = `${API_CONFIG.BASE_URL}/categories/path?name=${encodeURIComponent(categoryName)}`;\r\n        if (parentName) apiUrl += `&parent=${encodeURIComponent(parentName)}`;\r\n        if (grandParentName) apiUrl += `&grandparent=${encodeURIComponent(grandParentName)}`;\r\n\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) throw new Error('Falha ao buscar caminho da categoria.');\r\n        const path = await response.json();\r\n        \r\n        container.innerHTML = '<li><a href=\"/\" class=\"text-gray-500 hover:text-primary\">Início</a></li>';\r\n        \r\n        path.forEach((category, index) => {\r\n            container.innerHTML += `<li><span class=\"text-gray-400\">&gt;</span></li>`;\r\n            const isLastItem = index === path.length - 1;\r\n\r\n            if (isLastItem) {\r\n                container.innerHTML += `<li><span class=\"font-semibold text-gray-700\">${category.nome}</span></li>`;\r\n            } else {\r\n                // --- INÍCIO DA CORREÇÃO ---\r\n                // Constrói o link para cada item do breadcrumb com a sua hierarquia correta.\r\n                let href = `/pages/menu-departments-item/search.html?category=${encodeURIComponent(category.nome)}`;\r\n                \r\n                // O pai de um item na posição 'index' está em 'index - 1'\r\n                if (index > 0) {\r\n                    href += `&parent=${encodeURIComponent(path[index - 1].nome)}`;\r\n                }\r\n                // O avô de um item na posição 'index' está em 'index - 2'\r\n                if (index > 1) {\r\n                    href += `&grandparent=${encodeURIComponent(path[index - 2].nome)}`;\r\n                }\r\n                // --- FIM DA CORREÇÃO ---\r\n\r\n                container.innerHTML += `<li><a href=\"${href}\" class=\"text-gray-500 hover:text-primary\">${category.nome}</a></li>`;\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.error('Erro ao renderizar breadcrumb:', error);\r\n    }\r\n}\r\n\r\nasync function fetchAndRenderSubCategories(categoryName, parentName, grandParentName) {\r\n    const container = document.getElementById('subcategory-list-container');\r\n    if (!container) return;\r\n    try {\r\n        let apiUrl = `${API_CONFIG.BASE_URL}/categories/subcategories?name=${encodeURIComponent(categoryName)}`;\r\n        if (parentName) apiUrl += `&parent=${encodeURIComponent(parentName)}`;\r\n        if (grandParentName) apiUrl += `&grandparent=${encodeURIComponent(grandParentName)}`;\r\n\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) throw new Error('Falha ao buscar sub-categorias.');\r\n        const subCategories = await response.json();\r\n        \r\n        container.innerHTML = '';\r\n        if (subCategories.length === 0) {\r\n            container.innerHTML = '<p class=\"text-xs text-gray-400\">Não há sub-categorias.</p>';\r\n            return;\r\n        }\r\n        subCategories.forEach(subCategory => {\r\n            let linkHref = `/pages/menu-departments-item/search.html?category=${encodeURIComponent(subCategory.nome)}&parent=${encodeURIComponent(categoryName)}`;\r\n            if (parentName) {\r\n                linkHref += `&grandparent=${encodeURIComponent(parentName)}`;\r\n            }\r\n            const link = document.createElement('a');\r\n            link.href = linkHref;\r\n            link.className = 'block py-2 px-3 text-sm text-gray-600 hover:bg-primary/10 hover:text-primary font-medium rounded-md transition-colors';\r\n            link.textContent = subCategory.nome;\r\n            container.appendChild(link);\r\n        });\r\n    } catch (error) {\r\n        console.error('Erro ao renderizar sub-categorias:', error);\r\n    }\r\n}\r\n\r\n\r\nasync function fetchProductsByCategory(categoryName, parentName, grandParentName) {\r\n    const container = document.getElementById('product-list-container');\r\n    try {\r\n        let apiUrl = `${API_CONFIG.BASE_URL}/products/by-category?name=${encodeURIComponent(categoryName)}`;\r\n        if (parentName) apiUrl += `&parent=${encodeURIComponent(parentName)}`;\r\n        if (grandParentName) apiUrl += `&grandparent=${encodeURIComponent(grandParentName)}`;\r\n\r\n        const response = await fetch(apiUrl);\r\n        if (!response.ok) throw new Error('A resposta da rede não foi bem-sucedida.');\r\n        const data = await response.json();\r\n\r\n        // 1. Renderiza os produtos como antes\r\n        renderProducts(data.products, container);\r\n        \r\n        // 2. ▼▼▼ CHAMA A FUNÇÃO PARA CARREGAR OS ÍCONES DE NOVO ▼▼▼\r\n        if (typeof loadIcons === 'function') {\r\n            loadIcons();\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error('Erro ao buscar produtos:', error);\r\n        container.innerHTML = '<p class=\"col-span-full text-center text-red-500\">Ocorreu um erro ao carregar os produtos.</p>';\r\n    }\r\n}\r\n\r\nfunction renderProducts(products, container) {\r\n    container.innerHTML = '';\r\n    if (products.length === 0) {\r\n        container.innerHTML = '<p class=\"col-span-full text-center text-gray-500\">Nenhum produto encontrado para esta categoria.</p>';\r\n        return;\r\n    }\r\n\r\n    products.forEach(product => {\r\n        // A lógica de preços continua igual\r\n        let priceHtml = '';\r\n        if (product.promocao && product.promocao.ativa && product.promocao.porcentagem > 0) {\r\n            const discountedPrice = product.venda * (1 - product.promocao.porcentagem / 100);\r\n            priceHtml = `\r\n                <div>\r\n                    <span class=\"block text-sm text-gray-500 line-through\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                    <div class=\"flex items-center\">\r\n                        <span class=\"text-lg font-bold text-primary\">R$ ${discountedPrice.toFixed(2).replace('.', ',')}</span>\r\n                        <span class=\"ml-2 text-xs font-bold text-white bg-primary rounded-full px-2 py-0.5\">Promo</span>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        } else if (product.promocaoCondicional && product.promocaoCondicional.ativa) {\r\n            let promoText = 'Oferta Especial';\r\n            if (product.promocaoCondicional.tipo === 'leve_pague') {\r\n                promoText = `Leve ${product.promocaoCondicional.leve} Pague ${product.promocaoCondicional.pague}`;\r\n            } else if (product.promocaoCondicional.tipo === 'acima_de') {\r\n                promoText = `+${product.promocaoCondicional.quantidadeMinima} un. com ${product.promocaoCondicional.descontoPorcentagem}%`;\r\n            }\r\n            priceHtml = `\r\n                <div>\r\n                    <span class=\"block text-lg font-bold text-gray-800\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                    <div class=\"flex items-center\">\r\n                        <span class=\"text-xs font-bold text-white bg-primary rounded-full px-2 py-1\">${promoText}</span>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        } else if (product.precoClube && product.precoClube < product.venda) {\r\n            priceHtml = `\r\n                <div>\r\n                    <span class=\"block text-lg font-bold text-gray-950\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>\r\n                    <div class=\"flex items-center\">\r\n                        <span class=\"text-lg font-bold text-primary\">R$ ${product.precoClube.toFixed(2).replace('.', ',')}</span>\r\n                        <span class=\"ml-2 text-xs font-bold text-white bg-primary rounded-full px-2 py-0.5\">Club</span>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        } else {\r\n            priceHtml = `<span class=\"block text-lg font-bold text-gray-950\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>`;\r\n        }\r\n        \r\n        // Criação do card completo do produto\r\n        const productCardHtml = `\r\n            <a href=\"/pages/menu-departments-item/product.html?id=${product._id}\" class=\"relative block bg-white rounded-lg shadow product-card transition duration-300 group overflow-hidden flex flex-col\">\r\n                \r\n                ${product.promocao && product.promocao.ativa && product.promocao.porcentagem > 0 ? `\r\n                    <div class=\"absolute top-3 left-0 w-auto bg-primary text-white text-xs font-bold py-1 pl-2 pr-3 rounded-r z-10\">\r\n                        -${product.promocao.porcentagem}% DE DESCONTO\r\n                    </div>\r\n                ` : ''}\r\n\r\n                <div class=\"p-4 product-info flex flex-col h-full\">\r\n                    <div class=\"relative w-full h-48 mb-4\">\r\n                        <img src=\"${API_CONFIG.SERVER_URL}${product.imagemPrincipal}\" alt=\"${product.nome}\" class=\"w-full h-full object-contain rounded-md\">\r\n                        \r\n                        <div class=\"add-to-cart absolute bottom-3 right-3 w-[55px] h-[55px] flex items-center justify-center rounded-full transition-all duration-300 opacity-0 group-hover:opacity-100 hover:bg-secondary\" data-product-id=\"${product._id}\">\r\n                            <div data-icon=\"sacola\" class=\"w-[55px] h-[55px]\"></div>\r\n                            <span class=\"sr-only\">Adicionar ao Carrinho</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"product-details flex flex-col flex-grow\">\r\n                        <h3 class=\"font-normal text-base h-12 line-clamp-2\">${product.nome}</h3>\r\n                        <div class=\"product-price flex items-center mb-2 mt-auto min-h-[4rem]\">${priceHtml}</div>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        `;\r\n        container.innerHTML += productCardHtml;\r\n    });\r\n\r\n    container.addEventListener('click', async (event) => { // <-- ADICIONADO ASYNC AQUI\r\n        const cartButton = event.target.closest('.add-to-cart');\r\n        if (cartButton) {\r\n            event.preventDefault();\r\n            const productId = cartButton.dataset.productId;\r\n            await CartManager.addItem(productId);\r\n            if (typeof showToast === 'function') {\r\n            showToast('Produto adicionado à sacola.', 'success');\r\n            }\r\n        }\r\n    });\r\n\r\n}"
        }
    ]
}