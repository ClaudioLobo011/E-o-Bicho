{
    "sourceFile": "scripts/admin/admin-servicos.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1757182583969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757185181454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n   const selectGrupo = document.getElementById('serv-grupo');\r\n   const inputDuracao = document.getElementById('serv-duracao');\r\n   const inputCusto = document.getElementById('serv-custo');\r\n   const inputValor = document.getElementById('serv-valor');\r\n+  const selectPorte = document.getElementById('serv-porte');\r\n   const submitLabel = document.getElementById('serv-submit-label');\r\n   const btnCancelar = document.getElementById('serv-cancelar');\r\n \r\n   const tbody = document.getElementById('serv-tbody');\r\n@@ -111,18 +112,19 @@\n       tbody.appendChild(tr);\r\n     }\r\n   }\r\n \r\n-  function resetForm() {\r\n+    function resetForm() {\r\n     inputId.value = '';\r\n     inputNome.value = '';\r\n     selectGrupo.value = '';\r\n     inputDuracao.value = '30';\r\n     inputCusto.value = '0';\r\n     inputValor.value = '0';\r\n+    if (selectPorte) selectPorte.value = 'Todos';\r\n     submitLabel.textContent = 'Salvar';\r\n     btnCancelar.classList.add('hidden');\r\n-  }\r\n+    }\r\n \r\n   function fillForm(item) {\r\n     inputId.value = item._id;\r\n     inputNome.value = item.nome || '';\r\n"
                },
                {
                    "date": 1757185199469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,18 +124,19 @@\n     submitLabel.textContent = 'Salvar';\r\n     btnCancelar.classList.add('hidden');\r\n     }\r\n \r\n-  function fillForm(item) {\r\n+    function fillForm(item) {\r\n     inputId.value = item._id;\r\n     inputNome.value = item.nome || '';\r\n     selectGrupo.value = item.grupo?._id || item.grupo || '';\r\n     inputDuracao.value = Number(item.duracaoMinutos || 0).toString();\r\n     inputCusto.value = Number(item.custo || 0).toString();\r\n     inputValor.value = Number(item.valor || 0).toString();\r\n+    if (selectPorte) selectPorte.value = item.porte || 'Todos';\r\n     submitLabel.textContent = 'Atualizar';\r\n     btnCancelar.classList.remove('hidden');\r\n-  }\r\n+    }\r\n \r\n   // Eventos\r\n   form.addEventListener('submit', async (e) => {\r\n     e.preventDefault();\r\n"
                },
                {
                    "date": 1757185222292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,10 @@\n     if (!grupo) erros.push('Selecione um grupo.');\r\n     if (!Number.isInteger(dur) || dur < 1 || dur > 600) erros.push('Duração deve estar entre 1 e 600 minutos.');\r\n     if (Number.isNaN(custo) || custo < 0) erros.push('Custo inválido.');\r\n     if (Number.isNaN(valor) || valor < 0) erros.push('Valor inválido.');\r\n-    return { ok: erros.length === 0, erros, nome, grupo, dur, custo, valor };\r\n+    const porte = (selectPorte?.value || 'Todos');\r\n+    return { ok: erros.length === 0, erros, nome, grupo, dur, custo, valor, porte };\r\n   }\r\n \r\n   function fmtMoney(n) {\r\n     const num = Number(n || 0);\r\n"
                },
                {
                    "date": 1757185242470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,13 +146,14 @@\n       alert(v.erros.join('\\n'));\r\n       return;\r\n     }\r\n     const payload = {\r\n-      nome: v.nome,\r\n-      grupo: v.grupo,\r\n-      duracaoMinutos: v.dur,\r\n-      custo: v.custo,\r\n-      valor: v.valor\r\n+    nome: v.nome,\r\n+    grupo: v.grupo,\r\n+    duracaoMinutos: v.dur,\r\n+    custo: v.custo,\r\n+    valor: v.valor,\r\n+    porte: v.porte\r\n     };\r\n \r\n     try {\r\n       if (inputId.value) {\r\n"
                },
                {
                    "date": 1757186623106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,19 @@\n   const empty = document.getElementById('serv-empty');\r\n \r\n   if (!form) return;\r\n \r\n+  function getSelectedValues(selectEl) {\r\n+    return Array.from(selectEl?.selectedOptions || []).map(o => o.value);\r\n+  }\r\n+  function setSelectedValues(selectEl, values) {\r\n+    const set = new Set(values);\r\n+    Array.from(selectEl.options).forEach(o => { o.selected = set.has(o.value); });\r\n+  }\r\n+  function selectOnlyTodos() {\r\n+    setSelectedValues(selectPorte, ['Todos']);\r\n+  }\r\n+\r\n   function getToken() {\r\n     try { return JSON.parse(localStorage.getItem('loggedInUser') || 'null')?.token || ''; }\r\n     catch { return ''; }\r\n   }\r\n"
                },
                {
                    "date": 1757186707179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,17 +125,17 @@\n     }\r\n   }\r\n \r\n     function resetForm() {\r\n-    inputId.value = '';\r\n-    inputNome.value = '';\r\n-    selectGrupo.value = '';\r\n-    inputDuracao.value = '30';\r\n-    inputCusto.value = '0';\r\n-    inputValor.value = '0';\r\n-    if (selectPorte) selectPorte.value = 'Todos';\r\n-    submitLabel.textContent = 'Salvar';\r\n-    btnCancelar.classList.add('hidden');\r\n+      inputId.value = '';\r\n+      inputNome.value = '';\r\n+      selectGrupo.value = '';\r\n+      inputDuracao.value = '30';\r\n+      inputCusto.value = '0';\r\n+      inputValor.value = '0';\r\n+      if (selectPorte) selectOnlyTodos();\r\n+      submitLabel.textContent = 'Salvar';\r\n+      btnCancelar.classList.add('hidden');\r\n     }\r\n \r\n     function fillForm(item) {\r\n     inputId.value = item._id;\r\n@@ -143,9 +143,14 @@\n     selectGrupo.value = item.grupo?._id || item.grupo || '';\r\n     inputDuracao.value = Number(item.duracaoMinutos || 0).toString();\r\n     inputCusto.value = Number(item.custo || 0).toString();\r\n     inputValor.value = Number(item.valor || 0).toString();\r\n-    if (selectPorte) selectPorte.value = item.porte || 'Todos';\r\n+    if (selectPorte) {\r\n+      const valores = Array.isArray(item.porte)\r\n+        ? item.porte\r\n+        : (item.porte ? [item.porte] : ['Todos']);\r\n+      setSelectedValues(selectPorte, valores.length ? valores : ['Todos']);\r\n+    }\r\n     submitLabel.textContent = 'Atualizar';\r\n     btnCancelar.classList.remove('hidden');\r\n     }\r\n \r\n"
                },
                {
                    "date": 1757186753766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,10 +81,12 @@\n     if (!grupo) erros.push('Selecione um grupo.');\r\n     if (!Number.isInteger(dur) || dur < 1 || dur > 600) erros.push('Duração deve estar entre 1 e 600 minutos.');\r\n     if (Number.isNaN(custo) || custo < 0) erros.push('Custo inválido.');\r\n     if (Number.isNaN(valor) || valor < 0) erros.push('Valor inválido.');\r\n-    const porte = (selectPorte?.value || 'Todos');\r\n-    return { ok: erros.length === 0, erros, nome, grupo, dur, custo, valor, porte };\r\n+    let portes = getSelectedValues(selectPorte);\r\n+    if (portes.length === 0) portes = ['Todos'];\r\n+    if (portes.includes('Todos')) portes = ['Todos'];\r\n+    return { ok: erros.length === 0, erros, nome, grupo, dur, custo, valor, porte: portes };\r\n   }\r\n \r\n   function fmtMoney(n) {\r\n     const num = Number(n || 0);\r\n@@ -162,14 +164,14 @@\n       alert(v.erros.join('\\n'));\r\n       return;\r\n     }\r\n     const payload = {\r\n-    nome: v.nome,\r\n-    grupo: v.grupo,\r\n-    duracaoMinutos: v.dur,\r\n-    custo: v.custo,\r\n-    valor: v.valor,\r\n-    porte: v.porte\r\n+      nome: v.nome,\r\n+      grupo: v.grupo,\r\n+      duracaoMinutos: v.dur,\r\n+      custo: v.custo,\r\n+      valor: v.valor,\r\n+      porte: v.porte\r\n     };\r\n \r\n     try {\r\n       if (inputId.value) {\r\n"
                }
            ],
            "date": 1757182583969,
            "name": "Commit-0",
            "content": "// CRUD de Serviços: nome, grupo (ServiceGroup), duração (min), custo, valor.\r\n\r\n(function () {\r\n  const API = `${API_CONFIG.BASE_URL}/admin/servicos`;\r\n  const API_GRUPOS = `${API_CONFIG.BASE_URL}/admin/servicos/grupos`;\r\n\r\n  const form = document.getElementById('serv-form');\r\n  const inputId = document.getElementById('serv-id');\r\n  const inputNome = document.getElementById('serv-nome');\r\n  const selectGrupo = document.getElementById('serv-grupo');\r\n  const inputDuracao = document.getElementById('serv-duracao');\r\n  const inputCusto = document.getElementById('serv-custo');\r\n  const inputValor = document.getElementById('serv-valor');\r\n  const submitLabel = document.getElementById('serv-submit-label');\r\n  const btnCancelar = document.getElementById('serv-cancelar');\r\n\r\n  const tbody = document.getElementById('serv-tbody');\r\n  const empty = document.getElementById('serv-empty');\r\n\r\n  if (!form) return;\r\n\r\n  function getToken() {\r\n    try { return JSON.parse(localStorage.getItem('loggedInUser') || 'null')?.token || ''; }\r\n    catch { return ''; }\r\n  }\r\n\r\n  async function fetchJSON(url, opts = {}) {\r\n    const res = await fetch(url, {\r\n      ...opts,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${getToken()}`,\r\n        ...(opts.headers || {})\r\n      }\r\n    });\r\n    if (!res.ok) {\r\n      const t = await res.text().catch(() => '');\r\n      throw new Error(t || `Erro HTTP ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  async function carregarGrupos() {\r\n    const select = selectGrupo;\r\n    select.innerHTML = `<option value=\"\" disabled selected>Selecione um grupo</option>`;\r\n    try {\r\n      const grupos = await fetchJSON(API_GRUPOS);\r\n      for (const g of grupos) {\r\n        const opt = document.createElement('option');\r\n        opt.value = g._id;\r\n        opt.textContent = g.nome;\r\n        select.appendChild(opt);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert('Não foi possível carregar os grupos.');\r\n    }\r\n  }\r\n\r\n  function validar() {\r\n    const nome = (inputNome.value || '').trim();\r\n    const grupo = selectGrupo.value;\r\n    const dur = Number(inputDuracao.value);\r\n    const custo = Number(inputCusto.value);\r\n    const valor = Number(inputValor.value);\r\n\r\n    const erros = [];\r\n    if (!nome) erros.push('Informe o nome do serviço.');\r\n    if (!grupo) erros.push('Selecione um grupo.');\r\n    if (!Number.isInteger(dur) || dur < 1 || dur > 600) erros.push('Duração deve estar entre 1 e 600 minutos.');\r\n    if (Number.isNaN(custo) || custo < 0) erros.push('Custo inválido.');\r\n    if (Number.isNaN(valor) || valor < 0) erros.push('Valor inválido.');\r\n    return { ok: erros.length === 0, erros, nome, grupo, dur, custo, valor };\r\n  }\r\n\r\n  function fmtMoney(n) {\r\n    const num = Number(n || 0);\r\n    return num.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\r\n  }\r\n\r\n  async function listar() {\r\n    const data = await fetchJSON(API);\r\n    renderLista(Array.isArray(data) ? data : (data?.items || []));\r\n  }\r\n\r\n  function renderLista(items) {\r\n    tbody.innerHTML = '';\r\n    if (!items.length) {\r\n      empty.classList.remove('hidden');\r\n      return;\r\n    }\r\n    empty.classList.add('hidden');\r\n\r\n    for (const it of items) {\r\n      const tr = document.createElement('tr');\r\n      const grupoNome = it.grupo?.nome || '—';\r\n\r\n      tr.innerHTML = `\r\n        <td class=\"px-3 py-2 font-medium text-gray-800\">${it.nome || ''}</td>\r\n        <td class=\"px-3 py-2 text-gray-700\">${grupoNome}</td>\r\n        <td class=\"px-3 py-2 text-gray-700\">${Number(it.duracaoMinutos || 0)}</td>\r\n        <td class=\"px-3 py-2 text-gray-700\">${fmtMoney(it.custo)}</td>\r\n        <td class=\"px-3 py-2 text-gray-700\">${fmtMoney(it.valor)}</td>\r\n        <td class=\"px-3 py-2\">\r\n          <div class=\"flex items-center gap-2\">\r\n            <button class=\"px-2 py-1 rounded bg-gray-100 hover:bg-gray-200 text-gray-800\" data-edit=\"${it._id}\"><i class=\"fas fa-pen\"></i></button>\r\n            <button class=\"px-2 py-1 rounded bg-red-50 hover:bg-red-100 text-red-700\" data-del=\"${it._id}\"><i class=\"fas fa-trash\"></i></button>\r\n          </div>\r\n        </td>\r\n      `;\r\n      tbody.appendChild(tr);\r\n    }\r\n  }\r\n\r\n  function resetForm() {\r\n    inputId.value = '';\r\n    inputNome.value = '';\r\n    selectGrupo.value = '';\r\n    inputDuracao.value = '30';\r\n    inputCusto.value = '0';\r\n    inputValor.value = '0';\r\n    submitLabel.textContent = 'Salvar';\r\n    btnCancelar.classList.add('hidden');\r\n  }\r\n\r\n  function fillForm(item) {\r\n    inputId.value = item._id;\r\n    inputNome.value = item.nome || '';\r\n    selectGrupo.value = item.grupo?._id || item.grupo || '';\r\n    inputDuracao.value = Number(item.duracaoMinutos || 0).toString();\r\n    inputCusto.value = Number(item.custo || 0).toString();\r\n    inputValor.value = Number(item.valor || 0).toString();\r\n    submitLabel.textContent = 'Atualizar';\r\n    btnCancelar.classList.remove('hidden');\r\n  }\r\n\r\n  // Eventos\r\n  form.addEventListener('submit', async (e) => {\r\n    e.preventDefault();\r\n    const v = validar();\r\n    if (!v.ok) {\r\n      alert(v.erros.join('\\n'));\r\n      return;\r\n    }\r\n    const payload = {\r\n      nome: v.nome,\r\n      grupo: v.grupo,\r\n      duracaoMinutos: v.dur,\r\n      custo: v.custo,\r\n      valor: v.valor\r\n    };\r\n\r\n    try {\r\n      if (inputId.value) {\r\n        const saved = await fetchJSON(`${API}/${inputId.value}`, {\r\n          method: 'PUT',\r\n          body: JSON.stringify(payload)\r\n        });\r\n        fillForm(saved);\r\n      } else {\r\n        await fetchJSON(API, { method: 'POST', body: JSON.stringify(payload) });\r\n        resetForm();\r\n      }\r\n      await listar();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Erro ao salvar serviço.\\n' + err.message);\r\n    }\r\n  });\r\n\r\n  btnCancelar?.addEventListener('click', () => resetForm());\r\n\r\n  tbody.addEventListener('click', async (e) => {\r\n    const btn = e.target.closest('button');\r\n    if (!btn) return;\r\n    const id = btn.getAttribute('data-edit') || btn.getAttribute('data-del');\r\n    if (!id) return;\r\n\r\n    if (btn.hasAttribute('data-edit')) {\r\n      try {\r\n        const item = await fetchJSON(`${API}/${id}`);\r\n        fillForm(item);\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      } catch (err) {\r\n        alert('Não foi possível carregar o serviço selecionado.');\r\n      }\r\n    } else if (btn.hasAttribute('data-del')) {\r\n      if (!confirm('Confirma remover este serviço?')) return;\r\n      try {\r\n        await fetchJSON(`${API}/${id}`, { method: 'DELETE' });\r\n        if (inputId.value === id) resetForm();\r\n        await listar();\r\n      } catch (err) {\r\n        alert('Erro ao remover serviço.\\n' + err.message);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Inicialização\r\n  Promise.all([carregarGrupos(), listar()]).catch(err => {\r\n    console.error(err);\r\n    alert('Erro ao inicializar a página de serviços.\\n' + err.message);\r\n  });\r\n})();"
        }
    ]
}