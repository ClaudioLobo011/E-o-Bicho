{
    "sourceFile": "scripts/favoritos.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756584192853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756584797193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n         const response = await fetch(`${API_CONFIG.BASE_URL}/products/by-ids`, {\r\n             method: 'POST',\r\n             headers: {\r\n                 'Content-Type': 'application/json',\r\n-                'Authorization': `Bearer ${token}`\r\n+                'Authorization': `Bearer ${JSON.parse(localStorage.getItem('loggedInUser'))?.token || ''}`\r\n             },\r\n             body: JSON.stringify({ ids: favoriteIds })\r\n         });\r\n         const products = await response.json();\r\n"
                }
            ],
            "date": 1756584192853,
            "name": "Commit-0",
            "content": "/**\r\n * Exibe um modal para confirmar a remoção de um produto dos favoritos.\r\n * @param {string} productId - O ID do produto a ser removido.\r\n * @param {string} productName - O nome do produto (para a mensagem).\r\n */\r\nasync function confirmRemoveFavorite(productId, productName) {\r\n    showModal({\r\n        title: 'Remover Favorito',\r\n        message: `Tem a certeza de que deseja remover \"${productName}\" dos seus favoritos?`,\r\n        confirmText: 'Sim, remover',\r\n        cancelText: 'Cancelar',\r\n        onConfirm: async () => {\r\n            // Usa o novo FavoritesManager para remover o item no back-end\r\n            await FavoritesManager.removeFavorite(productId);\r\n            // Recarrega a lista de favoritos na página sem precisar de recarregar a página inteira\r\n            loadFavorites(); \r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Carrega e renderiza os produtos favoritados a partir do back-end.\r\n */\r\nasync function loadFavorites() {\r\n    const container = document.getElementById('favorites-list-container');\r\n    const emptyState = document.getElementById('favorites-empty-state');\r\n\r\n    if (!container) {\r\n        return; // Sai se não estiver na página de favoritos\r\n    }\r\n\r\n    // Usa o novo FavoritesManager para buscar os IDs de favoritos do utilizador logado\r\n    const favoriteIds = await FavoritesManager.getFavorites();\r\n\r\n    if (favoriteIds.length === 0) {\r\n        container.classList.add('hidden');\r\n        emptyState.classList.remove('hidden');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Usa a rota existente para buscar os dados completos dos produtos a partir dos seus IDs\r\n        const response = await fetch(`${API_CONFIG.BASE_URL}/products/by-ids`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ ids: favoriteIds })\r\n        });\r\n        const products = await response.json();\r\n        \r\n        if (!response.ok) throw new Error('Falha ao buscar os detalhes dos produtos favoritos.');\r\n\r\n        container.innerHTML = '';\r\n        products.forEach(product => {\r\n            let priceHtml = '';\r\n            // Lógica de Hierarquia de Preços (consistente com as outras páginas)\r\n            if (product.promocao && product.promocao.ativa && product.promocao.porcentagem > 0) {\r\n                const discountedPrice = product.venda * (1 - product.promocao.porcentagem / 100);\r\n                priceHtml = `<div><span class=\"block text-sm text-gray-500 line-through\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span><div class=\"flex items-center\"><span class=\"text-lg font-bold text-primary\">R$ ${discountedPrice.toFixed(2).replace('.', ',')}</span><span class=\"ml-2 text-xs font-bold text-white bg-primary rounded-full px-2 py-0.5\">Promo</span></div></div>`;\r\n            } else if (product.promocaoCondicional && product.promocaoCondicional.ativa) {\r\n                let promoText = 'Oferta Especial';\r\n                if (product.promocaoCondicional.tipo === 'leve_pague') { promoText = `Leve ${product.promocaoCondicional.leve} Pague ${product.promocaoCondicional.pague}`; }\r\n                else if (product.promocaoCondicional.tipo === 'acima_de') { promoText = `+${product.promocaoCondicional.quantidadeMinima} un. com ${product.promocaoCondicional.descontoPorcentagem}%`; }\r\n                priceHtml = `<div><span class=\"block text-lg font-bold text-gray-800\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span><div class=\"flex items-center\"><span class=\"text-xs font-bold text-white bg-primary rounded-full px-2 py-1\">${promoText}</span></div></div>`;\r\n            } else if (product.precoClube && product.precoClube < product.venda) {\r\n                priceHtml = `<div><span class=\"block text-lg font-bold text-gray-950\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span><div class=\"flex items-center\"><span class=\"text-lg font-bold text-primary\">R$ ${product.precoClube.toFixed(2).replace('.', ',')}</span><span class=\"ml-2 text-xs font-bold text-white bg-primary rounded-full px-2 py-0.5\">Club</span></div></div>`;\r\n            } else {\r\n                priceHtml = `<span class=\"block text-lg font-bold text-gray-950\">R$ ${product.venda.toFixed(2).replace('.', ',')}</span>`;\r\n            }\r\n\r\n            const productCardHtml = `\r\n                <div class=\"relative bg-white rounded-lg shadow product-card transition duration-300 group overflow-hidden flex flex-col\">\r\n                    <button class=\"absolute top-2 right-2 z-20 p-1.5 bg-white/80 backdrop-blur-sm rounded-full shadow-md transition-colors duration-200 hover:bg-red-50 focus:outline-none\" onclick=\"confirmRemoveFavorite('${product._id}', '${product.nome.replace(/'/g, \"\\\\'\")}')\" aria-label=\"Remover dos favoritos\">\r\n                        <svg class=\"h-5 w-5 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clip-rule=\"evenodd\" /></svg>\r\n                    </button>\r\n                    ${product.promocao && product.promocao.ativa && product.promocao.porcentagem > 0 ? `<div class=\"absolute top-3 left-0 w-auto bg-primary text-white text-xs font-bold py-1 pl-2 pr-3 rounded-r z-10\">-${product.promocao.porcentagem}% DE DESCONTO</div>` : ''}\r\n                    <a href=\"/pages/menu-departments-item/product.html?id=${product._id}\" class=\"block\">\r\n                        <div class=\"p-4 product-info flex flex-col h-full\">\r\n                            <div class=\"relative w-full h-48 mb-4\">\r\n                                <img src=\"${API_CONFIG.SERVER_URL}${product.imagemPrincipal}\" alt=\"${product.nome}\" class=\"w-full h-full object-contain rounded-md\">\r\n                                <div class=\"add-to-cart absolute bottom-3 right-3 w-[55px] h-[55px] flex items-center justify-center rounded-full transition-all duration-300 opacity-0 group-hover:opacity-100 hover:bg-secondary\" data-product-id=\"${product._id}\">\r\n                                    <div data-icon=\"sacola\" class=\"w-[55px] h-[55px]\"></div>\r\n                                    <span class=\"sr-only\">Adicionar ao Carrinho</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"product-details flex flex-col flex-grow\">\r\n                                <h3 class=\"font-normal text-base h-12 line-clamp-2\">${product.nome}</h3>\r\n                                <div class=\"product-price flex items-center mb-2 mt-auto min-h-[4rem]\">${priceHtml}</div>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </div>`;\r\n            container.innerHTML += productCardHtml;\r\n        });\r\n        \r\n        emptyState.classList.add('hidden');\r\n        container.classList.remove('hidden');\r\n\r\n    } catch (error) {\r\n        console.error('Erro ao carregar favoritos:', error);\r\n        container.innerHTML = '<p class=\"text-red-500\">Ocorreu um erro ao carregar os seus favoritos.</p>';\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Só executa o código dos favoritos se estivermos na página de favoritos\r\n    if (window.location.pathname.endsWith('favoritos.html')) {\r\n        loadFavorites();\r\n    }\r\n});"
        }
    ]
}