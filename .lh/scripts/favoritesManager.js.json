{
    "sourceFile": "scripts/favoritesManager.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1756584131922,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756584534579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,52 +3,48 @@\n         const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n         return user ? user.id : null;\r\n     },\r\n \r\n-    getToken: function() {\r\n+    getFavorites: async function() {\r\n         const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n-        return user ? user.token : null;\r\n-    },\r\n-\r\n-    getFavorites: async function() {\r\n-        const userId = this.getUserId();\r\n-        const token = this.getToken();\r\n-        if (!userId || !token) return [];\r\n+        if (!user || !user.id || !user.token) return [];\r\n         try {\r\n-            const response = await fetch(`${API_CONFIG.BASE_URL}/favorites/${userId}`, {\r\n-                headers: { 'Authorization': `Bearer ${token}` }\r\n+            const response = await fetch(`${API_CONFIG.BASE_URL}/favorites/${user.id}`, {\r\n+                headers: { \r\n+                    'Authorization': `Bearer ${user.token}`,\r\n+                    'Content-Type': 'application/json'\r\n+                }\r\n             });\r\n-            if (!response.ok) throw new Error(\"Falha ao buscar favoritos.\");\r\n+            if (!response.ok) throw new Error(\"Erro ao buscar favoritos.\");\r\n             return await response.json();\r\n         } catch (error) {\r\n             console.error(\"Erro ao buscar favoritos:\", error);\r\n             return [];\r\n         }\r\n     },\r\n \r\n+    isFavorite: async function(productId) {\r\n+        const favorites = await this.getFavorites();\r\n+        return favorites.includes(productId);\r\n+    },\r\n+\r\n     addFavorite: async function(productId) {\r\n         const userId = this.getUserId();\r\n-        const token = this.getToken();\r\n-        if (!userId || !token) {\r\n+        if (!userId) {\r\n             window.location.href = `${basePath}pages/login.html`;\r\n             return;\r\n         }\r\n         await fetch(`${API_CONFIG.BASE_URL}/favorites/${userId}`, {\r\n             method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json',\r\n-                'Authorization': `Bearer ${token}`\r\n-            },\r\n+            headers: { 'Content-Type': 'application/json' },\r\n             body: JSON.stringify({ productId })\r\n         });\r\n     },\r\n \r\n     removeFavorite: async function(productId) {\r\n         const userId = this.getUserId();\r\n-        const token = this.getToken();\r\n-        if (!userId || !token) return;\r\n+        if (!userId) return;\r\n         await fetch(`${API_CONFIG.BASE_URL}/favorites/${userId}/${productId}`, {\r\n-            method: 'DELETE',\r\n-            headers: { 'Authorization': `Bearer ${token}` }\r\n+            method: 'DELETE'\r\n         });\r\n     }\r\n-};\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1756584695613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,11 @@\n const FavoritesManager = {\r\n-    getUserId: function() {\r\n-        const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n-        return user ? user.id : null;\r\n+    getUser: function() {\r\n+        return JSON.parse(localStorage.getItem('loggedInUser'));\r\n     },\r\n \r\n     getFavorites: async function() {\r\n-        const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n+        const user = this.getUser();\r\n         if (!user || !user.id || !user.token) return [];\r\n         try {\r\n             const response = await fetch(`${API_CONFIG.BASE_URL}/favorites/${user.id}`, {\r\n                 headers: { \r\n@@ -23,28 +22,32 @@\n     },\r\n \r\n     isFavorite: async function(productId) {\r\n         const favorites = await this.getFavorites();\r\n-        return favorites.includes(productId);\r\n+        return Array.isArray(favorites) && favorites.includes(productId);\r\n     },\r\n \r\n     addFavorite: async function(productId) {\r\n-        const userId = this.getUserId();\r\n-        if (!userId) {\r\n+        const user = this.getUser();\r\n+        if (!user || !user.id || !user.token) {\r\n             window.location.href = `${basePath}pages/login.html`;\r\n             return;\r\n         }\r\n-        await fetch(`${API_CONFIG.BASE_URL}/favorites/${userId}`, {\r\n+        await fetch(`${API_CONFIG.BASE_URL}/favorites/${user.id}`, {\r\n             method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n+            headers: { \r\n+                'Authorization': `Bearer ${user.token}`,\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n             body: JSON.stringify({ productId })\r\n         });\r\n     },\r\n \r\n\\ No newline at end of file\n     removeFavorite: async function(productId) {\r\n-        const userId = this.getUserId();\r\n-        if (!userId) return;\r\n-        await fetch(`${API_CONFIG.BASE_URL}/favorites/${userId}/${productId}`, {\r\n-            method: 'DELETE'\r\n+        const user = this.getUser();\r\n+        if (!user || !user.id || !user.token) return;\r\n+        await fetch(`${API_CONFIG.BASE_URL}/favorites/${user.id}/${productId}`, {\r\n+            method: 'DELETE',\r\n+            headers: { 'Authorization': `Bearer ${user.token}` }\r\n         });\r\n     }\r\n-};\n+};\r\n"
                }
            ],
            "date": 1756584131922,
            "name": "Commit-0",
            "content": "const FavoritesManager = {\r\n    getUserId: function() {\r\n        const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n        return user ? user.id : null;\r\n    },\r\n\r\n    getToken: function() {\r\n        const user = JSON.parse(localStorage.getItem('loggedInUser'));\r\n        return user ? user.token : null;\r\n    },\r\n\r\n    getFavorites: async function() {\r\n        const userId = this.getUserId();\r\n        const token = this.getToken();\r\n        if (!userId || !token) return [];\r\n        try {\r\n            const response = await fetch(`${API_CONFIG.BASE_URL}/favorites/${userId}`, {\r\n                headers: { 'Authorization': `Bearer ${token}` }\r\n            });\r\n            if (!response.ok) throw new Error(\"Falha ao buscar favoritos.\");\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error(\"Erro ao buscar favoritos:\", error);\r\n            return [];\r\n        }\r\n    },\r\n\r\n    addFavorite: async function(productId) {\r\n        const userId = this.getUserId();\r\n        const token = this.getToken();\r\n        if (!userId || !token) {\r\n            window.location.href = `${basePath}pages/login.html`;\r\n            return;\r\n        }\r\n        await fetch(`${API_CONFIG.BASE_URL}/favorites/${userId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ productId })\r\n        });\r\n    },\r\n\r\n    removeFavorite: async function(productId) {\r\n        const userId = this.getUserId();\r\n        const token = this.getToken();\r\n        if (!userId || !token) return;\r\n        await fetch(`${API_CONFIG.BASE_URL}/favorites/${userId}/${productId}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Authorization': `Bearer ${token}` }\r\n        });\r\n    }\r\n};\r\n"
        }
    ]
}