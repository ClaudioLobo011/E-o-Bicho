{
    "sourceFile": "servidor/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1756570617632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756581178467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,75 +1,53 @@\n+// servidor/server.js\r\n const express = require('express');\r\n const http = require('http');\r\n-const { Server } = require(\"socket.io\");\r\n+const { Server } = require('socket.io');\r\n const cors = require('cors');\r\n const dotenv = require('dotenv');\r\n const connectDB = require('./config/db');\r\n \r\n-// Importar Rotas\r\n-const productRoutes = require('./routes/products');\r\n-const categoryRoutes = require('./routes/categories');\r\n-const authRoutes = require('./routes/auth');\r\n-const petRoutes = require('./routes/pets');\r\n-const jobRoutes = require('./routes/jobs');\r\n-const userRoutes = require('./routes/users');\r\n-const cartRoutes = require('./routes/cart');\r\n-const favoritesRoutes = require('./routes/favorites');\r\n-const storeRoutes = require('./routes/stores');\r\n-const vehicleRoutes = require('./routes/vehicles');\r\n-const deliveryZoneRoutes = require('./routes/deliveryZones');\r\n-const promocoesRoutes = require('./routes/promocoes');\r\n-const bannerRoutes = require('./routes/banners');\r\n-const addressRoutes = require('./routes/addresses');\r\n-const shippingRoutes = require('./routes/shipping');\r\n-\r\n dotenv.config();\r\n connectDB();\r\n \r\n const app = express();\r\n-const server = http.createServer(app); \r\n-const io = new Server(server, { \r\n-    cors: {\r\n-        origin: \"*\",\r\n-        methods: [\"GET\", \"POST\"]\r\n-    }\r\n-});\r\n+const server = http.createServer(app);\r\n+const io = new Server(server, { cors: { origin: '*', methods: ['GET', 'POST'] } });\r\n \r\n-// Middleware para passar a instÃ¢ncia 'io' para as rotas\r\n+// Middleware\r\n app.set('socketio', io);\r\n-\r\n-// Middleware\r\n app.use(express.json());\r\n app.use(cors());\r\n app.use(express.static('public'));\r\n \r\n-// Rotas da API\r\n-app.use('/api/products', productRoutes);\r\n-app.use('/api/categories', categoryRoutes);\r\n-app.use('/api/auth', authRoutes);\r\n-app.use('/api/users', userRoutes);\r\n-app.use('/api/cart', cartRoutes);\r\n-app.use('/api/favorites', favoritesRoutes);\r\n-app.use('/api/stores', storeRoutes);\r\n-app.use('/api/vehicles', vehicleRoutes);\r\n-app.use('/api/delivery-zones', deliveryZoneRoutes);\r\n-app.use('/api/promocoes', promocoesRoutes);\r\n-app.use('/api/banners', bannerRoutes);\r\n-app.use('/api/pets', petRoutes);\r\n-app.use('/api/jobs', jobRoutes);\r\n-app.use('/api/addresses', addressRoutes);\r\n-app.use('/api/shipping', shippingRoutes);\r\n+// Rotas da API (mapeadas dinamicamente)\r\n+const routes = [\r\n+  { path: '/api/products', file: './routes/products' },\r\n+  { path: '/api/categories', file: './routes/categories' },\r\n+  { path: '/api/auth', file: './routes/auth' },\r\n+  { path: '/api/users', file: './routes/users' },\r\n+  { path: '/api/cart', file: './routes/cart' },\r\n+  { path: '/api/favorites', file: './routes/favorites' },\r\n+  { path: '/api/stores', file: './routes/stores' },\r\n+  { path: '/api/vehicles', file: './routes/vehicles' },\r\n\\ No newline at end of file\n+  { path: '/api/delivery-zones', file: './routes/deliveryZones' },\r\n+  { path: '/api/promocoes', file: './routes/promocoes' },\r\n+  { path: '/api/banners', file: './routes/banners' },\r\n+  { path: '/api/pets', file: './routes/pets' },\r\n+  { path: '/api/jobs', file: './routes/jobs' },\r\n+  { path: '/api/addresses', file: './routes/addresses' },\r\n+  { path: '/api/shipping', file: './routes/shipping' },\r\n+  { path: '/api/admin/users', file: './routes/adminUsers' }\r\n+];\r\n \r\n-app.use('/api/admin/users', require('./routes/adminUsers'));\r\n+// Carrega cada rota\r\n+routes.forEach(r => app.use(r.path, require(r.file)));\r\n \r\n-\r\n-// LÃ³gica do Socket.IO\r\n+// WebSockets\r\n io.on('connection', (socket) => {\r\n   console.log('Um utilizador conectou-se via WebSocket');\r\n-  socket.on('disconnect', () => {\r\n-    console.log('Utilizador desconectou-se');\r\n-  });\r\n+  socket.on('disconnect', () => console.log('Utilizador desconectou-se'));\r\n });\r\n \r\n-\r\n+// InicializaÃ§Ã£o do servidor\r\n const PORT = process.env.PORT || 3000;\r\n-server.listen(PORT, () => console.log(`Servidor a rodar (com WebSockets) na porta ${PORT}`));\n+server.listen(PORT, () => console.log(`ðŸš€ Servidor rodando na porta ${PORT}`));\r\n"
                },
                {
                    "date": 1756594546294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,10 @@\n   { path: '/api/pets', file: './routes/pets' },\r\n   { path: '/api/jobs', file: './routes/jobs' },\r\n   { path: '/api/addresses', file: './routes/addresses' },\r\n   { path: '/api/shipping', file: './routes/shipping' },\r\n-  { path: '/api/admin/users', file: './routes/adminUsers' }\r\n+  { path: '/api/admin/users', file: './routes/adminUsers' },\r\n+  { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' }\r\n ];\r\n \r\n // Carrega cada rota\r\n routes.forEach(r => app.use(r.path, require(r.file)));\r\n@@ -49,5 +50,5 @@\n });\r\n \r\n // InicializaÃ§Ã£o do servidor\r\n const PORT = process.env.PORT || 3000;\r\n-server.listen(PORT, () => console.log(`ðŸš€ Servidor rodando na porta ${PORT}`));\n\\ No newline at end of file\n+server.listen(PORT, () => console.log(`ðŸš€ Servidor rodando na porta ${PORT}`));\r\n"
                },
                {
                    "date": 1756598676971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n app.set('socketio', io);\r\n app.use(express.json());\r\n app.use(cors());\r\n app.use(express.static('public'));\r\n+app.use('/api/funcionarios', require('./routes/adminFuncionarios'));\r\n \r\n // Rotas da API (mapeadas dinamicamente)\r\n const routes = [\r\n   { path: '/api/products', file: './routes/products' },\r\n"
                },
                {
                    "date": 1756744887172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,55 @@\n+// servidor/server.js\r\n+const express = require('express');\r\n+const http = require('http');\r\n+const { Server } = require('socket.io');\r\n+const cors = require('cors');\r\n+const dotenv = require('dotenv');\r\n+const connectDB = require('./config/db');\r\n+\r\n+dotenv.config();\r\n+connectDB();\r\n+\r\n+const app = express();\r\n+const server = http.createServer(app);\r\n+const io = new Server(server, { cors: { origin: '*', methods: ['GET', 'POST'] } });\r\n+\r\n+// Middleware\r\n+app.set('socketio', io);\r\n+app.use(express.json());\r\n+app.use(cors());\r\n+app.use(express.static('public'));\r\n+app.use('/api/funcionarios', require('./routes/adminFuncionarios'));\r\n+\r\n+// Rotas da API (mapeadas dinamicamente)\r\n+const routes = [\r\n+  { path: '/api/products', file: './routes/products' },\r\n+  { path: '/api/categories', file: './routes/categories' },\r\n+  { path: '/api/auth', file: './routes/auth' },\r\n+  { path: '/api/users', file: './routes/users' },\r\n+  { path: '/api/cart', file: './routes/cart' },\r\n+  { path: '/api/favorites', file: './routes/favorites' },\r\n+  { path: '/api/stores', file: './routes/stores' },\r\n+  { path: '/api/vehicles', file: './routes/vehicles' },\r\n+  { path: '/api/delivery-zones', file: './routes/deliveryZones' },\r\n+  { path: '/api/promocoes', file: './routes/promocoes' },\r\n+  { path: '/api/banners', file: './routes/banners' },\r\n+  { path: '/api/pets', file: './routes/pets' },\r\n+  { path: '/api/jobs', file: './routes/jobs' },\r\n+  { path: '/api/addresses', file: './routes/addresses' },\r\n+  { path: '/api/shipping', file: './routes/shipping' },\r\n+  { path: '/api/admin/users', file: './routes/adminUsers' },\r\n+  { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' }\r\n+];\r\n+\r\n+// Carrega cada rota\r\n+routes.forEach(r => app.use(r.path, require(r.file)));\r\n+\r\n+// WebSockets\r\n+io.on('connection', (socket) => {\r\n+  console.log('Um utilizador conectou-se via WebSocket');\r\n+  socket.on('disconnect', () => console.log('Utilizador desconectou-se'));\r\n+});\r\n+\r\n+// InicializaÃ§Ã£o do servidor\r\n+const PORT = process.env.PORT || 3000;\r\n+server.listen(PORT, () => console.log(`ðŸš€ Servidor rodando na porta ${PORT}`));\r\n"
                },
                {
                    "date": 1756760607621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,10 @@\n   { path: '/api/jobs', file: './routes/jobs' },\r\n   { path: '/api/addresses', file: './routes/addresses' },\r\n   { path: '/api/shipping', file: './routes/shipping' },\r\n   { path: '/api/admin/users', file: './routes/adminUsers' },\r\n-  { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' }\r\n+  { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' },\r\n+  { path: '/api/profile', file: './routes/profile' }\r\n ];\r\n \r\n // Carrega cada rota\r\n routes.forEach(r => app.use(r.path, require(r.file)));\r\n@@ -52,59 +53,4 @@\n \r\n // InicializaÃ§Ã£o do servidor\r\n const PORT = process.env.PORT || 3000;\r\n server.listen(PORT, () => console.log(`ðŸš€ Servidor rodando na porta ${PORT}`));\r\n-// servidor/server.js\r\n-const express = require('express');\r\n-const http = require('http');\r\n-const { Server } = require('socket.io');\r\n-const cors = require('cors');\r\n-const dotenv = require('dotenv');\r\n-const connectDB = require('./config/db');\r\n-\r\n-dotenv.config();\r\n-connectDB();\r\n-\r\n-const app = express();\r\n-const server = http.createServer(app);\r\n-const io = new Server(server, { cors: { origin: '*', methods: ['GET', 'POST'] } });\r\n-\r\n-// Middleware\r\n-app.set('socketio', io);\r\n-app.use(express.json());\r\n-app.use(cors());\r\n-app.use(express.static('public'));\r\n-app.use('/api/funcionarios', require('./routes/adminFuncionarios'));\r\n-\r\n-// Rotas da API (mapeadas dinamicamente)\r\n-const routes = [\r\n-  { path: '/api/products', file: './routes/products' },\r\n-  { path: '/api/categories', file: './routes/categories' },\r\n-  { path: '/api/auth', file: './routes/auth' },\r\n-  { path: '/api/users', file: './routes/users' },\r\n-  { path: '/api/cart', file: './routes/cart' },\r\n-  { path: '/api/favorites', file: './routes/favorites' },\r\n-  { path: '/api/stores', file: './routes/stores' },\r\n-  { path: '/api/vehicles', file: './routes/vehicles' },\r\n-  { path: '/api/delivery-zones', file: './routes/deliveryZones' },\r\n-  { path: '/api/promocoes', file: './routes/promocoes' },\r\n-  { path: '/api/banners', file: './routes/banners' },\r\n-  { path: '/api/pets', file: './routes/pets' },\r\n-  { path: '/api/jobs', file: './routes/jobs' },\r\n-  { path: '/api/addresses', file: './routes/addresses' },\r\n-  { path: '/api/shipping', file: './routes/shipping' },\r\n-  { path: '/api/admin/users', file: './routes/adminUsers' },\r\n-  { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' }\r\n-];\r\n-\r\n-// Carrega cada rota\r\n-routes.forEach(r => app.use(r.path, require(r.file)));\r\n-\r\n-// WebSockets\r\n-io.on('connection', (socket) => {\r\n-  console.log('Um utilizador conectou-se via WebSocket');\r\n-  socket.on('disconnect', () => console.log('Utilizador desconectou-se'));\r\n-});\r\n-\r\n-// InicializaÃ§Ã£o do servidor\r\n-const PORT = process.env.PORT || 3000;\r\n-server.listen(PORT, () => console.log(`ðŸš€ Servidor rodando na porta ${PORT}`));\r\n"
                },
                {
                    "date": 1756829052697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n \r\n const app = express();\r\n const server = http.createServer(app);\r\n const io = new Server(server, { cors: { origin: '*', methods: ['GET', 'POST'] } });\r\n+const { verifyMailer } = require('./utils/mailer');\r\n \r\n // Middleware\r\n app.set('socketio', io);\r\n app.use(express.json());\r\n"
                },
                {
                    "date": 1756829112152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,18 +3,20 @@\n const http = require('http');\r\n const { Server } = require('socket.io');\r\n const cors = require('cors');\r\n const dotenv = require('dotenv');\r\n+const { verifyMailer } = require('./utils/mailer');\r\n const connectDB = require('./config/db');\r\n \r\n dotenv.config();\r\n connectDB();\r\n+verifyMailer();\r\n \r\n const app = express();\r\n const server = http.createServer(app);\r\n const io = new Server(server, { cors: { origin: '*', methods: ['GET', 'POST'] } });\r\n-const { verifyMailer } = require('./utils/mailer');\r\n \r\n+\r\n // Middleware\r\n app.set('socketio', io);\r\n app.use(express.json());\r\n app.use(cors());\r\n"
                },
                {
                    "date": 1756829175502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,10 @@\n   { path: '/api/addresses', file: './routes/addresses' },\r\n   { path: '/api/shipping', file: './routes/shipping' },\r\n   { path: '/api/admin/users', file: './routes/adminUsers' },\r\n   { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' },\r\n-  { path: '/api/profile', file: './routes/profile' }\r\n+  { path: '/api/profile', file: './routes/profile' },\r\n+  { path: '/api/email', file: './routes/email' }\r\n ];\r\n \r\n // Carrega cada rota\r\n routes.forEach(r => app.use(r.path, require(r.file)));\r\n"
                },
                {
                    "date": 1757180742523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,16 +14,20 @@\n const app = express();\r\n const server = http.createServer(app);\r\n const io = new Server(server, { cors: { origin: '*', methods: ['GET', 'POST'] } });\r\n \r\n+const adminServicosGrupos = require('./routes/adminServicosGrupos');\r\n \r\n+\r\n // Middleware\r\n app.set('socketio', io);\r\n app.use(express.json());\r\n app.use(cors());\r\n app.use(express.static('public'));\r\n app.use('/api/funcionarios', require('./routes/adminFuncionarios'));\r\n+app.use('/api/admin/servicos/grupos', adminServicosGrupos);\r\n \r\n+\r\n // Rotas da API (mapeadas dinamicamente)\r\n const routes = [\r\n   { path: '/api/products', file: './routes/products' },\r\n   { path: '/api/categories', file: './routes/categories' },\r\n@@ -42,9 +46,10 @@\n   { path: '/api/shipping', file: './routes/shipping' },\r\n   { path: '/api/admin/users', file: './routes/adminUsers' },\r\n   { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' },\r\n   { path: '/api/profile', file: './routes/profile' },\r\n-  { path: '/api/email', file: './routes/email' }\r\n+  { path: '/api/email', file: './routes/email' },\r\n+  { path: '/api/search', file: './routes/search' },\r\n ];\r\n \r\n // Carrega cada rota\r\n routes.forEach(r => app.use(r.path, require(r.file)));\r\n"
                },
                {
                    "date": 1757180812136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n   { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' },\r\n   { path: '/api/profile', file: './routes/profile' },\r\n   { path: '/api/email', file: './routes/email' },\r\n   { path: '/api/search', file: './routes/search' },\r\n+  { path: '/api/admin/servicos/grupos', file: './routes/adminServicosGrupos' }\r\n ];\r\n \r\n // Carrega cada rota\r\n routes.forEach(r => app.use(r.path, require(r.file)));\r\n"
                },
                {
                    "date": 1757181241116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,18 +14,16 @@\n const app = express();\r\n const server = http.createServer(app);\r\n const io = new Server(server, { cors: { origin: '*', methods: ['GET', 'POST'] } });\r\n \r\n-const adminServicosGrupos = require('./routes/adminServicosGrupos');\r\n \r\n \r\n // Middleware\r\n app.set('socketio', io);\r\n app.use(express.json());\r\n app.use(cors());\r\n app.use(express.static('public'));\r\n app.use('/api/funcionarios', require('./routes/adminFuncionarios'));\r\n-app.use('/api/admin/servicos/grupos', adminServicosGrupos);\r\n \r\n \r\n // Rotas da API (mapeadas dinamicamente)\r\n const routes = [\r\n@@ -45,12 +43,12 @@\n   { path: '/api/addresses', file: './routes/addresses' },\r\n   { path: '/api/shipping', file: './routes/shipping' },\r\n   { path: '/api/admin/users', file: './routes/adminUsers' },\r\n   { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' },\r\n+  { path: '/api/admin/servicos/grupos', file: './routes/adminServicosGrupos' }\r\n   { path: '/api/profile', file: './routes/profile' },\r\n   { path: '/api/email', file: './routes/email' },\r\n   { path: '/api/search', file: './routes/search' },\r\n-  { path: '/api/admin/servicos/grupos', file: './routes/adminServicosGrupos' }\r\n ];\r\n \r\n // Carrega cada rota\r\n routes.forEach(r => app.use(r.path, require(r.file)));\r\n"
                },
                {
                    "date": 1757181248880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n   { path: '/api/addresses', file: './routes/addresses' },\r\n   { path: '/api/shipping', file: './routes/shipping' },\r\n   { path: '/api/admin/users', file: './routes/adminUsers' },\r\n   { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' },\r\n-  { path: '/api/admin/servicos/grupos', file: './routes/adminServicosGrupos' }\r\n+  { path: '/api/admin/servicos/grupos', file: './routes/adminServicosGrupos' },\r\n   { path: '/api/profile', file: './routes/profile' },\r\n   { path: '/api/email', file: './routes/email' },\r\n   { path: '/api/search', file: './routes/search' },\r\n ];\r\n"
                },
                {
                    "date": 1757182694819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,9 @@\n   { path: '/api/shipping', file: './routes/shipping' },\r\n   { path: '/api/admin/users', file: './routes/adminUsers' },\r\n   { path: '/api/admin/funcionarios', file: './routes/adminFuncionarios' },\r\n   { path: '/api/admin/servicos/grupos', file: './routes/adminServicosGrupos' },\r\n+  { path: '/api/admin/servicos', file: './routes/adminServicos' },\r\n   { path: '/api/profile', file: './routes/profile' },\r\n   { path: '/api/email', file: './routes/email' },\r\n   { path: '/api/search', file: './routes/search' },\r\n ];\r\n"
                },
                {
                    "date": 1757347281242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,11 @@\n   { path: '/api/email', file: './routes/email' },\r\n   { path: '/api/search', file: './routes/search' },\r\n ];\r\n \r\n+// Registrar rotas adicionais (Agenda - funcionÃ¡rios)\r\n+routes.push({ path: '/api/func', file: './routes/funcAgenda' });\r\n+\r\n // Carrega cada rota\r\n routes.forEach(r => app.use(r.path, require(r.file)));\r\n \r\n // WebSockets\r\n"
                }
            ],
            "date": 1756570617632,
            "name": "Commit-0",
            "content": "const express = require('express');\r\nconst http = require('http');\r\nconst { Server } = require(\"socket.io\");\r\nconst cors = require('cors');\r\nconst dotenv = require('dotenv');\r\nconst connectDB = require('./config/db');\r\n\r\n// Importar Rotas\r\nconst productRoutes = require('./routes/products');\r\nconst categoryRoutes = require('./routes/categories');\r\nconst authRoutes = require('./routes/auth');\r\nconst petRoutes = require('./routes/pets');\r\nconst jobRoutes = require('./routes/jobs');\r\nconst userRoutes = require('./routes/users');\r\nconst cartRoutes = require('./routes/cart');\r\nconst favoritesRoutes = require('./routes/favorites');\r\nconst storeRoutes = require('./routes/stores');\r\nconst vehicleRoutes = require('./routes/vehicles');\r\nconst deliveryZoneRoutes = require('./routes/deliveryZones');\r\nconst promocoesRoutes = require('./routes/promocoes');\r\nconst bannerRoutes = require('./routes/banners');\r\nconst addressRoutes = require('./routes/addresses');\r\nconst shippingRoutes = require('./routes/shipping');\r\n\r\ndotenv.config();\r\nconnectDB();\r\n\r\nconst app = express();\r\nconst server = http.createServer(app); \r\nconst io = new Server(server, { \r\n    cors: {\r\n        origin: \"*\",\r\n        methods: [\"GET\", \"POST\"]\r\n    }\r\n});\r\n\r\n// Middleware para passar a instÃ¢ncia 'io' para as rotas\r\napp.set('socketio', io);\r\n\r\n// Middleware\r\napp.use(express.json());\r\napp.use(cors());\r\napp.use(express.static('public'));\r\n\r\n// Rotas da API\r\napp.use('/api/products', productRoutes);\r\napp.use('/api/categories', categoryRoutes);\r\napp.use('/api/auth', authRoutes);\r\napp.use('/api/users', userRoutes);\r\napp.use('/api/cart', cartRoutes);\r\napp.use('/api/favorites', favoritesRoutes);\r\napp.use('/api/stores', storeRoutes);\r\napp.use('/api/vehicles', vehicleRoutes);\r\napp.use('/api/delivery-zones', deliveryZoneRoutes);\r\napp.use('/api/promocoes', promocoesRoutes);\r\napp.use('/api/banners', bannerRoutes);\r\napp.use('/api/pets', petRoutes);\r\napp.use('/api/jobs', jobRoutes);\r\napp.use('/api/addresses', addressRoutes);\r\napp.use('/api/shipping', shippingRoutes);\r\n\r\napp.use('/api/admin/users', require('./routes/adminUsers'));\r\n\r\n\r\n// LÃ³gica do Socket.IO\r\nio.on('connection', (socket) => {\r\n  console.log('Um utilizador conectou-se via WebSocket');\r\n  socket.on('disconnect', () => {\r\n    console.log('Utilizador desconectou-se');\r\n  });\r\n});\r\n\r\n\r\nconst PORT = process.env.PORT || 3000;\r\nserver.listen(PORT, () => console.log(`Servidor a rodar (com WebSockets) na porta ${PORT}`));"
        }
    ]
}