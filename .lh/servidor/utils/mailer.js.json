{
    "sourceFile": "servidor/utils/mailer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756828988897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756829418618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,52 @@\n const nodemailer = require('nodemailer');\r\n \r\n-const transporter = nodemailer.createTransport({\r\n-  host: process.env.ZOHO_SMTP_HOST || 'smtp.zoho.com',\r\n-  port: Number(process.env.ZOHO_SMTP_PORT) || 465,\r\n-  secure: (process.env.ZOHO_SMTP_SECURE || 'true') === 'true', // true p/ 465\r\n-  auth: {\r\n-    user: process.env.ZOHO_SMTP_USER,\r\n-    pass: process.env.ZOHO_SMTP_PASS,\r\n-  },\r\n-  tls: {\r\n-    // Zoho usa certificado v√°lido; mantemos ON para produ√ß√£o\r\n-    rejectUnauthorized: true,\r\n-  },\r\n-});\r\n+function readEnv() {\r\n+  return {\r\n+    host: process.env.ZOHO_SMTP_HOST || 'smtp.zoho.com',\r\n+    port: Number(process.env.ZOHO_SMTP_PORT || 465),\r\n+    secure: String(process.env.ZOHO_SMTP_SECURE || 'true') === 'true',\r\n+    user: (process.env.ZOHO_SMTP_USER || '').trim(),\r\n+    pass: (process.env.ZOHO_SMTP_PASS || '').trim(),\r\n+    fromName: process.env.ZOHO_FROM_NAME || 'E o Bicho',\r\n+    fromEmail:\r\n+      (process.env.ZOHO_FROM_EMAIL || process.env.ZOHO_SMTP_USER || '').trim(),\r\n+  };\r\n+}\r\n \r\n-/**\r\n- * Envia e-mail\r\n- * @param {Object} params\r\n- * @param {string|string[]} params.to - destinat√°rio(s)\r\n- * @param {string} params.subject\r\n- * @param {string} [params.html]\r\n- * @param {string} [params.text]\r\n- * @param {string} [params.replyTo]\r\n- * @param {string} [params.fromEmail]\r\n- * @param {string} [params.fromName]\r\n- */\r\n+function assertCreds(env) {\r\n+  if (!env.user || !env.pass) {\r\n+    const msg =\r\n+      'SMTP sem credenciais: verifique ZOHO_SMTP_USER e ZOHO_SMTP_PASS no .env (use App Password do Zoho).';\r\n+    throw new Error(msg);\r\n+  }\r\n+}\r\n+\r\n+let _transporter = null;\r\n+\r\n+function getTransporter() {\r\n+  if (_transporter) return _transporter;\r\n+\r\n+  const env = readEnv();\r\n+  assertCreds(env);\r\n+\r\n+  _transporter = nodemailer.createTransport({\r\n+    host: env.host,\r\n+    port: env.port,\r\n+    secure: env.secure, // true p/ 465, false p/ 587\r\n+    auth: { user: env.user, pass: env.pass },\r\n+    tls: { rejectUnauthorized: true },\r\n+  });\r\n+\r\n+  return _transporter;\r\n+}\r\n+\r\n async function sendMail({ to, subject, html, text, replyTo, fromEmail, fromName }) {\r\n-  const from = `${fromName || process.env.ZOHO_FROM_NAME || 'E o Bicho'} <${fromEmail || process.env.ZOHO_FROM_EMAIL || process.env.ZOHO_SMTP_USER}>`;\r\n+  const env = readEnv();\r\n+  const transporter = getTransporter();\r\n \r\n+  const from = `${fromName || env.fromName} <${fromEmail || env.fromEmail}>`;\r\n+\r\n   const info = await transporter.sendMail({\r\n     from,\r\n     to,\r\n     subject,\r\n@@ -46,12 +64,15 @@\n }\r\n \r\n async function verifyMailer() {\r\n   try {\r\n+    const env = readEnv();\r\n+    assertCreds(env);\r\n+    const transporter = getTransporter();\r\n     await transporter.verify();\r\n-    console.log('üì® SMTP (Zoho) pronto para enviar.');\r\n+    console.log(`üì® SMTP Zoho OK (${env.host}:${env.port}, user=${env.user})`);\r\n   } catch (err) {\r\n     console.error('‚ùå Falha ao verificar SMTP Zoho:', err.message);\r\n   }\r\n }\r\n \r\n-module.exports = { transporter, sendMail, verifyMailer };\r\n+module.exports = { sendMail, verifyMailer };\r\n"
                }
            ],
            "date": 1756828988897,
            "name": "Commit-0",
            "content": "const nodemailer = require('nodemailer');\r\n\r\nconst transporter = nodemailer.createTransport({\r\n  host: process.env.ZOHO_SMTP_HOST || 'smtp.zoho.com',\r\n  port: Number(process.env.ZOHO_SMTP_PORT) || 465,\r\n  secure: (process.env.ZOHO_SMTP_SECURE || 'true') === 'true', // true p/ 465\r\n  auth: {\r\n    user: process.env.ZOHO_SMTP_USER,\r\n    pass: process.env.ZOHO_SMTP_PASS,\r\n  },\r\n  tls: {\r\n    // Zoho usa certificado v√°lido; mantemos ON para produ√ß√£o\r\n    rejectUnauthorized: true,\r\n  },\r\n});\r\n\r\n/**\r\n * Envia e-mail\r\n * @param {Object} params\r\n * @param {string|string[]} params.to - destinat√°rio(s)\r\n * @param {string} params.subject\r\n * @param {string} [params.html]\r\n * @param {string} [params.text]\r\n * @param {string} [params.replyTo]\r\n * @param {string} [params.fromEmail]\r\n * @param {string} [params.fromName]\r\n */\r\nasync function sendMail({ to, subject, html, text, replyTo, fromEmail, fromName }) {\r\n  const from = `${fromName || process.env.ZOHO_FROM_NAME || 'E o Bicho'} <${fromEmail || process.env.ZOHO_FROM_EMAIL || process.env.ZOHO_SMTP_USER}>`;\r\n\r\n  const info = await transporter.sendMail({\r\n    from,\r\n    to,\r\n    subject,\r\n    html,\r\n    text,\r\n    replyTo,\r\n  });\r\n\r\n  return {\r\n    messageId: info.messageId,\r\n    accepted: info.accepted,\r\n    rejected: info.rejected,\r\n    response: info.response,\r\n  };\r\n}\r\n\r\nasync function verifyMailer() {\r\n  try {\r\n    await transporter.verify();\r\n    console.log('üì® SMTP (Zoho) pronto para enviar.');\r\n  } catch (err) {\r\n    console.error('‚ùå Falha ao verificar SMTP Zoho:', err.message);\r\n  }\r\n}\r\n\r\nmodule.exports = { transporter, sendMail, verifyMailer };\r\n"
        }
    ]
}